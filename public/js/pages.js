/*! For license information please see pages.js.LICENSE.txt */
(() => {
    var __webpack_modules__ = {
            8095: () => {
                "use strict";
                listen("click", ".delete-accountant-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#accountantURL").val() + "/" + t, "#accountantsTbl", $("#Accountant").val())
                })), listenChange(".accountant-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#accountantURL").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listen("click", "#resetFilter", (function () {
                    $("#accountant_filter_status").val(0).trigger("change"), hideDropdownManually($("#accountantFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#accountant_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            3106: () => {},
            5250: () => {
                "use strict";

                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createAccountantForm").length && !$("#editAccountantForm").length) return !1;
                    var e = $("#bloodGroup"),
                        t = $("#birthDate"),
                        a = $("#createAccountantForm"),
                        i = $("#editAccountantForm");
                    t.length && $("#birthDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), a.length && a.find("input:text:visible:first").focus(), i.length && i.find("input:text:visible:first").focus(), e.length && $("#bloodGroup").select2({
                        width: "100%"
                    })
                })), listenChange(".accountantProfileImage", (function () {
                    var t = e($(this), "#customValidationErrorsBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#customValidationErrorsBox").removeClass("d-none hide"), $("#customValidationErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=customValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#customValidationErrorsBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                })), listenChange(".editAccountantProfileImage", (function () {
                    var t = e($(this), "#editAccountantErrorBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#editAccountantErrorBox").removeClass("d-none hide"), $("#editAccountantErrorBox").text("The image must be a file of type: jpg, jpeg, png.").show(), $("[id=editAccountantErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editAccountantErrorBox").html("").hide(), displayDocument(this, "#editAccountantErrorBox", t))
                })), listenClick(".remove-accountant-image", (function () {
                    defaultImagePreview("#previewImage", 1)
                })), listenSubmit("#createAccountantForm, #editAccountantForm", (function () {
                    if ("" !== $(".error-msg").text()) return $("#phoneNumber").focus(), !1
                }))
            },
            4111: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addAccountForm").length && !$("#editAccountForm").length) return !1
                })), listenChange(".account-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $(".indexAccountUrl").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listenSubmit("#addAccountForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnAccountSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#indexAccountCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_accounts_modal")
                })), listenSubmit("#editAccountForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editAccountSave");
                    t.button("loading");
                    var a = $("#accountId").val(),
                        i = $("#indexAccountUrl").val() + "/" + +a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "PUT"
                        };
                    $("#accountShowUrl").length ? (editRecordWithForm(n, t, "#edit_accounts_modal"), window.location.href = $("#accountShowUrl").val()) : editRecordWithForm(n, t, "#edit_accounts_modal")
                })), listen("click", ".account-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexAccountUrl").val() + "/" + +t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#accountId").val(e.data.id), $("#editName").val(e.data.name), $("#editDescription").val(e.data.description), e.data.status && $("#editIsActive").val(1).prop("checked", !0), 1 == e.data.type ? $("#editDebit").prop("checked", !0) : $("#editCredit").prop("checked", !0), $("#edit_accounts_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".account-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexAccountUrl").val() + "/" + +t, "", $("#Account").val())
                })), listenChange("#account_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenChange("#account_filter_type", (function () {
                    window.livewire.emit("changeTypeFilter", "account_filter_type", $(this).val())
                })), listen("click", "#accountResetFilter", (function () {
                    $("#account_filter_status, #account_filter_type").val(0).trigger("change"), hideDropdownManually($("#accountantFilterBtn"), $(".dropdown-menu"))
                })), listenHiddenBsModal("#add_accounts_modal", (function () {
                    resetModalForm("#addAccountForm", "#validationErrorsBox")
                })), listenHiddenBsModal("#edit_accounts_modal", (function () {
                    resetModalForm("#editAccountForm", "#editValidationErrorsBox")
                }))
            },
            8277: () => {},
            4376: () => {},
            9960: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    $("#adminBirthDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), $("#editAdminBirthDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), listenClick(".delete-admin-btn", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        deleteItem($("#adminURL").val() + "/" + t, "", $("#admin").val())
                    }))
                })), listenSubmit("#createAdminForm, #editAdminForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenChange(".admin-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#adminURL").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenChange("#admin_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listen("click", "#accountResetFilter", (function () {
                    $("#admin_filter_status").val(0).trigger("change"), hideDropdownManually($("#adminFilterBtn"), $(".dropdown-menu"))
                })), listenChange(".adminProfileImage", (function () {
                    var t = e($(this), "#adminErrorBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#adminErrorBox").removeClass("d-none hide"), $("#adminErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=adminErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#adminErrorBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                })), listenChange(".adminProfileImage", (function () {
                    var t = e($(this), "#editAdminErrorBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#editAdminErrorBox").removeClass("d-none hide"), $("#editAdminErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editAdminErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editAdminErrorBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                }))
            },
            7684: () => {
                "use strict";
                listen("click", ".advance-payment-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexAdvancedPaymentUrl").val() + "/" + t, "", $("#advancedPayment").val())
                }))
            },
            4173: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addAdvancedPaymentForm").length && !$("#editAdvancedPaymentsForm").length) return !1;
                    var e = $("#advancedPaymentDate"),
                        t = $("#editAdvancedPaymentDate"),
                        a = $("#advancePaymentPatientId"),
                        i = $("#editPatientId");
                    e.length && $("#advancedPaymentDate").flatpickr({
                        defaultDate: new Date,
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    });
                    t.length && $("#editAdvancedPaymentDate").flatpickr({
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    });
                    a.length && $("#advancePaymentPatientId").select2({
                        dropdownParent: $("#add_advanced_payments_modal")
                    });
                    i.length && $("#editPatientId").select2({
                        dropdownParent: $("#edit_advanced_payments_modal")
                    })
                })), listenShownBsModal("#add_advanced_payments_modal, #edit_advanced_payments_modal", (function () {
                    $("#patientId, #editPatientId:first").focus(), $("#advancePaymentPatientId").select2({
                        width: "100%",
                        dropdownParent: $("#add_advanced_payments_modal")
                    }), $("#editPatientId").select2({
                        dropdownParent: $("#edit_advanced_payments_modal")
                    });
                    var e = Math.random().toString(36).substr(2, 8).toUpperCase();
                    $("#receiptNoId").val(e)
                })), listenSubmit("#addAdvancedPaymentForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#advancedPaymentSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexAdvancePaymentCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_advanced_payments_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#advancedPaymentErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listen("click", ".advance-payment-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: route("advanced-payments.edit", t),
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#advancePaymentId").val(e.data.id), $("#editPatientId").val(e.data.patient_id).trigger("change.select2"), $("#editReceiptNo").val(e.data.receipt_no), $("#editAmount").val(e.data.amount), $(".price-input").trigger("input"), $("#editAdvancedPaymentDate").val(format(e.data.date, "YYYY-MM-DD")), $("#edit_advanced_payments_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editAdvancedPaymentsForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editAdvancedPaymentSave");
                    t.button("loading");
                    var a = $("#advancePaymentId").val();
                    $.ajax({
                        url: $(".advancedPaymentUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_advanced_payments_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_advanced_payments_modal", (function () {
                    resetModalForm("#addAdvancedPaymentForm", "#advancedPaymentErrorsBox"), $("#advancedPaymentDate").flatpickr({
                        defaultDate: new Date,
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    }), $("#advancePaymentPatientId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_advanced_payments_modal", (function () {
                    resetModalForm("#editAdvancedPaymentsForm", "#editAdvancedPaymentErrorsBox")
                }))
            },
            3362: () => {
                "use strict";
                listenClick(".ambulance-call-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showAmbulanceCallUrl").val() + "/" + t, "", $("#ambulanceCalls").val())
                }))
            },
            9932: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createAmbulanceCall").length && !$("#editAmbulanceCall").length) return !1;
                    var e = $("#callAmbulanceId"),
                        t = $("#ambulanceCallPatientId"),
                        a = $("#ambulanceCallDate");
                    e.length && $("#callAmbulanceId").select2({
                        width: "100%"
                    }), t.length && $("#ambulanceCallPatientId").select2({
                        width: "100%"
                    }), a.length && $("#ambulanceCallDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    }), $(".price-input").trigger("input")
                })), listenChange("#callAmbulanceId", (function () {
                    $("#ambulanceCallDriverName").val(""), isEmpty($(this).val()) || $.ajax({
                        url: $(".getDriverNameUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            $("#ambulanceCallDriverName").val(e.data)
                        },
                        error: function (e) {
                            printErrorMessage("#ambulanceCallValidationErrorsBox", e)
                        }
                    })
                })), listenSubmit("#createAmbulanceCall, #editAmbulanceCall", (function () {
                    $("#ambulanceCallSaveBtn").attr("disabled", !0)
                }))
            },
            1676: () => {
                "use strict";
                listen("click", ".ambulance-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexAmbulanceUrl").val() + "/" + t, "", $("#Ambulance").val())
                })), listenChange(".ambulance-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexAmbulanceUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listenChange("#ambulance_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#ambulanceResetFilter", (function () {
                    $("#ambulance_filter_status").val(0).trigger("change"), hideDropdownManually($("#ambulanceFilterBtn"), $(".dropdown-menu"))
                }))
            },
            3616: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createAmbulanceForm").length && !$("#editAmbulanceForm").length) return !1;
                    var e = $("#vehicleType"),
                        t = $("#createAmbulanceForm"),
                        a = $("#editAmbulanceForm");
                    e.length && $("#vehicleType").select2({
                        width: "100%"
                    }), t.length && $("#createAmbulanceForm").find("input:text:visible:first").focus(), a.length && $("#editAmbulanceForm").find("input:text:visible:first").focus()
                })), listenSubmit("#createAmbulanceForm, #editAmbulanceForm", (function () {
                    if ($(".btnSave").attr("disabled", !0), "" !== $(".error-msg").text()) return $(".phoneNumber").focus(), $(".btnSave").attr("disabled", !1), !1
                })), listen("keyup keypress", "#createAmbulanceForm, #editAmbulanceForm", (function (e) {
                    if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1
                }))
            },
            770: () => {
                "use strict";

                function e(e) {
                    var t = new Date;
                    return t.setHours(e.substring(11, 13)), t.setMinutes(e.substring(14, 16)), t
                }
                var t, a;
                document.addEventListener("turbo:load", (function () {
                    if (!$("#calendar").length) return !1;
                    var e = $("#patientIdAppointment"),
                        t = $("#doctorIdAppointment");
                    e.length && $("#patientIdAppointment").select2({
                        width: "100%",
                        dropdownParent: $("#addAppointmentModal")
                    });
                    t.length && $("#doctorIdAppointment").select2({
                        width: "100%",
                        dropdownParent: $("#addAppointmentModal")
                    });
                    var a = document.getElementById("calendar");
                    $("#calendar").length && (screenLock(), $.ajax({
                        url: "calendar-list",
                        type: "GET",
                        dataType: "json",
                        success: function (e) {
                            screenUnLock(), new FullCalendar.Calendar(a, {
                                themeSystem: "bootstrap5",
                                height: 750,
                                locale: $(".getLanguage").val(),
                                headerToolbar: {
                                    left: "title",
                                    center: "prev,next today",
                                    right: "dayGridMonth,timeGridWeek,timeGridDay"
                                },
                                buttonText: {
                                    today: $("#todayText").val(),
                                    month: $("#monthText").val(),
                                    week: $("#weekText").val(),
                                    day: $("#dayText").val()
                                },
                                initialDate: new Date,
                                initialView: "dayGridMonth",
                                editable: !1,
                                selectable: !0,
                                selectMirror: !0,
                                timeZone: "UTC",
                                dayMaxEvents: !0,
                                select: function (e) {
                                    $("#opdDateAppointment").val(moment(e.startStr).format("YYYY-MM-DD"));
                                    var t = moment().format("YYYY-MM-DD");
                                    e.startStr >= t && 1 != $("#isDoctor").val() && $("#addAppointmentModal").modal("show")
                                },
                                eventDidMount: function (e, t) {
                                    $(t).tooltip({
                                        title: e.title,
                                        container: "body"
                                    })
                                },
                                events: e.data,
                                eventTimeFormat: {
                                    hour12: !0,
                                    hour: "2-digit",
                                    minute: "2-digit"
                                },
                                loading: function (e) {
                                    e || setTimeout((function () {
                                        $("#calendar button.fc-today-button").removeClass("disabled").prop("disabled", !1)
                                    }), 100)
                                },
                                eventClick: function (e) {
                                    var t;
                                    t = e.event.id, $.ajax({
                                        url: "appointment-detail/" + t,
                                        type: "GET",
                                        beforeSend: function () {
                                            screenLock()
                                        },
                                        success: function (e) {
                                            $("#showPatientName").text(e.data.patient), $("#showDepartmentName").text(e.data.department), $("#showDoctorName").text(e.data.doctor), $("#showOpdDate").text(e.data.opdDate), $("#showStatus").text(e.data.status), $("#showIsCompleted").text(e.data.is_completed), $("#showProblem").text(function (e, t) {
                                                var a = "";
                                                if (null != e) {
                                                    for (; e.length > 0;) a += e.substring(0, t) + "\n", e = e.substring(t);
                                                    return a
                                                }
                                                return Lang.get("messages.common.n/a")
                                            }(e.data.problem, 30)), $(".tooltip ").tooltip("hide"), $("#appointmentDetailModal").modal("show")
                                        },
                                        complete: function () {
                                            screenUnLock()
                                        }
                                    })
                                }
                            }).render()
                        },
                        error: function (e) {
                            console.log(e.responseJSON.message)
                        }
                    }))
                })), listenShownBsModal("#addAppointmentModal", (function () {
                    $("#patientIdAppointment:first").focus()
                })), listenClick(".time-interval", (function (e) {
                    var a = $(e.currentTarget).attr("data-id");
                    $(this).data("id") == a && $(this).parent().hasClass("booked") && $(".time-slot-book").css("background-color", "#ffa0a0"), t = $(this).text(), $(".time-slot").removeClass("time-slot-book"), $(this).parent().addClass("time-slot-book")
                })), listenSubmit("#calenderAppointmentForm", (function (e) {
                    if (null == t || "" == t) return $("#calenderAppointmentErrorsBox").show().removeClass("d-none").html(Lang.get("messages.appointment.please_select_appointment_time_slot")), $(".alert-danger").delay(5e3).slideUp(300, (function () {
                        $(".alert-danger").attr("style", "display:none")
                    })), !1;
                    e.preventDefault(), screenLock();
                    var a = $(this).serialize() + "&time=" + t;
                    $.ajax({
                        url: $("#calenderAppointmentSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: a,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.href = $("#calenderIndexPage").val()
                        },
                        error: function (e) {
                            printErrorMessage("#calenderAppointmentErrorsBox", e), screenUnLock()
                        }
                    })
                }));
                var i, n, r = !1;
                listenChange("#doctorIdAppointment", (function () {
                    if (r && ($(".error-message").css("display", "none"), r = !0), $(".error-message").css("display", "none"), a = $(this).val(), r = !0, "" !== $("#opdDateAppointment").val()) {
                        if ($(".doctor-schedule").css("display", "none"), $(".error-message").css("display", "none"), $(".available-slot-heading").css("display", "none"), $(".color-information").css("display", "none"), $(".time-slot").remove(), "" == $("#doctorIdAppointment").val()) return $("#calenderAppointmentErrorsBox").show().html("Please select Doctor"), $("#calenderAppointmentErrorsBox").delay(5e3).fadeOut(), $("#opdDateAppointment").val(""), $("#opdDateAppointment").data("DateTimePicker").clear(), !1;
                        r = $("#opdDateAppointment").val();
                        var t = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][new Date(r).getDay()];
                        if (null == t || "" == t) return !1;
                        if ($.ajax({
                                type: "GET",
                                url: $("#doctorScheduleList").val(),
                                data: {
                                    day_name: t,
                                    doctor_id: a
                                },
                                success: function (t) {
                                    if (t.success && "" != t.data)
                                        if (0 != t.data.scheduleDay.length) {
                                            var a = r + " " + t.data.scheduleDay[0].available_from,
                                                n = r + " " + t.data.scheduleDay[0].available_to,
                                                s = t.data.perPatientTime[0].per_patient_time.split(":"),
                                                o = 60 * +s[0] + +s[1],
                                                d = e(a),
                                                l = e(n);
                                            if ((i = function (e, t, a) {
                                                    for (var i = []; e < t;) i.push(e.toTimeString().substring(0, 5)), e.setMinutes(e.getMinutes() + a);
                                                    return i
                                                }(d, l, o)).length > 0) {
                                                var c;
                                                $(".available-slot-heading").css("display", "block"), $(".color-information").css("display", "block");
                                                var u = "";
                                                for (c = 0; c < i.length; ++c) {
                                                    var m = [{
                                                        index: c,
                                                        timeSlot: i[c]
                                                    }];
                                                    u += prepareTemplateRender("#appointmentSlotTemplate", m)
                                                }
                                                $(".available-slot").append(u)
                                            }
                                            "00:00:00" != t.data.scheduleDay[0].available_from && "00:00:00" != t.data.scheduleDay[0].available_to && a != n ? ($(".doctor-schedule").css("display", "block"), $(".color-information").css("display", "block"), $(".day-name").html(t.data.scheduleDay[0].available_on), $(".schedule-time").html("[" + t.data.scheduleDay[0].available_from + " - " + t.data.scheduleDay[0].available_to + "]")) : ($(".doctor-schedule").css("display", "none"), $(".color-information").css("display", "none"), $(".error-message").css("display", "block"), $(".error-message").html(Lang.get("messages.appointment.doctor_schedule_not_available_on_this_date")))
                                        } else $(".doctor-schedule").css("display", "none"), $(".color-information").css("display", "none"), $(".error-message").css("display", "block"), $(".error-message").html(Lang.get("messages.appointment.doctor_schedule_not_available_on_this_date"))
                                }
                            }), $(".isCreate").val()) {
                            setTimeout((function () {
                                var e = null;
                                $(".isCreate").val() && (e = {
                                    editSelectedDate: r,
                                    doctor_id: a
                                }), $.ajax({
                                    url: $("#getBookingSlot").val(),
                                    type: "GET",
                                    data: e,
                                    success: function (e) {
                                        n = e.data.bookingSlotArr, e.data.hasOwnProperty("onlyTime") ? (e.data.bookingSlotArr.length > 0 && (editTimeSlot = e.data.onlyTime.toString(), $.each(e.data.bookingSlotArr, (function (e, t) {
                                            $.each(i, (function (e, a) {
                                                t == a && $(".time-interval").each((function () {
                                                    $(this).data("id") == e && $(this).html() != editTimeSlot && ($(this).parent().css({
                                                        "background-color": "#ffa721",
                                                        border: "1px solid #ffa721",
                                                        color: "#ffffff"
                                                    }), $(this).parent().addClass("booked"), $(this).parent().children().prop("disabled", !0))
                                                }))
                                            }))
                                        }))), $(".time-interval").each((function () {
                                            $(this).html() == editTimeSlot && e.data.bookingSlotArr.length > 0 && ($(this).parent().addClass("time-slot-book"), $(this).parent().removeClass("booked"), $(this).parent().children().prop("disabled", !1), $(this).click())
                                        }))) : n.length > 0 && $.each(n, (function (e, t) {
                                            $.each(i, (function (e, a) {
                                                t == a && $(".time-interval").each((function () {
                                                    $(this).data("id") == e && ($(this).parent().addClass("time-slot-book"), $(".time-slot-book").css({
                                                        "background-color": "#ffa721",
                                                        border: "1px solid #ffa721",
                                                        color: "#ffffff"
                                                    }), $(this).parent().addClass("booked"), $(this).parent().children().prop("disabled", !0))
                                                }))
                                            }))
                                        }))
                                    }
                                })
                            }), 200)
                        }
                    }
                })), listenHiddenBsModal("#addAppointmentModal", (function () {
                    resetModalForm("#calenderAppointmentForm", "#calenderAppointmentErrorsBox"), $(".day-name").html(""), $(".schedule-time").html(""), $(".doctor-schedule").css("display", "none"), $(".error-message").css("display", "none"), $(".available-slot-heading").css("display", "none"), $(".available-slot").html(""), $(".color-information").css("display", "none"), t = null, $("#patientIdAppointment, #doctorIdAppointment").val("").trigger("change.select2")
                }))
            },
            2880: () => {
                "use strict";

                function e(e, t, a) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: a,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = a, e
                }
                document.addEventListener("turbo:load", (function () {
                    var t = $("#time_range"),
                        a = moment().startOf("week"),
                        i = moment().endOf("week"),
                        n = "",
                        r = "";
                    $("#appointmentStatus").length && $("#appointmentStatus").select2();

                    function s(e, t) {
                        $("#time_range").html(e.format("MMM D, YYYY") + " - " + t.format("MMM D, YYYY"))
                    }
                    if (t.length) {
                        var o;
                        Lang.setLocale($(".userCurrentLanguage").val()), t.daterangepicker({
                            startDate: a,
                            endDate: i,
                            locale: {
                                customRangeLabel: Lang.get("messages.common.custom"),
                                applyLabel: Lang.get("messages.common.apply"),
                                cancelLabel: Lang.get("messages.common.cancel"),
                                fromLabel: Lang.get("messages.common.from"),
                                toLabel: Lang.get("messages.common.to"),
                                monthNames: [Lang.get("messages.months.jan"), Lang.get("messages.months.feb"), Lang.get("messages.months.mar"), Lang.get("messages.months.apr"), Lang.get("messages.months.may"), Lang.get("messages.months.jun"), Lang.get("messages.months.jul"), Lang.get("messages.months.aug"), Lang.get("messages.months.sep"), Lang.get("messages.months.oct"), Lang.get("messages.months.nov"), Lang.get("messages.months.dec")],
                                daysOfWeek: [Lang.get("messages.weekdays.sun"), Lang.get("messages.weekdays.mon"), Lang.get("messages.weekdays.tue"), Lang.get("messages.weekdays.wed"), Lang.get("messages.weekdays.thu"), Lang.get("messages.weekdays.fri"), Lang.get("messages.weekdays.sat")]
                            },
                            ranges: (o = {}, e(o, Lang.get("messages.appointment.today"), [moment(), moment()]), e(o, Lang.get("messages.appointment.yesterday"), [moment().subtract(1, "days"), moment().subtract(1, "days")]), e(o, Lang.get("messages.appointment.this_week"), [moment().startOf("week"), moment().endOf("week")]), e(o, Lang.get("messages.appointment.last_7_days"), [moment().subtract(6, "days"), moment()]), e(o, Lang.get("messages.appointment.last_30_days"), [moment().subtract(29, "days"), moment()]), e(o, Lang.get("messages.appointment.this_month"), [moment().startOf("month"), moment().endOf("month")]), e(o, Lang.get("messages.appointment.last_month"), [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")]), o)
                        }, s), s(a, i), t.on("apply.daterangepicker", (function (e, t) {
                            n = t.startDate.format("YYYY-MM-D  H:mm:ss"), r = t.endDate.format("YYYY-MM-D  H:mm:ss"), window.livewire.emit("changeDateFilter", "statusFilter", [n, r])
                        }))
                    }

                    function d(e, t, a, i) {
                        swal({
                            title: Lang.get("messages.appointment.change_status"),
                            text: Lang.get("messages.appointment.are_you_sure_want_to_change") + " " + a + " ?",
                            type: "warning",
                            icon: "warning",
                            showCancelButton: !0,
                            closeOnConfirm: !1,
                            confirmButtonColor: "#50cd89",
                            showLoaderOnConfirm: !0,
                            buttons: {
                                confirm: Lang.get("messages.common.yes"),
                                cancel: Lang.get("messages.common.no")
                            }
                        }).then((function (t) {
                            t && function (e, t, a, i) {
                                $.ajax({
                                    url: e,
                                    type: "POST",
                                    success: function (e) {
                                        e.success && Livewire.emit("refresh"), swal({
                                            title: Lang.get("messages.appointment.changed_appointment"),
                                            text: a + " " + Lang.get("messages.appointment.has_been_changed"),
                                            icon: "success",
                                            confirmButtonColor: "#50cd89",
                                            buttons: {
                                                confirm: Lang.get("messages.common.ok")
                                            },
                                            timer: 2e3
                                        })
                                    },
                                    error: function (e) {
                                        swal({
                                            title: "Error",
                                            icon: "error",
                                            text: e.responseJSON.message,
                                            type: "error",
                                            confirmButtonColor: "#50cd89",
                                            buttons: {
                                                confirm: Lang.get("messages.common.ok")
                                            },
                                            timer: 5e3
                                        })
                                    }
                                })
                            }(e, 0, a)
                        }))
                    }
                    listenClick(".appointment-delete-btn", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        deleteItem($(".appointmentURL").val() + "/" + t, "", $("#Appointment").val())
                    })), listenChange("#appointmentStatus", (function () {
                        var e = $(this).val();
                        window.livewire.emit("changeFilter", "statusFilter", [n, r, e])
                    })), listenClick("#appointmentResetFilter", (function () {
                        var e = $("#time_range");
                        n = e.data("daterangepicker").setStartDate(moment().startOf("week").format("MM/DD/YYYY")), r = e.data("daterangepicker").setEndDate(moment().endOf("week").format("MM/DD/YYYY")), $("#appointmentStatus").val(2).trigger("change"), hideDropdownManually($("#appointmentFilterBtn"), $(".dropdown-menu"))
                    })), listenClick(".appointment-complete-status", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        d($(".appointmentURL").val() + "/" + t + "/status", 0, Lang.get("messages.web_menu.appointment") + " " + Lang.get("messages.user.status"))
                    })), listenClick(".cancel-appointment", (function () {
                        var e = $(this).attr("data-id");
                        cancelAppointment($(".appointmentURL").val() + "/" + e + "/cancel", "", Lang.get("messages.web_menu.appointment"))
                    }))
                }))
            },
            3879: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#appointmentForm").length && !$("#editAppointmentForm").length) return !1;
                    var e, t, a, i = function (e) {
                            var t = new Date;
                            return t.setHours(e.substring(11, 13)), t.setMinutes(e.substring(14, 16)), t
                        },
                        n = $("#appointmentPatientId"),
                        r = $("#appointmentDoctorId"),
                        s = $("#appointmentDepartmentId");
                    n.length && ($("#appointmentPatientId").select2({
                        width: "100%"
                    }), $("#appointmentPatientId").first().focus()), r.length && $("#appointmentDoctorId").select2({
                        width: "100%"
                    }), s.length && $("#appointmentDepartmentId").select2({
                        width: "100%"
                    }), Lang.setLocale($(".userCurrentLanguage").val());
                    var o, d = $(".opdDate").flatpickr({
                        enableTime: !1,
                        minDate: moment(new Date).format("YYYY-MM-DD"),
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val(),
                        onChange: function (n, r, s) {
                            if (!isEmpty(r)) {
                                if ($(".doctor-schedule").css("display", "none"), $(".error-message").css("display", "none"), $(".available-slot-heading").css("display", "none"), $(".color-information").css("display", "none"), $(".available-slot").css("display", "none"), $(".time-slot").remove(), "" == $("#appointmentDepartmentId").val()) return $("#createAppointmentErrorsBox").show().html(Lang.get("messages.appointment.please_select_doctor_department")), $("#createAppointmentErrorsBox").delay(5e3).fadeOut(), $(".opdDate").val(""), d.clear(), !1;
                                if ("" == $("#appointmentDoctorId").val()) return $("#createAppointmentErrorsBox").show().html(Lang.get("messages.appointment.please_select_doctor")), $("#createAppointmentErrorsBox").delay(5e3).fadeOut(), $(".opdDate").val(""), d.clear(), !1;
                                var l = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][new Date(r).getDay()];
                                if (e = r, null == l || "" == l) return !1;
                                if ($.ajax({
                                        type: "GET",
                                        url: $(".doctorScheduleList").val(),
                                        data: {
                                            day_name: l,
                                            doctor_id: o
                                        },
                                        success: function (a) {
                                            if (a.success && "" != a.data)
                                                if (0 != a.data.scheduleDay.length) {
                                                    var n = "";
                                                    moment(new Date).format("YYYY-MM-DD") === r ? (n = moment().ceil(moment.duration(a.data.perPatientTime[0].per_patient_time).asMinutes(), "minute"), n = moment(n.toString()).format("H:mm:ss")) : n = a.data.scheduleDay[0].available_from;
                                                    var s = e + " " + n,
                                                        o = e + " " + a.data.scheduleDay[0].available_to,
                                                        d = a.data.perPatientTime[0].per_patient_time.split(":"),
                                                        l = 60 * +d[0] + +d[1],
                                                        c = i(s),
                                                        u = i(o);
                                                    if ((t = function (e, t, a) {
                                                            for (var i = []; e < t;) i.push(e.toTimeString().substring(0, 5)), e.setMinutes(e.getMinutes() + a);
                                                            return i
                                                        }(c, u, l)).length > 0) {
                                                        var m;
                                                        $(".available-slot-heading").css("display", "block"), $(".color-information").css("display", "block"), $(".available-slot").css("display", "block");
                                                        var _ = "";
                                                        for (m = 0; m < t.length; ++m) {
                                                            var p = [{
                                                                index: m,
                                                                timeSlot: t[m]
                                                            }];
                                                            _ += prepareTemplateRender("#appointmentSlotTemplate", p)
                                                        }
                                                        $(".available-slot").append(_)
                                                    }
                                                    "00:00:00" != n && "00:00:00" != a.data.scheduleDay[0].available_to && s != o ? ($(".doctor-schedule").css("display", "block"), $(".color-information").css("display", "block"), $(".available-slot").css("display", "block"), $(".day-name").html(a.data.scheduleDay[0].available_on), $(".schedule-time").html("[" + n + " - " + a.data.scheduleDay[0].available_to + "]")) : ($(".doctor-schedule").css("display", "none"), $(".color-information").css("display", "none"), $(".available-slot").css("display", "none"), $(".error-message").css("display", "block"), $(".error-message").html(Lang.get("messages.appointment.doctor_schedule_not_available_on_this_date")))
                                                } else $(".doctor-schedule").css("display", "none"), $(".color-information").css("display", "none"), $(".available-slot").css("display", "none"), $(".error-message").css("display", "block"), $(".error-message").html(Lang.get("messages.appointment.doctor_schedule_not_available_on_this_date"))
                                        },
                                        error: function (e) {
                                            displayErrorMessage(e.responseJSON.message)
                                        }
                                    }), $(".isCreate").val() || $(".isEdit").val()) {
                                    setTimeout((function () {
                                        if ($(".isCreate").val()) var i = {
                                            editSelectedDate: e,
                                            doctor_id: o
                                        };
                                        else i = {
                                            editSelectedDate: e,
                                            editId: $("#appointmentEditsID").val(),
                                            doctor_id: o
                                        };
                                        $.ajax({
                                            url: $(".getBookingSlot").val(),
                                            type: "GET",
                                            data: i,
                                            success: function (e) {
                                                a = e.data.bookingSlotArr, e.data.hasOwnProperty("onlyTime") ? (e.data.bookingSlotArr.length > 0 && (c = e.data.onlyTime.toString(), $.each(e.data.bookingSlotArr, (function (e, a) {
                                                    $.each(t, (function (e, t) {
                                                        a == t && $(".time-interval").each((function () {
                                                            $(this).data("id") == e && $(this).html() != c && ($(this).parent().css({
                                                                "background-color": "#ffa721",
                                                                border: "1px solid #ffa721",
                                                                color: "#ffffff"
                                                            }), $(this).parent().addClass("booked"), $(this).parent().children().prop("disabled", !0))
                                                        }))
                                                    }))
                                                }))), $(".time-interval").each((function () {
                                                    $(this).html() == c && e.data.bookingSlotArr.length > 0 && ($(this).parent().addClass("time-slot-book"), $(this).parent().removeClass("booked"), $(this).parent().children().prop("disabled", !1), $(this).click())
                                                }))) : a.length > 0 && $.each(a, (function (e, a) {
                                                    $.each(t, (function (e, t) {
                                                        a == t && $(".time-interval").each((function () {
                                                            $(this).data("id") == e && ($(this).parent().addClass("time-slot-book"), $(".time-slot-book").css({
                                                                "background-color": "#ffa721",
                                                                border: "1px solid #ffa721",
                                                                color: "#ffffff"
                                                            }), $(this).parent().addClass("booked"), $(this).parent().children().prop("disabled", !0))
                                                        }))
                                                    }))
                                                }))
                                            }
                                        })
                                    }), 200)
                                }
                            }
                        }
                    });
                    listenChange("#appointmentDepartmentId", (function () {
                        $(".error-message").css("display", "none"), d.clear(), $(".doctor-schedule").css("display", "none"), $(".available-slot-heading").css("display", "none"), $(".available-slot").css("display", "none"), $.ajax({
                            url: $(".doctorDepartmentUrl").val(),
                            type: "get",
                            dataType: "json",
                            data: {
                                id: $(this).val()
                            },
                            success: function (e) {
                                $("#appointmentDoctorId").empty(), $("#appointmentDoctorId").append($('<option value="">Select Doctor</option>')), $.each(e.data, (function (e, t) {
                                    $("#appointmentDoctorId").append($("<option></option>").attr("value", e).text(t))
                                }))
                            }
                        })
                    }));
                    var l, c, u = !1;
                    listenChange("#appointmentDoctorId", (function () {
                        u && ($(".doctor-schedule").css("display", "none"), $(".available-slot-heading").css("display", "none"), $(".available-slot").css("display", "none"), $(".error-message").css("display", "none"), d.clear(), u = !0), $(".error-message").css("display", "none"), o = $(this).val(), u = !0
                    })), $(".isEdit").val() && ($("#appointmentDoctorId").trigger("change", (function (e) {
                        o = $(this).val()
                    })), $(".opdDate").trigger("dp.change", (function () {
                        new Date($(this).val())
                    }))), listenClick(".time-interval", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        $(this).data("id") == t && $(this).parent().hasClass("booked") && $(".time-slot-book").css("background-color", "#ffa0a0"), l = $(this).text(), $(".time-slot").removeClass("time-slot-book"), $(this).parent().addClass("time-slot-book")
                    })), listenSubmit("#appointmentForm", (function (e) {
                        if (null == l || "" == l) return $("#createAppointmentErrorsBox").show().removeClass("d-none").html(Lang.get("messages.appointment.please_select_appointment_time_slot")), !1;
                        e.preventDefault(), screenLock();
                        var t = $(this).serialize() + "&time=" + l;
                        $.ajax({
                            url: $("#saveAppointmentURLID").val(),
                            type: "POST",
                            dataType: "json",
                            data: t,
                            success: function (e) {
                                displaySuccessMessage(e.message), window.location.href = $(".appointmentIndexPage").val()
                            },
                            error: function (e) {
                                printErrorMessage("#createAppointmentErrorsBox", e), screenUnLock()
                            },
                            complete: function () {
                                processingBtn("#appointmentForm", "#saveAppointment")
                            }
                        })
                    })), listenClick(".time-interval", (function () {
                        c = $(this).text()
                    })), listenSubmit("#editAppointmentForm", (function (e) {
                        if (null == c || "" == c) return $("#editAppointmentErrorsBox").show().html(Lang.get("messages.appointment.please_select_appointment_time_slot")), !1;
                        e.preventDefault(), screenLock();
                        var t = $(this).serialize() + "&time=" + c;
                        $.ajax({
                            url: $("#appointmentUpdateUrl").val(),
                            type: "POST",
                            dataType: "json",
                            data: t,
                            success: function (e) {
                                displaySuccessMessage(e.message), window.location.href = $(".appointmentIndexPage").val()
                            },
                            error: function (e) {
                                printErrorMessage("#editAppointmentErrorsBox", e), screenUnLock()
                            }
                        })
                    }))
                }))
            },
            6539: () => {},
            5775: () => {
                "use strict";
                listenClick(".bed-assign-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bedAssignUrl").val() + "/" + t, "", $("#bedAssign").val())
                })), listenChange(".bed-assign-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#bedAssignUrl").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), Livewire.emit("refresh"))
                        }
                    })
                })), listen("click", "#bedAssignResetFilter", (function () {
                    $("#bed_assigns_filter_status").val(0).trigger("change"), hideDropdownManually($("#bedAssignFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#bed_assigns_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            5792: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if ($("#BedAssignDate").flatpickr({
                            enableTime: !0,
                            locale: $(".userCurrentLanguage").val(),
                            dateFormat: "Y-m-d H:i",
                            onChange: function (t, a, i) {
                                var n = moment($("#assignDate").val()).add(1, "days").format();
                                void 0 !== e && e.set("minDate", n)
                            }
                        }), $("#editBedAssign").length) {
                        setTimeout((function () {
                            $("#caseId").trigger("change"), $("#BedAssignDate").trigger("dp.change")
                        }), 300);
                        var t = $("#BedAssignDischargeDate").flatpickr({
                                enableTime: !0,
                                dateFormat: "Y-m-d H:i",
                                locale: $(".userCurrentLanguage").val()
                            }),
                            a = moment($("#BedAssignDate").val()).add(1, "days").format();
                        t.set("minDate", a)
                    }
                    if (!$("#createBedAssign").length && !$("#editBedAssign").length) return !1;
                    var i = $("#caseId"),
                        n = $("#BedAssignBedId"),
                        r = $("#ipdPatientId");
                    i.length && ($("#caseId").select2({
                        width: "100%"
                    }), $("#caseId").first().focus()), n.length && $("#BedAssignBedId").select2({
                        width: "100%"
                    }), r.length && $("#ipdPatientId").select2({
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.ipd_patient.ipd_patient"),
                        width: "100%"
                    })
                }));
                var e = void 0;
                listenSubmit("#createBedAssign, #editBedAssign", (function () {
                    $("#saveBtn").attr("disabled", !0), "" !== $("#validationErrorsBox").text() && $("#BedAssignSaveBtn").attr("disabled", !1)
                })), listenChange("#caseId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $("#ipdPatientListUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($("#ipdPatientId").empty(), $("#ipdPatientId").removeAttr("disabled"), $(".isEdit").val() ? $.each(e.data, (function (e, t) {
                                $(".ipdPatientId").val() == t ? $("#ipdPatientId").append($("<option></option>").attr("value", e).attr("selected", !0).text(t)) : $("#ipdPatientId").append($("<option></option>").attr("value", e).text(t))
                            })) : $.each(e.data, (function (e, t) {
                                $("#ipdPatientId").append($("<option></option>").attr("value", e).text(t))
                            }))) : $("#ipdPatientId").prop("disabled", !0)
                        }
                    }), $("#ipdPatientId").empty(), $("#ipdPatientId").append("<option>No IPD Patient Found</option>"), $("#ipdPatientId").prop("disabled", !0)
                }))
            },
            8872: () => {
                listenClick(".bed-type-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#bedTypesUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#bedTypeId").val(t.id), $("#BedTypeEditTitle").val(t.title), $("#BedTypeEditDescription").val(t.description), $("#edit_bed_types_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".bed-type-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bedTypesUrl").val() + "/" + t, "", $("#bedType").val())
                })), listenSubmit("#addNewBedTypeForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#BedBtnSave");
                    t.button("loading"), $.ajax({
                        url: $("#bedTypesCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_bed_types_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#validationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#BedTypeEditForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#BedTyeBtnEditSave");
                    t.button("loading");
                    var a = $("#bedTypeId").val();
                    $.ajax({
                        url: $("#bedTypesUrl").val() + "/" + a,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_bed_types_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_bed_types_modal", (function () {
                    resetModalForm("#addNewBedTypeForm", "#validationErrorsBox")
                })), listenHiddenBsModal("#edit_bed_types_modal", (function () {
                    resetModalForm("#BedTypeEditForm", "#editValidationErrorsBox")
                }))
            },
            318: () => {},
            9786: () => {},
            2383: () => {},
            1882: () => {
                "use strict";
                listenClick(".bed-delete-btn", (function (e) {
                    var t = $(e.currentTarget).data("id");
                    deleteItem($(".bedUrl").val() + "/" + t, " ", Lang.get("messages.patient_admission.bed"))
                })), listenChange(".bed-status", (function (e) {
                    var t, a = $(e.currentTarget).data("id");
                    t = a, $.ajax({
                        url: $(".bedUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && livewire.emit("refresh")
                        }
                    })
                })), listenChange("#bed_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#bedResetFilter", (function () {
                    $("#bed_filter_status").val(0).trigger("change"), hideDropdownManually($("#bedAssignFilterBtn"), $(".dropdown-menu"))
                }))
            },
            9205: () => {},
            7603: () => {
                "use strict";

                function e(e) {
                    $(e).select2({
                        placeholder: Lang.get("messages.bed.select_bed_type"),
                        width: "100%"
                    })
                }

                function t() {
                    var t = 1;
                    if ($(".bulk-beds-item-container>tr").each((function () {
                            $(this).find(".item-number").text(t), t++
                        })), t - 1 == 0) {
                        var a = $("#uniqueId").val(),
                            i = {
                                services: JSON.parse($("#bedTypes").val()),
                                uniqueId: a
                            },
                            n = prepareTemplateRender("#bulkBedActionTemplate", i);
                        $(".bulk-beds-item-container").append(n), e(".bedType"), a++
                    }
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#bulkBedsForm").length) return !1;
                    e(".bedType")
                })), listenClick("#addNewBedItem", (function () {
                    var a = $("#uniqueId").val(),
                        i = {
                            bedTypes: JSON.parse($("#bedTypes").val()),
                            uniqueId: a
                        },
                        n = prepareTemplateRender("#bulkBedActionTemplate", i);
                    $(".bulk-beds-item-container").append(n), e(".bedType"), a++, $("#uniqueId").val(a), t()
                })), listenClick(".delete-invoice-item", (function () {
                    $(this).parents("tr").remove(), t()
                })), listenSubmit("#bulkBedsForm", (function (e) {
                    e.preventDefault(), $(".bulk-button").prop("disabled", !0);
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#bulkBedSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), $(".bulk-button").prop("disabled", !1), window.location.href = $("#bulkBedUrl").val()
                        },
                        error: function (e) {
                            printErrorMessage("#validationErrorsBox", e), $(".bulk-button").prop("disabled", !1)
                        }
                    })
                }))
            },
            295: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addNewBedsForm").length && !$("#EditBedsForm").length) return !1;
                    $("#editBedType").length && $("#editBedType").select2({
                        width: "100%",
                        dropdownParent: $("#edit_beds_modal")
                    })
                })), listenSubmit("#addNewBedsForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#BedSaveBtn");
                    t.button("loading"), $.ajax({
                        url: $("#bedCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_beds_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#validationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".bed-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).data("id");
                        t = a, $.ajax({
                            url: $(".bedUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#bedId").val(e.data.id), $("#editBedName").val(e.data.name), $("#editBedType").val(e.data.bed_type).trigger("change.select2"), $("#editBedDescription").val(e.data.description), $("#editBedCharge").val(e.data.charge), $(".price-input").trigger("input"), $("#edit_beds_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#EditBedsForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnEditSave");
                    t.button("loading");
                    var a = $("#bedId").val();
                    $.ajax({
                        url: $(".bedUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_beds_modal").modal("hide"), $("#bedDetailShowUrl").length ? window.location.href = $("#bedDetailShowUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_beds_modal", (function () {
                    resetModalForm("#addNewBedsForm", "#validationErrorsBox"), $("#bedType").trigger("change.select2")
                })), listenHiddenBsModal("#edit_beds_modal", (function () {
                    resetModalForm("#EditBedsForm", "#editValidationErrorsBox")
                })), listenShownBsModal("#add_beds_modal", (function () {
                    $("#bedType").select2({
                        width: "100%",
                        dropdownParent: $("#add_beds_modal")
                    })
                }))
            },
            1669: () => {
                "use strict";
                listenClick(".bill-delete-btn", (function (e) {
                    var t = $(e.currentTarget).data("id");
                    deleteItem($("#indexBillUrl").val() + "/" + t, "", $("#Bill").val())
                }))
            },
            7565: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#editBillPatientAdmissionId").length) return !1;
                    setTimeout((function () {
                        $("#patientAdmissionId").val($("#editBillPatientAdmissionId").val()), $("#patientAdmissionId").trigger("change")
                    }), 500)
                }))
            },
            974: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#billForm").length) return !1;
                    var t = $("#female"),
                        a = $("#male"),
                        i = $("#patient_id"),
                        n = $("#patientAdmissionId"),
                        r = $("#bill_date"),
                        s = $("#editBillDate");
                    $('input:text:not([readonly="readonly"])').first().blur(), t.length && $("#female").attr("disabled", !0);
                    a.length && $("#male").attr("disabled", !0);
                    i.length && $("#patient_id").select2({
                        width: "100%"
                    });
                    n.length && $("#patientAdmissionId").select2({
                        width: "100%"
                    });
                    r.length && $("#bill_date").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    });
                    s.length && $("#editBillDate").flatpickr({
                        enableTime: !0,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    });
                    e(".accountId")
                }));
                var e = function (e) {
                    $(e).select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%"
                    })
                };
                listenClick("#addBillItem", (function () {
                    var a = $(".uniqueId").val(),
                        i = {
                            medicines: JSON.parse($(".associateMedicines").val()),
                            uniqueId: a
                        },
                        n = prepareTemplateRender("#billItemTemplate", i);
                    $(".bill-item-container").append(n), e(".medicineId"), a++, t()
                }));
                var t = function () {
                    var e = 1;
                    $(".bill-item-container>tr").each((function () {
                        $(this).find(".item-number").text(e), e++
                    })), e - 1 == 0 && $("#billTbl tbody").append('<tr><td class="text-center item-number">1</td><td class="table__item-desc"><input class="form-control itemName" required name="item_name[]" type="text"></td><td class="table__qty"><input class="form-control qty quantity" required name="qty[]" type="text"></td><td><input class="form-control price-input price" required name="price[]" type="text"></td><td class="amount text-right itemTotal"></td><td class="text-center"><i class="fa fa-trash text-danger delete-bill-bulk-item pointer"></i></td></tr>')
                };
                listenClick(".delete-bill-bulk-item", (function () {
                    $(this).parents("tr").remove(), t(), n()
                }));
                var a = function (e) {
                    return e.replace(/,/g, "")
                };
                listenKeyup(".qty", (function () {
                    var e = parseInt($(this).val()),
                        t = $(this).parent().siblings().find(".price").val();
                    t = parseInt(a(t));
                    var r = i(e, t);
                    $(this).parent().siblings(".amount").text(addCommas(r.toString())), n()
                })), listenKeyup(".price", (function () {
                    var e = $(this).val();
                    e = parseInt(a(e));
                    var t = parseInt($(this).parent().siblings().find(".qty").val()),
                        r = i(t, e);
                    $(this).parent().siblings(".amount").text(addCommas(r.toString())), n()
                }));
                var i = function (e, t) {
                        return e > 0 && t > 0 ? e * t : 0
                    },
                    n = function () {
                        var e = 0;
                        $(".bill-item-container>tr").each((function () {
                            var t = $(this).find(".itemTotal").text();
                            t = a(t), t = isEmpty($.trim(t)) ? 0 : parseInt(t), e += t
                        })), e = parseFloat(e), $("#totalPrice").text($(".currentCurrency").val() + addCommas(e.toFixed(2))), $("#totalAmount").val(e)
                    };
                listenSubmit("#billForm", (function (e) {
                    e.preventDefault(), $("#billSave").attr("disabled", !0), jQuery(this).find("#saveInvoiceBtn").button("loading");
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".billSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.href = $(".billUrl").val() + "/" + e.data.id
                        },
                        error: function (e) {
                            printErrorMessage("#validationErrorsBox", e), $("#billSave").attr("disabled", !1)
                        }
                    })
                })), listenChange("#patientAdmissionId", (function () {
                    var e;
                    $("#patientAdmissionId").attr("disabled", !0), "" != $(this).val() && null != $(this).val() ? ($("#patientAdmissionId").attr("disabled", !1), e = $(".isEdit").val() ? {
                        editBillId: $(".billId").val(),
                        patient_admission_id: $(this).val()
                    } : {
                        patient_admission_id: $(this).val()
                    }, $.ajax({
                        url: $(".patientAdmissionDetailUrl").val(),
                        type: "GET",
                        data: e,
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                if ($("#pAdmissionId").val($("#patientAdmissionId").find(":selected").val()), $("#female,#male").attr("disabled", !0), $("#billsPatientId").val(t.patientDetails.owner_id), $("#name").val(t.patientDetails.full_name), $("#userEmail").val(t.patientDetails.email), $("#userPhone").val(null != t.patientDetails.phone ? t.patientDetails.phone : Lang.get("messages.common.n/a")), 1 == t.patientDetails.gender ? $("#female").prop("checked", !0) : $("#male").prop("checked", !0), $("#dob").val(null != t.patientDetails.dob ? t.patientDetails.dob : Lang.get("messages.common.n/a")), $("#billDoctorId").val(t.doctorName), $("#admissionDate").val(moment(t.admissionDetails.admission_date).format("YYYY-MM-DD") + " " + moment(t.admissionDetails.admission_date).format("HH:mm:ss")), $("#dischargeDate").val(null != t.admissionDetails.discharge_date ? moment(t.admissionDetails.discharge_date).format("YYYY-MM-DD") + " " + moment(t.admissionDetails.discharge_date).format("HH:mm:ss") : Lang.get("messages.common.n/a")), "" != t.package ? $("#packageId").val(null != t.package.name ? t.package.name : Lang.get("messages.common.n/a")) : $("#packageId").val(Lang.get("messages.common.n/a")), null != t.admissionDetails.insurance ? $("#insuranceId").val(t.admissionDetails.insurance.name) : $("#insuranceId").val(Lang.get("messages.common.n/a")), $("#totalDays").val(t.admissionDetails.totalDays), $("#policyNo").val("" != t.admissionDetails.policy_no ? t.admissionDetails.policy_no : Lang.get("messages.common.n/a")), ("" != t.package || "" == t.package || !t.hasOwnProperty("billItems") || t.hasOwnProperty("billItems") || t.billItems.length <= 0 || t.billItems.length >= 0) && ($(".bill-item-container tr").each((function () {
                                        $(this).closest("tr").remove()
                                    })), $("#totalPrice").text("0"), $("#billTbl tbody").append('<tr><td class="text-center item-number">1</td><td class="table__item-desc"><input class="form-control itemName" required name="item_name[]" type="text"></td><td class="table__qty"><input class="form-control qty quantity" required name="qty[]" type="text"></td><td><input class="form-control price-input price" required name="price[]" type="text"></td><td class="amount text-right itemTotal"></td><td class="text-center"><i class="fa fa-trash text-danger delete-bill-bulk-item pointer"></i></td></tr>')), "" != t.package && t.hasOwnProperty("billItems") && t.billItems.length > 0) {
                                    var a = t.billItems.length - 1;
                                    $("#totalAmount").val(0);
                                    for (var i = 0, n = 1; n <= a; n++) $("#addBillItem").trigger("click");
                                    $(".bill-item-container tr").each((function (e) {
                                        var a = $(this);
                                        a.find(".itemName").val(t.billItems[e].item_name), a.find(".quantity").val(t.billItems[e].qty), a.find(".price").val(t.billItems[e].price), a.find(".amount").text(t.billItems[e].amount), i += parseInt(a.find(".itemTotal").text()), $("#totalPrice").text($(".currentCurrency").val() + i)
                                    })), $("#totalAmount").val($("#total").text()), setTimeout((function () {
                                        $(".price").trigger("keyup")
                                    }), 500)
                                } else if ("" != t.package) {
                                    if (t.package.package_services_items.length > 0) {
                                        var r = t.package.package_services_items.length - 1;
                                        $("#totalAmount").val(0);
                                        for (var s = 0, o = 1; o <= r; o++) $("#addBillItem").trigger("click");
                                        $(".bill-item-container tr").each((function (e) {
                                            var a = $(this);
                                            a.find(".itemName").val(t.package.package_services_items[e].service.name), a.find(".quantity").val(t.package.package_services_items[e].quantity), a.find(".price").val(t.package.package_services_items[e].rate), a.find(".amount").text(t.package.package_services_items[e].amount), s += parseInt(a.find(".itemTotal").text()), $("#totalPrice").text($(".currentCurrency").val() + s)
                                        })), $("#totalAmount").val($("#total").text())
                                    }
                                } else if (t.hasOwnProperty("billItems") && t.billItems.length > 0) {
                                    var d = t.billItems.length - 1;
                                    $("#totalAmount").val(0);
                                    for (var l = 0, c = 1; c <= d; c++) $("#addBillItem").trigger("click");
                                    $(".bill-item-container tr").each((function (e) {
                                        var a = $(this);
                                        a.find(".itemName").val(t.billItems[e].item_name), a.find(".quantity").val(t.billItems[e].qty), a.find(".price").val(t.billItems[e].price), a.find(".amount").text(t.billItems[e].amount), l += parseInt(a.find(".itemTotal").text()), $("#totalPrice").text($(".currentCurrency").val() + l)
                                    })), $("#totalAmount").val($("#total").text())
                                }
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e), $("#patientAdmissionId").attr("disabled", !1)
                        }
                    })) : $("#patientAdmissionId").attr("disabled", !1)
                }))
            },
            7710: () => {
                "use strict";
                listenClick(".birth-report-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".birthReportUrl").val() + "/" + t, "", $("#birthReport").val())
                }))
            },
            1470: () => {},
            629: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addBirthReportForm").length && !$("#editBirthReportForm").length) return !1;
                    var e = $("#birthCaseId"),
                        t = $("#birthDoctorId"),
                        a = $("#editBirthCaseId"),
                        i = $("#editBirthDoctorId"),
                        n = $("#birthDate"),
                        r = $("#editBirthDate");
                    e.length && $("#birthCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#add_birth_reports_modal")
                    });
                    t.length && $("#birthDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#add_birth_reports_modal")
                    });
                    a.length && $("#editBirthCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_birth_reports_modal")
                    });
                    i.length && $("#editBirthDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_birth_reports_modal")
                    });
                    n.length && $("#birthDate").flatpickr({
                        dateFormat: "Y-m-d h:i K",
                        useCurrent: !0,
                        sideBySide: !0,
                        enableTime: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    });
                    r.length && $("#editBirthDate").flatpickr({
                        dateFormat: "Y-m-d h:i K",
                        useCurrent: !0,
                        sideBySide: !0,
                        enableTime: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addBirthReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnBirthSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexBirthReportCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_birth_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#birthValidationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".birth-report-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $(".birthReportUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#birthReportId").val(e.data.id), $("#editBirthCaseId").val(e.data.case_id).trigger("change.select2"), $("#editBirthDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editBirthDescription").val(e.data.description), document.querySelector("#editBirthDate")._flatpickr.setDate(moment(e.data.date).format()), $("#edit_birth_reports_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editBirthReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnBirthEditSave");
                    t.button("loading");
                    var a = $("#birthReportId").val();
                    $.ajax({
                        url: $(".birthReportUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_birth_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_birth_reports_modal", (function () {
                    resetModalForm("#addBirthReportForm", "#birthValidationErrorsBox"), $("#birthCaseId, #birthDoctorId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_birth_reports_modal", (function () {
                    resetModalForm("#editBirthReportForm", "#editBirthValidationErrorsBox")
                }))
            },
            3830: () => {
                "use strict";
                listenSubmit("#addBloodBankForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#bloodBankSave");
                    t.button("loading"), $.ajax({
                        url: $("#bloodBankCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_blood_banks_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#bloodBankErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editBloodBankForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editBloodBankSave");
                    t.button("loading");
                    var a = $("#bloodBankId").val();
                    $.ajax({
                        url: $("#bloodBankUrl").val() + "/" + a,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_blood_banks_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_blood_banks_modal", (function () {
                    resetModalForm("#addBloodBankForm", "#bloodBankErrorsBox")
                })), listenHiddenBsModal("#edit_blood_banks_modal", (function () {
                    resetModalForm("#editBloodBankForm", "#editBloodBankErrorsBox")
                })), listen("click", ".blood-bank-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#bloodBankUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#bloodBankId").val(t.id), $("#editBloodGroup").val(t.blood_group), $("#editBloodBankRemainedBags").val(t.remained_bags), $("#edit_blood_banks_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".blood-bank-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bloodBankUrl").val() + "/" + t, "", $("#bloodBank").val())
                }))
            },
            2267: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addBloodDonationForm").length && !$("#editBloodDonationForm").length) return !1;
                    var e = $("#donationDonorName"),
                        t = $("#editDonationDonorName");
                    listenShownBsModal("#add_blood_donation_modal", (function () {
                        e.length && $("#donationDonorName").select2({
                            width: "100%",
                            dropdownParent: $("#add_blood_donation_modal")
                        })
                    })), listenShownBsModal("#edit_blood_donation_modal", (function () {
                        t.length && $("#editDonationDonorName").select2({
                            width: "100%",
                            dropdownParent: $("#edit_blood_donation_modal")
                        })
                    }))
                })), listenSubmit("#addBloodDonationForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#bloodDonationSave");
                    t.button("loading"), $.ajax({
                        url: $("#bloodDonationCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_blood_donation_modal").modal("hide"), livewire.emit("refresh"), setTimeout((function () {
                                t.button("reset")
                            }), 2500))
                        },
                        error: function (e) {
                            printErrorMessage("#bloodDonationErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3)
                        }
                    })
                })), listenSubmit("#editBloodDonationForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editBloodDonationSave");
                    t.button("loading");
                    var a = $("#bloodDonationId").val();
                    $.ajax({
                        url: $("#bloodDonationUrl").val() + "/" + a,
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_blood_donation_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_blood_donation_modal", (function () {
                    $("#donationDonorName").val("").trigger("change.select2"), resetModalForm("#addBloodDonationForm", "#bloodDonationErrorsBox")
                })), listenHiddenBsModal("#edit_blood_donation_modal", (function () {
                    resetModalForm("#editBloodDonationForm", "#editBloodDonationErrorsBox")
                })), listen("click", ".blood-donation-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#bloodDonationUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#bloodDonationId").val(t.id), $("#editDonationDonorName").val(t.blood_donor_id), $("#editDonationDonorName").trigger("change"), $("#editDonationBags").val(t.bags), $("#edit_blood_donation_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".blood-donation-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bloodDonationUrl").val() + "/" + t, "", $("#bloodDonation").val())
                })), listenShownBsModal("#edit_blood_donation_modal", (function () {
                    $("#editDonationDonorName:first").focus()
                }))
            },
            5688: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addBloodDonorForm").length && !$("#editBloodDonorForm").length) return !1;
                    var e = $("#donorBloodGroup"),
                        t = $("#editDonorBloodGroup"),
                        a = $("#lastDonationDate");
                    e.length && $("#donorBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_donors_modal")
                    });
                    t.length && $("#editDonorBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_donors_modal")
                    });
                    a.length && $("#lastDonationDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !1,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addBloodDonorForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#bloodDonorSave");
                    t.button("loading"), $.ajax({
                        url: $("#bloodDonorCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_blood_donors_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#bloodDonorErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editBloodDonorForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editBloodDonorSave");
                    t.button("loading");
                    var a = $("#bloodDonorId").val();
                    $.ajax({
                        url: $("#bloodDonorUrl").val() + "/" + a,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_blood_donors_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_blood_donors_modal", (function () {
                    resetModalForm("#addBloodDonorForm", "#bloodDonorErrorsBox")
                })), listenHiddenBsModal("#edit_blood_donors_modal", (function () {
                    resetModalForm("#editBloodDonorForm", "#editBloodDonorErrorsBox")
                })), listen("click", ".blood-donor-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#bloodDonorUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#bloodDonorId").val(t.id), $("#editBloodDonorName").val(t.name), $("#editBloodDonorAge").val(t.age), $("#editBloodDonorMale,#editBloodDonorFemale").prop("checked", !1), 1 == t.gender ? $("#editBloodDonorMale").prop("checked", !0) : $("#editBloodDonorFemale").prop("checked", !0), $("#editDonorBloodGroup").val(t.blood_group), $("#editDonorBloodGroup").select2({
                                        dropdownParent: $("#edit_blood_donors_modal")
                                    }), $("#editDonorBloodGroup").trigger("change"), $("#editLastDonationDate").flatpickr({
                                        format: "YYYY-MM-DD",
                                        useCurrent: !1,
                                        sideBySide: !1,
                                        locale: $(".userCurrentLanguage").val()
                                    }).setDate(format(e.data.last_donate_date, "YYYY-MM-DD")), $("#edit_blood_donors_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".blood-donor-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bloodDonorUrl").val() + "/" + t, "", $("#bloodDonor").val())
                })), listenShownBsModal("#add_blood_donors_modal", (function () {
                    $("#donorBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_donors_modal")
                    })
                }))
            },
            502: () => {
                "use strict";

                function e(e, t) {
                    $.ajax({
                        url: $("#bloodGroupUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: t
                        },
                        success: function (t) {
                            $(e).empty(), $.each(t.data, (function (t, a) {
                                $(e).append($("<option></option>").attr("value", t).text(a))
                            }))
                        }
                    })
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addBloodIssueForm").length && !$("#editBloodIssueForm").length) return !1;
                    var e = $("#bloodIssueDoctorName"),
                        t = $("#bloodIssuePatientName"),
                        a = $("#donorName"),
                        i = $("#issuedBloodGroup"),
                        n = $("#editBloodIssueDoctorName"),
                        r = $("#editBloodIssuePatientName"),
                        s = $("#editDonorName"),
                        o = $("#editIssuedBloodGroup"),
                        d = $("#bloodIssueDate");
                    e.length && $("#bloodIssueDoctorName").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_issues_modal")
                    });
                    t.length && $("#bloodIssuePatientName").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_issues_modal")
                    });
                    a.length && $("#donorName").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_issues_modal")
                    });
                    i.length && $("#issuedBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_issues_modal")
                    });
                    n.length && $("#editBloodIssueDoctorName").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_issues_modal")
                    });
                    r.length && $("#editBloodIssuePatientName").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_issues_modal")
                    });
                    s.length && $("#editDonorName").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_issues_modal")
                    });
                    o.length && $("#editIssuedBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_issues_modal")
                    });
                    d.length && $("#bloodIssueDate").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        maxDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addBloodIssueForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#bloodIssueSave");
                    t.button("loading"), $.ajax({
                        url: $("#bloodIssueCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_blood_issues_modal").modal("hide"), livewire.emit("refresh"), setTimeout((function () {
                                t.button("reset")
                            }), 2500))
                        },
                        error: function (e) {
                            printErrorMessage("#bloodIssueErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3)
                        }
                    })
                })), listenChange("#donorName", (function () {
                    e("#issuedBloodGroup", $(this).val())
                })), listenChange("#editDonorName", (function () {
                    e("#editIssuedBloodGroup", $(this).val())
                })), listenSubmit("#editBloodIssueForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editBloodIssueSave");
                    t.button("loading");
                    var a = $("#bloodIssueId").val();
                    $.ajax({
                        url: $("#bloodIssueUrl").val() + "/" + a,
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_blood_issues_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_blood_issues_modal", (function () {
                    resetModalForm("#addBloodIssueForm", "#bloodIssueErrorsBox"), $("#bloodIssueDoctorName").val(null).trigger("change"), $("#bloodIssuePatientName").val(null).trigger("change"), $("#donorName").val(null).trigger("change"), $("#issuedBloodGroup").val(null).trigger("change")
                })), listenHiddenBsModal("#edit_blood_issues_modal", (function () {
                    resetModalForm("#editBloodIssueForm", "#editBloodIssueErrorsBox")
                })), listenShownBsModal("#add_blood_issues_modal,#edit_blood_issues_modal", (function () {
                    $("#bloodIssueDoctorName,#bloodIssuePatientName,#donorName,#issuedBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#add_blood_issues_modal")
                    }), $("#editBloodIssueDoctorName,#editBloodIssuePatientName,#editDonorName,#editIssuedBloodGroup").select2({
                        width: "100%",
                        dropdownParent: $("#edit_blood_issues_modal")
                    })
                })), listen("click", ".blood-issues-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#bloodIssueUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#bloodIssueId").val(t.id), $("#editBloodIssueDate").flatpickr({
                                        enableTime: !0,
                                        maxDate: new Date,
                                        dateFormat: "Y-m-d H:i",
                                        locale: $(".userCurrentLanguage").val()
                                    }).setDate(t.issue_date), $("#editBloodIssueDoctorName").val(t.doctor_id).trigger("change"), $("#editBloodIssuePatientName").val(t.patient_id).trigger("change"), $("#editDonorName").val(t.donor_id).trigger("change", [{
                                        isEdit: !0
                                    }]), $("#editBloodIssueAmount").val(t.amount), $(".price-input").trigger("input"), $("#editBloodIssueRemarks").val(t.remarks), $("#edit_blood_issues_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".blood-issues-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#bloodIssueUrl").val() + "/" + t, "", $("#bloodIssue").val())
                }))
            },
            4166: () => {
                "use strict";
                listenClick(".brand-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexBrandUrl").val() + "/" + t, "", $("#medicineBrand").val())
                })), listenSubmit("#createBrandForm, #editBrandForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                }))
            },
            8525: () => {
                "use strict";
                listenClick("#callLogResetFilter", (function () {
                    $("#callType").val(0).trigger("change"), hideDropdownManually($("#callTypeFilterBtn"), $(".dropdown-menu"))
                })), listenClick(".call-log-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".callLogUrl").val() + "/" + t, "", $("#callLogs").val())
                })), listenChange("#callType", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            7970: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createCallLogForm").length && !$("#editCallLogForm").length) return !1;
                    var e = void 0;
                    $("editCallLogId").length ? $("#callLogDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        minDate: moment(new Date).format("YYYY-MM-DD"),
                        locale: $(".userCurrentLanguage").val(),
                        onChange: function (e, t, a) {
                            var i = moment($("#callLogDate").val()).format();
                            "undefined" != typeof followUpDate && followUpDate.set("minDate", i)
                        }
                    }) : $("#callLogDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        minDate: moment(new Date).format("YYYY-MM-DD"),
                        locale: $(".userCurrentLanguage").val(),
                        onChange: function (t, a, i) {
                            var n = moment($("#callLogDate").val()).format();
                            void 0 !== e && e.set("minDate", n)
                        }
                    }), e = $("#callLogFollowUpDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    });
                    var t = moment($("#callLogDate").val()).format();
                    e.set("minDate", t)
                })), listenSubmit("#createCallLogForm, #editCallLogForm", (function () {
                    if ("" !== $(".error-msg").text()) return $("#callLogPhoneNumber").focus(), !1
                })), listen("keyup keypress", "#createCallLogForm, #editCallLogForm", (function (e) {
                    if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1
                })), listen("keyup keypress", "#createCallLogForm, #editCallLogForm", (function (e) {
                    if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1
                }))
            },
            7828: () => {
                "use strict";
                listenClick(".delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexCaseHandlerUrl").val() + "/" + t, "", $("#caseHandler").val())
                })), listenChange(".case-handler-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexCaseHandlerUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listenClick("#caseHandlerResetFilter", (function () {
                    $("#caseHandlerHead").val(2).trigger("change"), hideDropdownManually($("#caseHandlerFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#caseHandlerHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#caseHandlerFilterBtn"), $("#caseHandlerFilter"))
                }))
            },
            4248: () => {
                "use strict";

                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createCaseHandlerForm").length && !$("#editCaseHandlerForm").length) return !1;
                    var e = $("#caseHandlerBirthDate"),
                        t = $("#editCaseHandlerBirthDate"),
                        a = $("#createCaseHandlerForm"),
                        i = $("#editCaseHandlerForm");
                    e.length && $("#caseHandlerBirthDate").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), t.length && $("#editCaseHandlerBirthDate").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), a.length && $("#createCaseHandlerForm").find("input:text:visible:first").focus(), i.length && $("#editCaseHandlerForm").find("input:text:visible:first").focus()
                })), listenSubmit("#createCaseHandlerForm, #editCaseHandlerForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenClick(".case-andler-remove-image", (function () {
                    defaultImagePreview(".previewImage", 1)
                })), listenChange(".caseHandlerProfileImage", (function () {
                    var t = e($(this), "#caseHandlerErrorBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#caseHandlerErrorBox").removeClass("d-none hide"), $("#caseHandlerErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=caseHandlerErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#caseHandlerErrorBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                })), listenChange(".editCaseHandlerProfileImage", (function () {
                    var t = e($(this), "#editCaseHandlerErrorsBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#editCaseHandlerErrorsBox").removeClass("d-none hide"), $("#editCaseHandlerErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editCaseHandlerErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editCaseHandlerErrorsBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                }))
            },
            972: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".editCategoryBtn").length) return;
                    listenSubmit("#editMedicineCategoryForm", (function (e) {
                        e.preventDefault();
                        var t = jQuery(this).find("#editCategorySave");
                        t.button("loading");
                        var a = $("#editMedicineCategoryId").val();
                        $.ajax({
                            url: $("#showCategoriesUrl").val() + "/" + a,
                            type: "put",
                            data: $(this).serialize(),
                            success: function (e) {
                                e.success && (displaySuccessMessage(e.message), $("#edit_categories_modal").modal("hide"), Livewire.emit("refresh"))
                            },
                            error: function (e) {
                                UnprocessableInputError(e)
                            },
                            complete: function () {
                                t.button("reset")
                            }
                        })
                    })), listenHiddenBsModal("#edit_categories_modal", (function () {
                        resetModalForm("#editMedicineCategoryForm", "#editMedicineCategoryErrorsBox")
                    })), window.renderCategoryDetailData = function (e) {
                        $.ajax({
                            url: $("#showCategoriesUrl").val() + "/" + e + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#editMedicineCategoryId").val(t.id), $("#editCategoryName").val(t.name), 1 === t.is_active ? $("#editCategoryIsActive").prop("checked", !0) : $("#editCategoryIsActive").prop("checked", !1), $("#edit_categories_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }, listenClick(".editCategoryBtn", (function (e) {
                        if (!$(".ajaxCallIsRunning").val()) {
                            ajaxCallInProgress();
                            var t = $(e.currentTarget).attr("data-id");
                            renderCategoryDetailData(t)
                        }
                    }))
                }))
            },
            1554: () => {
                "use strict";
                listenSubmit("#addMedicineCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#medicineCategorySave");
                    t.button("loading"), $.ajax({
                        url: $("#indexCategoryCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_categories_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#medicineCategoryErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editMedicineCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editCategorySave");
                    t.button("loading");
                    var a = $("#editMedicineCategoryId").val();
                    $.ajax({
                        url: $("#indexCategoriesUrl").val() + "/" + a,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_categories_modal").modal("hide"), $("#categoriesShowUrl").length ? window.location.href = $("#categoriesShowUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_categories_modal", (function () {
                    resetModalForm("#addMedicineCategoryForm", "#medicineCategoryErrorsBox")
                })), listenHiddenBsModal("#edit_categories_modal", (function () {
                    resetModalForm("#editMedicineCategoryForm", "#editMedicineCategoryErrorsBox")
                })), listenClick(".category-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexCategoriesUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#editMedicineCategoryId").val(t.id), $("#editCategoryName").val(t.name), 1 === t.is_active ? $("#editCategoryIsActive").prop("checked", !0) : $("#editCategoryIsActive").prop("checked", !1), $("#edit_categories_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".category-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexCategoriesUrl").val() + "/" + t, "", Lang.get("messages.medicine.medicine_category"))
                })), listenChange(".medicine-category-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexCategoriesUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), window.livewire.emit("refresh"))
                        }
                    })
                })), listenClick("#categoryResetFilter", (function () {
                    $("#medicineCategoryHead").val(2).trigger("change"), hideDropdownManually($("#medicineCategoryFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#medicineCategoryHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#medicineCategoryFilterBtn"), $("#medicineCategoryFilter"))
                }))
            },
            5555: () => {},
            5744: () => {
                "use strict";
                listenClick(".charge-category-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#chargeCategoryURLID").val() + "/" + t, "", $("#chargeCategory").val())
                })), document.addEventListener("success", (function (e) {
                    displaySuccessMessage(e.detail)
                }))
            },
            4245: () => {},
            4664: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addChargeCategoryForm").length && !$("#editChargeCategoryForm").length) return !1;
                    var e = $("#chargeCategoryTypeId"),
                        t = $("#editChargeCategoryTypeId");
                    e.length && $("#chargeCategoryTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#add_charge_categories_modal")
                    });
                    t.length && $("#editChargeCategoryTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_charge_categories_modal")
                    })
                })), listenSubmit("#addChargeCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#chargeCategorySave");
                    t.button("loading"), $.ajax({
                        url: $(".chargeCategoryCreateURLID").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_charge_categories_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#chargeCategoryErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".charge-category-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#chargeCategoryURLID").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#chargeCatId").val(e.data.id), $("#editChargeCategoryName").val(e.data.name), $("#editChargeCategoryTypeId").val(e.data.charge_type).trigger("change.select2"), $("#editChargeCategoryDescription").val(e.data.description), $("#edit_charge_categories_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editChargeCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editChargeCategorySave");
                    t.button("loading");
                    var a = $("#chargeCatId").val();
                    $.ajax({
                        url: $("#chargeCategoryURLID").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_charge_categories_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_charge_categories_modal", (function () {
                    resetModalForm("#addChargeCategoryForm", "#chargeCategoryErrorsBox"), $("#chargeCategoryTypeId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_charge_categories_modal", (function () {
                    resetModalForm("#editChargeCategoryForm", "#editChargeCategoryErrorsBox"), $("#editChargeCategoryTypeId").val("").trigger("change.select2")
                }))
            },
            4018: () => {
                "use strict";
                listen("click", "#chargesResetFilter", (function () {
                    $("#filterChargeType").val(0).trigger("change"), hideDropdownManually($("#ChargeFilterBtn"), $(".dropdown-menu"))
                })), listen("click", ".charge-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".chargesURl").val() + "/" + t, "", $("#Charges").val())
                })), listenChange("#filterChargeType", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            7506: () => {},
            2102: () => {
                "use strict";

                function e(e, t) {
                    $.ajax({
                        url: $(".changeChargeTypeURL").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: t
                        },
                        success: function (t) {
                            $(e).empty(), $.each(t.data, (function (t, a) {
                                $(e).append($("<option></option>").attr("value", t).text(a))
                            }))
                        }
                    })
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addChargesForm").length && !$("#editChargesForm").length) return !1;
                    var e = $("#chargeTypeId"),
                        t = $("#chargeCategoryId"),
                        a = $("#editChargeTypeId"),
                        i = $("#editChargeCategoryId");
                    e.length && $("#chargeTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#add_charges_modal"),
                        placeholder: Lang.get("messages.pathology_category.select_charge_category")
                    });
                    t.length && $("#chargeCategoryId").select2({
                        width: "100%",
                        dropdownParent: $("#add_charges_modal"),
                        placeholder: Lang.get("messages.pathology_category.select_charge_category")
                    });
                    a.length && $("#editChargeTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_charges_modal"),
                        placeholder: Lang.get("messages.pathology_category.select_charge_category")
                    });
                    i.length && $("#editChargeCategoryId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_charges_modal"),
                        placeholder: Lang.get("messages.pathology_category.select_charge_category")
                    })
                })), listenChange("#chargeTypeId", (function () {
                    e("#chargeCategoryId", $(this).val())
                })), listenChange("#editChargeTypeId", (function () {
                    e("#editChargeCategoryId", $(this).val())
                })), listenSubmit("#addChargesForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#chargesSave");
                    t.button("loading"), $.ajax({
                        url: $("#createChargesURL").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_charges_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#chargesErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".charge-edit-btn", (function (t) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var a, i = $(t.currentTarget).attr("data-id");
                        a = i, $.ajax({
                            url: $(".chargesURl").val() + "/" + a + "/edit",
                            type: "GET",
                            success: function (t) {
                                t.success && ($("#chargeId").val(t.data.id), $("#editChargeTypeId").val(t.data.charge_type).trigger("change.select2"), e("#editChargeCategoryId", t.data.charge_type), $("#editCode").val(t.data.code), $("#editChargesDescription").val(t.data.description), $("#editStdCharge").val(addCommas(t.data.standard_charge)), setTimeout((function () {
                                    $("#editChargeCategoryId").val(t.data.charge_category_id).trigger("change.select2")
                                }), 2e3), $("#edit_charges_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editChargesForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editChargesSave");
                    t.button("loading");
                    var a = $("#chargeId").val();
                    $.ajax({
                        url: $(".chargesURl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_charges_modal").modal("hide"), $("#chargeDetailShowUrl").length ? window.location.href = $("#chargeDetailShowUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_charges_modal", (function () {
                    resetModalForm("#addChargesForm", "#chargesErrorsBox"), $("#chargeTypeId,#chargeCategoryId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_charges_modal", (function () {
                    resetModalForm("#editChargesForm", "#editChargesErrorsBox"), $("#editChargeTypeId,#editChargeCategoryId").val("").trigger("change.select2")
                }))
            },
            7097: () => {
                document.addEventListener("turbo:load", (function () {})), listenSubmit("#addCurrencyForm", (function (e) {
                    e.preventDefault(), $.ajax({
                        url: $("#indexCurrencyCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_currency_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenHiddenBsModal("#add_currency_modal", (function () {
                    resetModalForm("#addCurrencyForm")
                })), listenClick(".currency-edit-btn", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexCurrenciesUrl").val() + "/" + t + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#editCurrencyId").val(t.id), $("#editCurrencyName").val(t.currency_name), $("#editCurrencyCode").val(t.currency_code), $("#editCurrencyIcon").val(t.currency_icon), $("#edit_currency_modal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenSubmit("#editCurrencyForm", (function (e) {
                    e.preventDefault();
                    var t = $("#editCurrencyId").val();
                    $.ajax({
                        url: $("#indexCurrenciesUrl").val() + "/" + t,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_currency_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenHiddenBsModal("#edit_currency_modal", (function () {
                    resetModalForm("#editCurrencyForm")
                })), listenClick(".currency-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexCurrenciesUrl").val() + "/" + t, "", $("#Currency").val())
                }))
            },
            6576: () => {
                "use strict";
                listenChange("#profileImage", (function () {
                    var e = isValidDocument($(this), "#customValidationErrorsBox");
                    isEmpty(e) || 0 == e || ($("#customValidationErrorsBox").html("").hide(), displayPhoto(this, "#previewImage"))
                })), window.isValidDocument = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["gif", "png", "jpg", "jpeg"]) ? ($(e).val(""), $(t).html(Lang.get("messages.user.validate_image_type")).removeClass("d-none").show(), setTimeout((function () {
                        $(t).slideUp(300)
                    }), 5e3), !1) : ($(t).addClass("d-none"), a)
                }, window.displayPhoto = function (e, t) {
                    var a = !0;
                    if (e.files && e.files[0]) {
                        var i = new FileReader;
                        i.onload = function (e) {
                            var i = new Image;
                            i.src = e.target.result, i.onload = function () {
                                $(t).attr("src", e.target.result), a = !0
                            }
                        }, a && (i.readAsDataURL(e.files[0]), $(t).show())
                    }
                }
            },
            8178: () => {
                "use strict";
                window.handleSearchDatatable = function (e) {
                    var t = document.querySelector('[data-datatable-filter="search"]');
                    t.addEventListener("keyup", (function (t) {
                        e.search(t.target.value).draw()
                    })), t.addEventListener("search", (function (t) {
                        e.search(t.target.value).draw()
                    }))
                }, $.extend($.fn.dataTable.defaults, {
                    paging: !0,
                    info: !0,
                    ordering: !0,
                    autoWidth: !1,
                    pageLength: 10,
                    language: {
                        search: "",
                        sSearch: "Search"
                    },
                    preDrawCallback: function () {
                        $(".dataTables_filter input").addClass("form-control"), $(".dataTables_filter input").attr("placeholder", Lang.get("messages.common.search"))
                    }
                })
            },
            4532: (e, t, a) => {
                "use strict";
                var i = a(2743),
                    n = $('meta[name="csrf-token"]').attr("content");
                $.ajaxSetup({
                    headers: {
                        "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content")
                    }
                }), document.addEventListener("turbo:load", (function () {
                    $('[data-control="select2"]').each((function () {
                        $(this).select2()
                    })), n = $('meta[name="csrf-token"]').attr("content"), $.ajaxSetup({
                        headers: {
                            "X-CSRF-TOKEN": n
                        }
                    }), $(".alert").delay(5e3).slideUp(300), r(), s(), IOInitImageComponent(), IOInitSidebar()
                }));
                $(".getLanguage").val();
                var r = function () {
                        $((function () {
                            $(".modal").on("shown.bs.modal", (function () {
                                $(this).find("input:text").first().focus()
                            }))
                        }))
                    },
                    s = function () {
                        $('input:text:not([readonly="readonly"]):not([name="search"]):not(.front-input)').first().focus()
                    };
                $(document).on("keydown", (function (e) {
                    27 === e.keyCode && $(".modal").modal("hide")
                })), $('input:text:not([readonly="readonly"])').first().focus(), $(document).on("select2:open", (function () {
                    var e = document.querySelectorAll(".select2-container--open .select2-search__field");
                    e[e.length - 1].focus()
                })), $('[data-control="select2"]').each((function () {
                    $(this).select2()
                })), document.addEventListener("livewire:load", (function () {
                    window.livewire.hook("message.processed", (function () {
                        $('[data-control="select2"]').each((function () {
                            $(this).select2()
                        }))
                    }))
                })), $(document).on("focus", ".select2.select2-container", (function (e) {
                    var t = e.originalEvent,
                        a = $(this).find(".select2-selection--single").length > 0;
                    t && a && $(this).siblings("select:enabled").select2("open")
                })), $(document).ready((function () {
                    $('[data-bs-toggle="tooltip"]').tooltip(), $(document).find(".nav-item.nav-dropdown ul li.nav-item").hasClass("active") && $(document).find(".nav-item.nav-dropdown ul li.nav-item.active").parent("ul").parent("li").addClass("open"), listenClick(".nav-item.nav-dropdown", (function () {
                        $(document).find(".nav-item.nav-dropdown").hasClass("open") && $(this).hasClass("open") ? setTimeout((function () {
                            $(this).removeClass("open")
                        }), 1e3) : $(document).find(".nav-item.nav-dropdown").removeClass("open")
                    })), listenKeyup('input[name="email"]', (function () {
                        this.value = this.value.toLowerCase()
                    })), $('input[name="email"]').keypress((function (e) {
                        if (32 === e.which) return !1
                    }))
                })), $((function () {
                    listenShownBsModal(".modal", (function () {
                        $(this).find("input:text").first().focus()
                    })), listenHiddenBsModal(".modal", (function () {
                        $(".image-input.image-input-empty").attr("style", "display:inline-block")
                    }))
                })), window.resetModalForm = function (e, t) {
                    var a = $(e)[0].elements;
                    $.each(a, (function (e, t) {
                        void 0 !== t._flatpickr && (t._flatpickr.clear(), t._flatpickr.setDate(new Date))
                    })), $(e)[0].reset(), $("select.select2Selector").each((function (e, t) {
                        var a = "#" + $(this).attr("id");
                        $(a).val(""), $(a).trigger("change")
                    })), $(t).hide()
                }, window.processingBtn = function (e, t) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        i = $(e).find(t);
                    "loading" === a ? i.button("loading") : i.button("reset")
                }, window.printErrorMessage = function (e, t) {
                    displayErrorMessage(t.responseJSON.message)
                }, toastr.options = {
                    closeButton: !0,
                    debug: !1,
                    newestOnTop: !1,
                    progressBar: !0,
                    positionClass: "toast-top-right",
                    preventDuplicates: !1,
                    onclick: null,
                    showDuration: "300",
                    hideDuration: "1000",
                    timeOut: "5000",
                    extendedTimeOut: "1000",
                    showEasing: "swing",
                    hideEasing: "linear",
                    showMethod: "fadeIn",
                    hideMethod: "fadeOut"
                }, window.manageAjaxErrors = function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "editValidationErrorsBox";
                    404 == e.status ? toastr.error(e.responseJSON.message) : printErrorMessage("#" + t, e)
                }, window.displaySuccessMessage = function (e) {
                    toastr.success(e)
                }, window.displayErrorMessage = function (e) {
                    toastr.error(e)
                }, window.displayPhoto = function (e, t) {
                    var a = !0;
                    if (e.files && e.files[0]) {
                        var i = new FileReader;
                        i.onload = function (e) {
                            var i = new Image;
                            i.src = e.target.result, i.onload = function () {
                                $(t).attr("src", e.target.result), a = !0
                            }
                        }, a && (i.readAsDataURL(e.files[0]), $(t).show())
                    }
                }, window.isValidFile = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["gif", "png", "jpg", "jpeg"]) ? ($(e).val(""), $(t).html(Lang.get("messages.user.validate_image_type")).removeClass("d-none").show(), setTimeout((function () {
                        $(t).slideUp(300)
                    }), 5e3), !1) : ($(t).addClass("d-none"), !0)
                }, window.format = function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "YYYY-MM-DD";
                    return moment(e).format(t)
                }, window.DatetimepickerDefaults = function (e) {
                    return $.extend({}, {
                        sideBySide: !0,
                        ignoreReadonly: !0,
                        icons: {
                            up: "icon-arrow-up-circle icons font-2xl",
                            down: "icon-arrow-down-circle icons font-2xl",
                            previous: "icon-arrow-left icons",
                            next: "icon-arrow-right icons",
                            time: "fa fa-clock-o",
                            date: "fa fa-calendar",
                            today: "fa fa-crosshairs",
                            clear: "fa fa-trash",
                            close: "fa fa-times"
                        }
                    }, e)
                }, window.screenLock = function () {
                    $("#overlay-screen-lock").show(), $("body").css({
                        "pointer-events": "none",
                        opacity: "0.6"
                    })
                }, window.screenUnLock = function () {
                    $("body").css({
                        "pointer-events": "auto",
                        opacity: "1"
                    }), $("#overlay-screen-lock").hide()
                }, window.prepareTemplateRender = function (e, t) {
                    return i.templates(e).render(t)
                }, window.getCurrentCurrencyClass = function () {
                    return "<b>" + $(".currentCurrency").val() + "</b>"
                }, window.getCurrentCurrency = function () {
                    return $(".getCurrentCurrency").val()
                }, window.hideDropdownManually = function (e, t) {
                    e.removeClass("show"), t.removeClass("show")
                }, window.displayDocument = function (e, t, a) {
                    var i = !0;
                    if (e.files && e.files[0]) {
                        var n = new FileReader;
                        n.onload = function (e) {
                            var n = new Image; - 1 == $.inArray(a, ["pdf", "doc", "docx", "mp3", "mp4"]) ? n.src = e.target.result : "pdf" == a ? ($("#editPhoto").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")'), n.src = $(".pdfDocumentImageUrl").val()) : n.src = "mp3" == a ? $(".audioDocumentImageUrl").val() : "mp4" == a ? $(".videoDocumentImageUrl").val() : $(".docxDocumentImageUrl").val(), n.onload = function () {
                                $(t).attr("src", n.src), $(t).css("background-image", 'url("' + n.src + '")'), i = !0
                            }
                        }, i && (n.readAsDataURL(e.files[0]), $(t).show())
                    }
                };
                $(".ajaxCallIsRunning").val();
                window.ajaxCallInProgress = function () {
                    !0
                }, window.ajaxCallCompleted = function () {
                    !1
                }, window.UnprocessableInputError = function (e) {
                    toastr.error(e.responseJSON.message)
                }, window.setValueOfEmptySpan = function () {
                    $("span.showSpan").each((function () {
                        $(this).text() || $(this).text(Lang.get("messages.common.n/a"))
                    }))
                }, window.addCommas = function (e) {
                    for (var t = (e += "").split("."), a = t[0], i = t.length > 1 ? "." + t[1] : "", n = /(\d+)(\d{3})/; n.test(a);) a = a.replace(n, "$1,$2");
                    return a + i
                }, $((function () {
                    listenClick(".notification", (function (e) {
                        e.stopPropagation();
                        var t = $(this).data("id"),
                            a = $(this);
                        $('[data-toggle="tooltip"]').tooltip("hide"), $.ajax({
                            type: "get",
                            url: "/notification/" + t + "/read",
                            success: function () {
                                a.remove(), displaySuccessMessage(Lang.get("messages.notification.notification_read_successfully"));
                                var e = document.getElementsByClassName("notification").length;
                                $("#counter").text(e), 0 == e && ($(".read-all-notification").addClass("d-none"), $(".empty-state").removeClass("d-none"), $("#counter").text(e), $(".notification-count").addClass("d-none"))
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    })), listenClick("#readAllNotification", (function (e) {
                        e.stopPropagation(), $.ajax({
                            type: "post",
                            url: "/read-all-notification",
                            success: function () {
                                $(".notification").remove(), displaySuccessMessage(Lang.get("messages.notification.all_notification_read_successfully"));
                                var e = document.getElementsByClassName("notification").length;
                                $("#counter").text(e), $("#readAllNotification").addClass("d-none"), $(".empty-state").addClass("d-none"), $(".empty-state.empty-notification").removeClass("d-none"), $(".notification-count").addClass("d-none"), displaySuccessMessage(Lang.get("messages.notification.all_notification_read_successfully"))
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }))
                })), window.avoidSpace = function (e) {
                    if (32 == (e ? e.which : window.event.keyCode) && e.path[0].value.length <= 0) return !1
                };
                var o = "asset('assets/img/avatar.png')";
                window.defaultImagePreview = function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    1 == t ? $(e).css("background-image", 'url("' + o + '")') : $(e).css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                }, window.cancelAppointment = function (e, t, a, i) {
                    swal({
                        title: Lang.get("messages.common.cancel") + " " + Lang.get("messages.web_menu.appointment"),
                        text: Lang.get("messages.appointment.are_you_sure_want_to_cancel") + " " + a + " ?",
                        type: "warning",
                        icon: "warning",
                        closeOnConfirm: !1,
                        confirmButtonColor: "#000000",
                        showLoaderOnConfirm: !0,
                        buttons: {
                            confirm: Lang.get("messages.common.yes"),
                            cancel: Lang.get("messages.common.no")
                        }
                    }).then((function (t) {
                        t && function (e, t, a, i) {
                            $.ajax({
                                url: e,
                                type: "POST",
                                success: function (e) {
                                    e.success && Livewire.emit("refresh"), swal({
                                        title: Lang.get("messages.common.canceled") + " " + Lang.get("messages.web_menu.appointment"),
                                        text: a + Lang.get("messages.appointment.has_been_cancelled"),
                                        icon: "success",
                                        confirmButtonColor: "#D9214E",
                                        buttons: {
                                            confirm: Lang.get("messages.common.ok")
                                        },
                                        timer: 2e3
                                    })
                                },
                                error: function (e) {
                                    swal({
                                        title: "Error",
                                        icon: "error",
                                        text: e.responseJSON.message,
                                        type: "error",
                                        confirmButtonColor: "#D9214E",
                                        buttons: {
                                            confirm: Lang.get("messages.common.ok")
                                        },
                                        timer: 5e3
                                    })
                                }
                            })
                        }(e, 0, a)
                    }))
                }
            },
            6721: () => {
                "use strict";

                function deleteItemAjax(url) {
                    var tableId = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        header = arguments.length > 2 ? arguments[2] : void 0,
                        callFunction = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    $.ajax({
                        url,
                        type: "DELETE",
                        dataType: "json",
                        success: function success(obj) {
                            obj.success && (Livewire.emit("refresh"), Livewire.emit("resetPage"), $("#consultant-div").load(location.href + " #consultant-div")), swal({
                                icon: "success",
                                title: $(".deletedVariable").val(),
                                confirmButtonColor: "#f62947",
                                text: header + " " + $(".hasBeenDeletedVariable").val(),
                                timer: 2e3,
                                buttons: {
                                    confirm: $(".okVariable").val()
                                }
                            }), callFunction && eval(callFunction)
                        },
                        error: function (e) {
                            swal({
                                title: "",
                                text: e.responseJSON.message,
                                confirmButtonColor: "#f62947",
                                icon: "error",
                                timer: 5e3,
                                buttons: {
                                    confirm: $(".okVariable").val()
                                }
                            })
                        }
                    })
                }
                window.deleteItem = function (e) {
                    var t = arguments.length > 2 ? arguments[2] : void 0;
                    swal({
                        title: $(".deleteVariable").val(),
                        text: $(".confirmVariable").val() + t + "?",
                        icon: $(".sweetAlertIcon").val(),
                        buttons: {
                            confirm: $(".yesVariable").val() + ", " + $(".deleteVariable").val(),
                            cancel: $(".noVariable").val() + ", " + $(".cancelVariable").val()
                        }
                    }).then((function (a) {
                        a && (Livewire.emit("refresh"), deleteItemAjax(e, null, t, null))
                    }))
                }
            },
            3147: () => {
                "use strict";
                window.isEmpty = function (e) {
                    return null == e || "" === e
                }, window.randomCode = function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 6;
                    return Math.random().toString(36).slice(-e)
                }, window.listen = function (e, t, a) {
                    $(document).on(e, t, a)
                }, window.listenClick = function (e, t) {
                    $(document).on("click", e, t)
                }, window.listenSubmit = function (e, t) {
                    $(document).on("submit", e, t)
                }, window.listenHiddenBsModal = function (e, t) {
                    $(document).on("hidden.bs.modal", e, t)
                }, window.listenChange = function (e, t) {
                    $(document).on("change", e, t)
                }, window.listenKeyup = function (e, t) {
                    $(document).on("keyup", e, t)
                }, window.listenShownBsModal = function (e, t) {
                    $(document).on("shown.bs.modal", e, t)
                }
            },
            7957: () => {
                "use strict";
                window.setPrice = function (e, t) {
                    if ("" != t || t > 0) {
                        "number" != typeof t && (t = t.replace(/,/g, ""));
                        var a = addCommas(t);
                        $(e).val(a)
                    }
                }, window.addCommas = function (e) {
                    for (var t = (e += "").split("."), a = t[0], i = t.length > 1 ? "." + t[1] : "", n = /(\d+)(\d{3})/; n.test(a);) a = a.replace(n, "$1,$2");
                    return a + i
                }, window.getFormattedPrice = function (e) {
                    if ("" != e || e > 0) return "number" != typeof e && (e = e.replace(/,/g, "")), addCommas(e)
                }, window.priceFormatSelector = function (e) {
                    listen("input keyup keydown keypress", e, (function (e) {
                        var t = $(this).val();
                        if ("" === t) $(this).val("");
                        else {
                            if (/^[0-9]+(,[0-9]+)*$/.test(t)) return $(this).val(getFormattedPrice(t)), !0;
                            $(this).val(t.replace(/\D/g, ""))
                        }
                    }))
                }, window.removeCommas = function (e) {
                    return e.replace(/,/g, "")
                }, priceFormatSelector(".price-input")
            },
            5133: () => {
                "use strict";
                window.newRecord = function (e, t) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "#AddModal",
                        i = "" === e.formSelector ? e.formData : new FormData($(e.formSelector)[0]);
                    t.attr("disabled", !0), $.ajax({
                        url: e.url,
                        type: e.type,
                        dataType: "json",
                        data: i,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $(a).modal("hide"), t.attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message), t.attr("disabled", !1)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }, window.editRecord = function (e, t) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "#EditModal",
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
                    t.attr("disabled", !0);
                    var n = "" === e.formSelector ? e.formData : new FormData($(e.formSelector)[0]);
                    $.ajax({
                        url: e.url,
                        type: e.type,
                        data: n,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $(a).modal("hide"), t.attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            t.attr("disabled", !1), UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset"), $(i).attr("disabled", !0)
                        }
                    })
                }, window.editRecordWithForm = function (e, t) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "#EditModal",
                        i = "" === e.formSelector ? e.formData : $(e.formSelector).serialize();
                    t.attr("disabled", !0), $.ajax({
                        url: e.url,
                        type: e.type,
                        data: i,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $(a).modal("hide"), t.attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            t.attr("disabled", !1), UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }
            },
            6619: () => {
                "use strict";
                document.addEventListener("turbo:load", (function () {
                    if (!$(".phoneNumber").length) return !1;
                    Lang.setLocale($(".userCurrentLanguage").val());
                    var e = document.querySelector(".phoneNumber"),
                        t = document.querySelector(".error-msg"),
                        a = document.querySelector(".valid-msg"),
                        i = [Lang.get("messages.common.invalid_number"), Lang.get("messages.common.invalid_country_code"), Lang.get("messages.common.too_short"), Lang.get("messages.common.too_long"), Lang.get("messages.common.invalid_number"), Lang.get("messages.common.invalid_number")];
                    if ($(".isEdit").val()) var n = $(".country_iso").val();
                    else n = $(".getISOCode").val();
                    var r = window.intlTelInput(e, {
                            initialCountry: n,
                            separateDialCode: !0,
                            geoIpLookup: function (e, t) {
                                $.get("https://ipinfo.io", (function () {}), "jsonp").always((function (t) {
                                    var a = t && t.country ? t.country : "";
                                    e(a)
                                }))
                            },
                            utilsScript: $(".utilsScript").val()
                        }),
                        s = function () {
                            e.classList.remove("error"), t.innerHTML = "", t.classList.add("d-none"), a.classList.add("d-none")
                        };
                    e.addEventListener("blur", (function () {
                        if (s(), e.value.trim())
                            if (r.isValidNumber()) a.classList.remove("d-none");
                            else {
                                e.classList.add("error");
                                var n = r.getValidationError(); - 99 == n && (n = 5), t.innerHTML = i[n], t.classList.remove("d-none")
                            }
                    })), e.addEventListener("change", s), e.addEventListener("keyup", s);
                    var o = $(".phoneNo").val();
                    void 0 !== o && "" !== o && setTimeout((function () {
                        $(".phoneNumber").trigger("change")
                    }), 500);
                    if (listen("blur keyup change countrychange", (function () {
                            void 0 !== o && "" !== o && (r.setNumber("+" + o), o = "");
                            var e = r.selectedCountryData.dialCode;
                            $(".prefix_code").val(e)
                        })), $(".isEdit").val()) {
                        var d = r.selectedCountryData.dialCode,
                            l = r.selectedCountryData.iso2;
                        $(".prefix_code").val(d), $(".country_iso").val(l)
                    }
                    $(".phoneNumber").focus(), $(".phoneNumber").blur();
                    var c = $(".phoneNumber").val().replaceAll("-", " ").replace(/\s/g, "");
                    $(".phoneNumber").val(c)
                }))
            },
            6045: () => {
                "use strict";
                listenHiddenBsModal("#AddModal", (function () {
                    $(".preview-image").prop("src", $(".defaultImageUrl").val()), $(".select2-dd").val("").trigger("change.select2"), resetModalForm("#addNewForm", "#validationErrorsBox")
                })), listenHiddenBsModal("#EditModal", (function () {
                    $(".preview-image").prop("src", $(".defaultImageUrl").val()), $(".select2-dd").val("").trigger("change.select2"), resetModalForm("#editForm", "#editValidationErrorsBox")
                }))
            },
            9434: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#incomeExpenseChart").length) return;
                    e = $("#incomeExpenseChart"), a()
                }));
                var e = "",
                    t = "";
                var a = function () {
                        $.ajax({
                            type: "post",
                            url: route("dashboard.chart"),
                            dataType: "json",
                            success: function (a) {
                                e.empty(), t = a.data, i(t)
                            },
                            cache: !1
                        })
                    },
                    i = function (e) {
                        var t = document.getElementById("incomeExpenseChart");
                        t.style.height = "500px", new Chart(t, {
                            type: "line",
                            data: {
                                labels: e.days,
                                datasets: [{
                                    label: Lang.get("messages.income"),
                                    data: e.income.data,
                                    fill: !1,
                                    borderColor: "rgb(153, 102, 255)",
                                    backgroundColor: "rgba(153, 102, 255, 0.2)",
                                    borderWidth: 2
                                }, {
                                    label: Lang.get("messages.expenses"),
                                    data: e.expense.data,
                                    fill: !1,
                                    borderColor: "rgb(43,116,216)",
                                    backgroundColor: "rgba(92,123,233,0.2)",
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                layout: {
                                    padding: {
                                        bottom: 30,
                                        top: 20
                                    }
                                },
                                elements: {
                                    line: {
                                        tension: .5
                                    }
                                },
                                responsive: !0,
                                plugins: {
                                    title: {
                                        display: !0,
                                        text: Lang.get("messages.yearly_income_expense_chart") + " (" + moment().year() + ")",
                                        align: "start",
                                        font: {
                                            size: "20px",
                                            lineHeight: 1.2
                                        }
                                    },
                                    legend: {
                                        display: !0
                                    }
                                },
                                scales: {
                                    y: {
                                        beginAtZero: !0,
                                        title: {
                                            display: !0,
                                            text: Lang.get("messages.incomes.amount")
                                        },
                                        grid: {
                                            display: !1
                                        },
                                        ticks: {
                                            min: 0,
                                            callback: function (e) {
                                                return new Intl.NumberFormat("en-US", {
                                                    style: "currency",
                                                    currency: getCurrentCurrency()
                                                }).format(e)
                                            }
                                        }
                                    },
                                    x: {
                                        beginAtZero: !0,
                                        title: {
                                            display: !0,
                                            text: Lang.get("messages.employee_payroll.month")
                                        },
                                        grid: {
                                            display: !1
                                        }
                                    }
                                }
                            }
                        })
                    };
                listenClick(".notice-board-view-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        $.ajax({
                            url: $(".noticeBoardUrl").val() + "/" + t,
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#showNoticeBoardTitle").html(""), $("#showNoticeBoardDescription").html(""), $("#showNoticeBoardTitle").append(e.data.title), $("#showNoticeBoardDescription").append(e.data.description), $("#show_notice_boards_modal").appendTo("body").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                }))
            },
            2325: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addDeathReportForm").length && !$("#editDeathReportForm").length) return !1;
                    var e = $("#deathCaseId"),
                        t = $("#deathDoctorId"),
                        a = $("#editDeathCaseId"),
                        i = $("#editDeathDoctorId"),
                        n = $("#deathDate"),
                        r = $("#editDeathDate");
                    e.length && $("#deathCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#add_death_reports_modal")
                    });
                    t.length && $("#deathDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#add_death_reports_modal")
                    });
                    a.length && $("#editDeathCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_death_reports_modal")
                    });
                    i.length && $("#editDeathDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_death_reports_modal")
                    });
                    n.length && $("#deathDate").flatpickr({
                        dateFormat: "Y-m-d h:i K",
                        useCurrent: !0,
                        enableTime: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    });
                    r.length && $("#editDeathDate").flatpickr({
                        dateFormat: "Y-m-d h:i K",
                        useCurrent: !0,
                        enableTime: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addDeathReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#deathReportSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexDeathReportCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_death_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#deathReportErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".death-report-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $(".deathReportUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#deathReportId").val(e.data.id), $("#editDeathCaseId").val(e.data.case_id).trigger("change.select2"), $("#editDeathDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editDeathDescription").val(e.data.description), document.querySelector("#editDeathDate")._flatpickr.setDate(moment(e.data.date).format()), $("#edit_death_reports_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editDeathReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDeathReportSave");
                    t.button("loading");
                    var a = $("#deathReportId").val();
                    $.ajax({
                        url: $(".deathReportUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_death_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_death_reports_modal", (function () {
                    resetModalForm("#addDeathReportForm", "#deathReportErrorsBox"), $("#deathCaseId, #deathDoctorId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_death_reports_modal", (function () {
                    resetModalForm("#editDeathReportForm", "#c")
                }))
            },
            1448: () => {},
            7977: () => {
                "use strict";
                listenClick(".death-report-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".deathReportUrl").val() + "/" + t, "", $("#deathReport").val())
                }))
            },
            291: () => {},
            312: () => {
                "use strict";
                listenSubmit("#addDiagnosisCatForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#diagnosisCatSave");
                    t.button("loading"), $.ajax({
                        url: $("#diagnosisCategoryCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_diagnosis_categories_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#diagnosisCatErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".diagnosis-category-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#diagnosisCategoryUrl").val() + "/" + t, "", $("#diagnosisCategory").val())
                })), listenClick(".diagnosis-category-edit-btn", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#diagnosisCategoryUrl").val() + "/" + t + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#diagnosisCategoryId").val(e.data.id), $("#editDiagnosisCatName").val(e.data.name), $("#editDiagnosisCatDescription").val(e.data.description), $("#edit_diagnosis_categories_modal").modal("show"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenSubmit("#editDiagnosisCatForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDiagnosisCatSave");
                    t.button("loading");
                    var a = $("#diagnosisCategoryId").val();
                    $.ajax({
                        url: $("#diagnosisCategoryUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_diagnosis_categories_modal").modal("hide"), $("#diagnosisCategoryShowUrl").length ? window.location.href = $("#diagnosisCategoryShowUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_diagnosis_categories_modal", (function () {
                    resetModalForm("#addDiagnosisCatForm", "#diagnosisCatErrorsBox")
                })), listenHiddenBsModal("#edit_diagnosis_categories_modal", (function () {
                    resetModalForm("#editDiagnosisCatForm", "#editDiagnosisCatErrorsBox")
                }))
            },
            8291: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addDoctorChargesForm").length && !$("#editDoctorChargesForm").length) return !1;
                    var e = $("#chargesDoctorId"),
                        t = $("#editChargesDoctorId");
                    e.length && $("#chargesDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#add_doctor_opd_charges_modal")
                    });
                    t.length && $("#editChargesDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_doctor_opd_charges_modal")
                    })
                })), listenSubmit("#addDoctorChargesForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#doctorChargesSave");
                    t.button("loading"), $.ajax({
                        url: $("#doctorOPDCreateChargeURLID").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_doctor_opd_charges_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#doctorChargesErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".doctor-opd-charge-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#doctorOPDChargeURLID").val() + "/" + t, null, $("#doctorOPDCharges").val())
                })), listenClick(".doctor-opd-charge-edit-btn", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#doctorOPDChargeURLID").val() + "/" + t + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#doctorOPDChargeId").val(e.data.id), $("#editChargesDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editDoctorStandardCharge").val(e.data.standard_charge), $(".price-input").trigger("input"), $("#edit_doctor_opd_charges_modal").modal("show"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenSubmit("#editDoctorChargesForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDoctorChargesSave");
                    t.button("loading");
                    var a = $("#doctorOPDChargeId").val();
                    $.ajax({
                        url: $("#doctorOPDChargeURLID").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_doctor_opd_charges_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_doctor_opd_charges_modal", (function () {
                    resetModalForm("#addDoctorChargesForm", "#doctorChargesErrorsBox"), $("#chargesDoctorId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_doctor_opd_charges_modal", (function () {
                    resetModalForm("#editDoctorChargesForm", "#editDoctorChargesErrorsBox")
                }))
            },
            3949: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createDoctorForm").length && !$("#editDoctorForm").length) return !1;
                    var e = $("#doctorBloodGroup"),
                        t = $("#editDoctorBloodGroup"),
                        a = $("#departmentId"),
                        i = $("#doctorsDepartmentId"),
                        n = $("#editDoctorsDepartmentId"),
                        r = $("#createDoctorForm"),
                        s = $("#editDoctorForm"),
                        o = $("#doctorBirthDate"),
                        d = $("#editDoctorBirthDate");
                    e.length && $("#doctorBloodGroup").select2({
                        width: "100%"
                    }), t.length && $("#editDoctorBloodGroup").select2({
                        width: "100%"
                    }), a.length && $("#departmentId").select2({
                        width: "100%"
                    }), i.length && $("#doctorsDepartmentId").select2({
                        width: "100%"
                    }), n.length && $("#editDoctorsDepartmentId").select2({
                        width: "100%"
                    }), r.length && $("#createDoctorForm").find("input:text:visible:first").focus(), s.length && $("#editDoctorForm").find("input:text:visible:first").focus(), o.length && $("#doctorBirthDate").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), d.length && $("#editDoctorBirthDate").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenChange(".doctorProfileImage", (function () {
                    var t = e($(this), "#customValidationErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#customValidationErrorsBox").removeClass("d-none hide"), $("#customValidationErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=customValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#customValidationErrorsBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                })), listenChange(".editDoctorProfileImage", (function () {
                    var t = e($(this), "#editDoctorErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#editDoctorErrorsBox").removeClass("d-none hide"), $("#editDoctorErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editDoctorErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editDoctorErrorsBox").html("").hide(), displayDocument(this, "#editDoctorErrorsBox", t))
                })), listenKeyup("#doctorFacebookUrl,#editDoctorFacebookUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#doctorTwitterUrl,#editDoctorTwitterUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#doctorInstagramUrl,#editDoctorInstagramUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#doctorLinkedInUrl,#editDoctorLinkedInUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenSubmit("#createDoctorForm, #editDoctorForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1;
                    var e = $(".facebookUrl").val(),
                        t = $(".twitterUrl").val(),
                        a = $(".instagramUrl").val(),
                        i = $(".linkedInUrl").val(),
                        n = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i),
                        r = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i),
                        s = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i),
                        o = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i);
                    return "" != e && !e.match(n) ? (displayErrorMessage(Lang.get("messages.user.validate_facebook_url")), !1) : "" != t && !t.match(r) ? (displayErrorMessage(Lang.get("messages.user.validate_twitter_url")), !1) : "" != a && !a.match(s) ? (displayErrorMessage(Lang.get("messages.user.validate_instagram_url")), !1) : "" == i || !!i.match(o) ? void 0 : (displayErrorMessage(Lang.get("messages.user.validate_linkedin_url")), !1)
                })), listenClick(".doctor-remove-image", (function () {
                    defaultImagePreview(".previewImage", 1)
                }))
            },
            3737: () => {
                "use strict";
                listenClick(".doctor-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexDoctorUrl").val() + "/" + t, "", $("#Doctor").val())
                })), listenChange(".doctor-active-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexDoctorUrl").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), Livewire.emit("refresh"))
                        }
                    })
                })), listenClick("#doctorResetFilter", (function () {
                    $("#doctorsHead").val(2).trigger("change"), hideDropdownManually($("#doctorsFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#doctorsHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            217: () => {},
            7836: () => {},
            4477: () => {},
            3109: () => {
                "use strict";
                listenClick(".doctor-department-delete-btn", (function (e) {
                    var t = e.currentTarget.dataset.id;
                    deleteItem($("#indexDoctorDepartmentUrl").val() + "/" + t, "", $("#doctorDepartment").val())
                })), listenSubmit("#addDoctorDepartmentForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#doctorDepartmentSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexDoctorDepartmentCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_doctor_departments_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#doctorDepartmentErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".doctor-department-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = e.currentTarget.dataset.id;
                        t = a, $.ajax({
                            url: $("#indexDoctorDepartmentUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#doctorDepartmentId").val(e.data.id), $("#editDoctorDepartmentTitle").val(e.data.title), $("#editDoctorDepartmentDescription").val(e.data.description), $("#edit_doctor_departments_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editDoctorDepartmentForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDoctorDepartmentSave");
                    t.button("loading");
                    var a = $("#doctorDepartmentId").val();
                    $.ajax({
                        url: $("#indexDoctorDepartmentUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_doctor_departments_modal").modal("hide"), $("#showDoctorDepartmentUrl").length ? window.location.href = $("#showDoctorDepartmentUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_doctor_departments_modal", (function () {
                    resetModalForm("#addDoctorDepartmentForm", "#doctorDepartmentErrorsBox")
                })), listenHiddenBsModal("#edit_doctor_departments_modal", (function () {
                    resetModalForm("#editDoctorDepartmentForm", "#editDoctorDepartmentErrorsBox")
                }))
            },
            8621: () => {},
            4599: () => {
                "use strict";

                function e(e, t, a) {
                    var i = $(e).val().split(".").pop().toLowerCase();
                    return a.files[0].size > 1e7 ? ($(e).val(""), $(t).html(Lang.get("messages.user.validate_image_size")).show(), setTimeout((function () {
                        $(t).slideUp(500)
                    }), 5e3), !1) : -1 == $.inArray(i, ["png", "jpg", "jpeg", "pdf", "doc", "docx", "webp"]) ? ($(e).val(""), $(t).html(Lang.get("messages.document.validate_doc_type")).show(), setTimeout((function () {
                        $(t).slideUp(500)
                    }), 5e3), !1) : i
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$(".addDocumentForm").length && !$("#editDocumentForm").length) return !1;
                    var e = $("#documentPatientId"),
                        t = $("#documentTypeId"),
                        a = $("#editDocumentPatientId"),
                        i = $("#editDocumentTypeId");
                    e.length && (editDocumentTypeId, $("#documentPatientId").select2({
                        width: "100%",
                        dropdownParent: $("#add_documents_modal")
                    }));
                    t.length && $("#documentTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#add_documents_modal")
                    });
                    a.length && $("#editDocumentPatientId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_documents_modal")
                    });
                    i.length && $("#editDocumentTypeId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_documents_modal")
                    })
                })), listenClick(".document-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexDocumentsUrl").val() + "/" + t, "", $("#Documents").val())
                })), listenChange("#documentImage,#editDocumentImage", (function () {
                    $(this).val()
                })), listenSubmit(".addDocumentForm", (function (e) {
                    if (e.preventDefault(), "" !== $("#documentErrorsBox").text()) return $("#documentImage").focus(), displayErrorMessage($("#documentErrorsBox").text()), !1;
                    var t = jQuery(this).find("#documentSave");
                    t.button("loading"), t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#indexDocumentsCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_documents_modal")
                })), listenClick(".document-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexDocumentsUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data.document_url.split(".").pop().toLowerCase();
                                    "pdf" == t ? $("#editDocumentPreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editDocumentPreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : $("#editDocumentPreviewImage").css("background-image", 'url("' + e.data.document_url + '")'), $("#editDocumentTypeId").val(e.data.document_type_id).trigger("change.select2"), $("#editDocumentPatientId").val(e.data.patient_id).trigger("change.select2"), $("#editDocumentTitle").val(e.data.title), isEmpty(e.data.document_url) ? $("#editDocumentUrl").hide() : $("#editDocumentUrl").attr("href", e.data.document_url), $("#documentId").val(e.data.id), $("#editDocumentNotes").val(e.data.notes), $("#edit_documents_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editDocumentForm", (function (e) {
                    if (e.preventDefault(), "" !== $("#editDocumentErrorsBox").text()) return $("#documentImage").focus(), displayErrorMessage($("#editDocumentErrorsBox").text()), !1;
                    var t = jQuery(this).find("#editDocumentSave");
                    t.button("loading");
                    var a = $("#documentId").val(),
                        i = $("#indexDocumentsUrl").val() + "/" + a + "/update",
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    editRecord(n, t, "#edit_documents_modal")
                })), listenHiddenBsModal("#add_documents_modal", (function () {
                    $("#documentTypeId").val(null).trigger("change"), $("#documentPatientId").val(null).trigger("change"), $("#documentPreviewImage").css("background-image", "url(" + $("#indexDefaultDocumentImageUrl").val() + ")"), null, resetModalForm(".addDocumentForm", "#documentErrorsBox")
                })), listenHiddenBsModal("#edit_documents_modal", (function () {
                    resetModalForm("#editDocumentForm", "#editDocumentErrorsBox")
                })), listenShownBsModal("#add_documents_modal,#edit_documents_modal", (function () {
                    $("#documentTypeId,#documentPatientId").select2({
                        width: "100%",
                        dropdownParent: $("#add_documents_modal")
                    }), $("#editDocumentTypeId,#editDocumentPatientId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_documents_modal")
                    })
                })), listenChange("#documentImage", (function () {
                    var t = e($(this), "#documentErrorsBox", this);
                    isEmpty(t) || 0 == t || ($("#documentErrorsBox").html("").hide(), displayDocument(this, "#documentPreviewImage", t))
                })), listenChange("#editDocumentImage", (function () {
                    var t = e($(this), "#editDocumentErrorsBox", this);
                    isEmpty(t) || 0 == t || ($("#editDocumentErrorsBox").html("").hide(), displayDocument(this, "#editPreviewImage", t))
                }))
            },
            1948: () => {
                "use strict";
                listenClick(".editDocTypeBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderDocTypeDetailData(t)
                    }
                })), window.renderDocTypeDetailData = function (e) {
                    $.ajax({
                        url: $("#showDocTypeUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#docTypeId").val(e.data.id), $("#editDocTypeName").val(e.data.name), $("#edit_document_types_modal").modal("show"), ajaxCallCompleted())
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editDocTypeForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDocTypeSave");
                    t.button("loading");
                    var a = $("#docTypeId").val(),
                        i = $("#showDocTypeUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "PUT"
                        };
                    editDocumentTypeRecordWithForm(n, t)
                })), window.editDocumentTypeRecordWithForm = function (e, t) {
                    var a = "" === e.formSelector ? e.formData : $(e.formSelector).serialize();
                    $.ajax({
                        url: e.url,
                        type: e.type,
                        data: a,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_document_types_modal").modal("hide"), setTimeout((function () {
                                window.location.reload()
                            }), 3e3))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }
            },
            2895: () => {
                listenSubmit("#addDocTypeForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#docTypeSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#indexDocTypeCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_document_types_modal")
                })), listenClick(".editDocTypBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexDocTypeUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#docTypeId").val(e.data.id), $("#editDocTypeName").val(e.data.name), $("#edit_document_types_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editDocTypForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editDocTypeSave");
                    t.button("loading");
                    var a = $("#docTypeId").val(),
                        i = $(".docTypeUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "PUT"
                        };
                    editRecordWithForm(n, t, "#edit_document_types_modal")
                })), listenClick(".deleteDocTypeBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexDocTypeUrl").val() + "/" + t, "", $("#documentType").val())
                })), listenHiddenBsModal("#add_document_types_modal", (function () {
                    resetModalForm("#addDocTypeForm", "#docTypeErrorsBox")
                }))
            },
            9459: () => {},
            36: () => {},
            306: () => {
                listenChange("#doctorsHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#doctorResetFilter", (function () {
                    $("#doctorsHead").val(2).trigger("change"), hideDropdownManually($("#doctorsFilterBtn"), $(".dropdown-menu"))
                }))
            },
            8722: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#invoice_status_filter").length) return;
                    $("#invoice_status_filter").select2({
                        width: "100%"
                    })
                })), listenChange("#invoice_status_filter", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listen("click", "#resetEmployeeInvoiceFilter", (function () {
                    $("#invoice_status_filter").val(0).trigger("change")
                }))
            },
            2733: () => {},
            1015: () => {},
            5305: () => {
                listenChange("#patient_admission_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#patientAdmissionFilterBtn"), $("#patientAdmissionFilterDiv"))
                })), listenClick("#admissionResetFilter", (function () {
                    $("#patient_admission_filter_status").val(0).trigger("change"), hideDropdownManually($("#patientAdmissionFilterBtn"), $("#patientAdmissionFilterDiv"))
                }))
            },
            2565: () => {},
            5350: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#type").length) return;
                    setTimeout((function () {
                        $("#type").trigger("change")
                    }), 1e3)
                }))
            },
            10: () => {
                listen("click", "#ePayrollResetFilter", (function () {
                    $("#employee_payroll_filter_status").val(0).trigger("change"), hideDropdownManually($("#employeePayrollFilterBtn"), $(".dropdown-menu"))
                })), listen("click", ".deleteEmpPayrollBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexEmployeePayrollUrl").val() + "/" + t, "", $("#employeePayroll").val())
                })), listen("click", ".showEPayrollBtn", (function (e) {
                    e.preventDefault();
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#employeesPayrollShowModal").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                $("#sr_no").text(e.data.sr_no), $("#payroll_id").text(e.data.payroll_id), $("#payroll_role").text(e.data.type_string), $("#employee_full_name").text(e.data.full_name), $("#payroll_month").text(e.data.month), $("#payroll_year").text(e.data.year), $("#salary").text(addCommas(e.data.basic_salary)), $("#allowance").text(addCommas(e.data.allowance)), $("#deductions").text(addCommas(e.data.deductions)), $("#net_salary").text(addCommas(e.data.net_salary)), $("#employee_status").empty();
                                var t = $("#employeesPayrollStatusUnPaid").val(),
                                    a = $("#employeesPayrollStatusPaid").val();
                                1 == e.data.status ? $("#employee_status").append('<span class="badge bg-light-success">' + a + "</span>") : $("#employee_status").append('<span class="badge bg-light-danger">' + t + "</span>"), $("#created_on").text(moment(e.data.created_at).fromNow()), $("#updated_on").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showEmployeePayrolls").appendTo("body").modal("show")
                            }
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenChange("#employee_payroll_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            7513: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPayroll").length && !$("#editPayroll").length) return;
                    $(".price-input").trigger("input"), $(".type").focus()
                })), listenChange(".basicSalary,#allowance,#deductions", (function () {
                    var e = parseFloat(removeCommas($(".basicSalary").val())),
                        t = parseFloat(removeCommas($("#allowance").val())),
                        a = parseFloat(removeCommas($("#deductions").val())),
                        i = (e = isNaN(e) ? 0 : e) + (t = isNaN(t) ? 0 : t);
                    (a = isNaN(a) ? 0 : a) > i && ($("#validationErrorsBox").removeClass("d-none"), $("#validationErrorsBox").text(Lang.get("messages.employee_payroll.employee_payroll_deduction")).show(), $("#deductions").val(null), a = 0, setTimeout((function () {
                        $("#validationErrorsBox").addClass("d-none"), $("#validationErrorsBox").text("")
                    }), 7e3)), i = e + t - a, isNaN(i) ? $("#netSalary").val(0) : $("#netSalary").val(i).trigger("input")
                })), listenChange("#type", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $(".employeeUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            $("#ownerType").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $("#ownerType").append($("<option></option>").attr("value", e).text(t))
                            }));
                            var t = $(".isEdit").val();
                            t && ($("#ownerType").val($(".employeeOwnerId").val()).trigger("change"), t = !1)
                        }
                    }), $("#ownerType").empty(), $("#ownerType").prepend('<option value="0">Select Employee</option>'), $("#ownerType").prop("disabled", !0)
                })), listenSubmit("#createPayroll, #editPayroll", (function () {
                    $(".btnSave").attr("disabled", !0)
                }))
            },
            3143: () => {},
            5891: () => {
                listenChange(".enquiryStatus", (function () {
                    var e, t = $(this).attr("data-id");
                    e = t, $.ajax({
                        url: $("#indexEnquiryUrl").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), Livewire.emit("refresh"))
                        }
                    })
                })), listenClick("#resetEnquiryFilter", (function () {
                    $("#enquiriesHead").val(2).trigger("change"), hideDropdownManually($("#enquiriesFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#enquiriesHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            338: () => {},
            9329: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html($("#indexIncomeDocumentError").val()).show(), !1) : a
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#indexExpenseUrl").length) return;
                    $("#expenseHead").select2({
                        width: "100%"
                    }), $("#expenseId").select2({
                        width: "100%",
                        dropdownParent: $("#add_expenses_modal")
                    }), $("#editExpenseHeadId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_expenses_modal")
                    }), $("#expenseDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    });
                    var e = $("#editExpenseDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    });
                    listenShownBsModal("#add_expenses_modal, #edit_expenses_modal", (function () {
                        $("#expenseId, #editExpenseHeadId:first").focus(), $("#expenseId").select2({
                            width: "100%",
                            dropdownParent: $("#add_expenses_modal")
                        }), $("#editExpenseHeadId").select2({
                            width: "100%",
                            dropdownParent: $("#edit_expenses_modal")
                        })
                    })), listenClick(".deleteExpenseBtn", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        deleteItem($("#indexExpenseUrl").val() + "/" + t, "", $("#Expenses").val())
                    })), listenClick(".editExpensesBtn", (function (t) {
                        if (!$(".ajaxCallIsRunning").val()) {
                            ajaxCallInProgress();
                            var a, i = $(t.currentTarget).attr("data-id");
                            a = i, $.ajax({
                                url: $("#indexExpenseUrl").val() + "/" + a + "/edit",
                                type: "GET",
                                success: function (t) {
                                    if (t.success) {
                                        var a = t.data.document_url.split(".").pop().toLowerCase();
                                        "pdf" == a ? $("#editExpensePreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == a || "doc" == a ? $("#editExpensePreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" == a ? $("#editExpensePreviewImage").css("background-image", 'url("' + $("#indexExpenseDefaultDocumentImageUrl").val() + '")') : $("#editExpensePreviewImage").css("background-image", 'url("' + t.data.document_url + '")'), $("#editExpenseId").val(t.data.id), $("#editExpenseHeadId").val(t.data.expense_head).trigger("change.select2"), $("#editExpenseName").val(t.data.name), e.setDate(format(t.data.date)), $("#editExpenseInvoiceNumber").val(t.data.invoice_number), $("#editExpenseAmount").val(t.data.amount), $(".price-input").trigger("input"), $("#editExpenseDescription").val(t.data.description), isEmpty(t.data.document_url) ? ($("#expenseDocumentUrl").hide(), $(".btn-view").hide()) : ($("#expenseDocumentUrl").show(), $(".btn-view").show(), $("#expenseDocumentUrl").attr("href", t.data.document_url)), $("#edit_expenses_modal").appendTo("body").modal("show"), ajaxCallCompleted()
                                    }
                                },
                                error: function (e) {
                                    manageAjaxErrors(e)
                                }
                            })
                        }
                    }))
                })), listenSubmit("#addExpenseForm", (function (e) {
                    e.preventDefault(), $("#expenseSave").attr("disabled", !0);
                    var t = jQuery(this).find("#expenseSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#indexExpenseCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_expenses_modal")
                })), listenSubmit("#editExpensesForm", (function (e) {
                    e.preventDefault(), $("#editExpenseSave").attr("disabled", !0);
                    var t = jQuery(this).find("#editExpenseSave");
                    t.button("loading");
                    var a = $("#editExpenseId").val(),
                        i = $("#indexExpenseUrl").val() + "/" + a + "/update",
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    window.Livewire.emit("refresh"), editRecord(n, t, "#edit_expenses_modal")
                })), listenClick("#ExpenseResetFilter", (function () {
                    $("#ExpenseHead").val(0).trigger("change"), hideDropdownManually($("#ExpenseFilterBtn"), $(".dropdown-menu"))
                })), listenHiddenBsModal("#add_expenses_modal", (function () {
                    resetModalForm("#addExpenseForm", "#expenseErrorsBox"), $("#expenseSave").attr("disabled", !1), $("#expenseId").val("").trigger("change.select2"), $("#expensePreviewImage").css("background-image", "url(" + $("#indexExpenseDefaultDocumentImageUrl").val() + ")")
                })), listenChange("#expenseAttachment", (function () {
                    var t = e($(this), "#expenseErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), displayErrorMessage(Lang.get("messages.user.validate_image_type"))) : ($("#editIncomeErrorsBox").html("").hide(), displayDocument(this, "#expensePreviewImage", t))
                })), listenChange("#editExpenseAttachment", (function () {
                    var t = e($(this), "#editExpenseErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), displayErrorMessage(Lang.get("messages.user.validate_image_type"))) : ($("#editIncomeErrorsBox").html("").hide(), displayDocument(this, "#editExpensePreviewImage", t))
                })), listenHiddenBsModal("#edit_expenses_modal", (function () {
                    $("#editExpenseSave").attr("disabled", !1), resetModalForm("#editExpensesForm", "#editExpenseErrorsBox")
                })), listenClick(".removeExpenseImage", (function () {
                    defaultImagePreview("#expensePreviewImage")
                })), listenClick(".removeExpenseImageEdit", (function () {
                    defaultImagePreview("#editExpensePreviewImage")
                })), listenChange("#ExpenseHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            5137: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["jpg", "png", "jpeg"]) ? ($(e).val(""), $(t).removeClass("d-none"), $(t).html(Lang.get("messages.user.validate_image_type")).show(), !1) : ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#termConditionPrivacyPolicy").length) return;
                    if (void 0 !== $("#termConditionPrivacyPolicy").val() && 1 == $("#termConditionPrivacyPolicy").val()) {
                        var e = new Quill("#termConditionId", {
                            modules: {
                                toolbar: [
                                    [{
                                        header: [1, 2, !1]
                                    }],
                                    ["bold", "italic", "underline"],
                                    ["image", "code-block"]
                                ]
                            },
                            placeholder: Lang.get("messages.front_setting.terms_conditions"),
                            theme: "snow"
                        });
                        e.on("text-change", (function (t, a, i) {
                            0 === e.getText().trim().length && e.setContents([{
                                insert: ""
                            }])
                        }));
                        var t = new Quill("#privacyPolicyId", {
                            modules: {
                                toolbar: [
                                    [{
                                        header: [1, 2, !1]
                                    }],
                                    ["bold", "italic", "underline"],
                                    ["image", "code-block"]
                                ]
                            },
                            placeholder: Lang.get("messages.front_setting.privacy_policy"),
                            theme: "snow"
                        });
                        t.on("text-change", (function (e, a, i) {
                            0 === t.getText().trim().length && t.setContents([{
                                insert: ""
                            }])
                        }));
                        var a = document.createElement("textarea");
                        a.innerHTML = $(".termConditionData").val(), e.root.innerHTML = a.value, a.innerHTML = $(".privacyPolicyData").val(), t.root.innerHTML = a.value, listenSubmit("#termsAndCondition", (function () {
                            var a = document.createElement("textarea"),
                                i = e.root.innerHTML;
                            a.innerHTML = i;
                            var n = t.root.innerHTML;
                            return 0 === e.getText().trim().length ? (displayErrorMessage(Lang.get("messages.front_setting.the_terms_conditions_is_required")), !1) : 0 === t.getText().trim().length ? (displayErrorMessage(Lang.get("messages.front_setting.the_privacy_policy_is_required")), !1) : ($("#termData").val(i.toString()), void $("#privacyData").val(n.toString()))
                        }))
                    }
                })), listenChange(".homePageImage", (function () {
                    var t = e($(this), "#homeErrorsBox");
                    isEmpty(t) || 0 == t || ($("#homeErrorsBox").html("").hide(), displayDocument(this, "#homePreviewImage", t))
                })), listenChange(".homeDoctorImage", (function () {
                    var t = e($(this), "#homeErrorsBox");
                    isEmpty(t) || 0 == t || ($("#homeErrorsBox").html("").hide(), displayDocument(this, "#homeDoctorPreviewImage", t))
                })), listenSubmit("#addCMSForm", (function () {
                    var e = $("#homeTitleId").val(),
                        t = $("#homePageExperience").val(),
                        a = $("#homeShortDescription").val(),
                        i = $("#homePageBoxTitle").val(),
                        n = $("#homePageBoxDes").val(),
                        r = $("#homeDoctorTextId").val(),
                        s = $("#homeDoctorTitleId").val(),
                        o = $("#homeDoctorDescription").val(),
                        d = $("#homePageCerBoxTl").val(),
                        l = $("#homePageCerBoxDes").val(),
                        c = $("#homePageStep1Tl").val(),
                        u = $("#homePageStep1Des").val(),
                        m = $("#homePageStep2Tl").val(),
                        _ = $("#homePageStep2Des").val(),
                        p = $("#homePageStep3Tl").val(),
                        h = $("#homePageStep3Des").val(),
                        g = $("#homePageStep4Tl").val(),
                        f = $("#homePageStep4Des").val();
                    return isEmpty($.trim(t)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_experience_required")), !1) : isEmpty($.trim(e)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_title_required")), !1) : isEmpty($.trim(a)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_description_required")), !1) : isEmpty($.trim(i)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_box_required")), !1) : isEmpty($.trim(n)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_box_descriptions_required")), !1) : isEmpty($.trim(r)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_certified_required")), !1) : isEmpty($.trim(s)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_certified_title_required")), !1) : isEmpty($.trim(o)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_certified_doctor_description_required")), !1) : isEmpty($.trim(d)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_certified_box_title_required")), !1) : isEmpty($.trim(l)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_certified_description_required")), !1) : isEmpty($.trim(c)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_title_required")), !1) : isEmpty($.trim(u)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_description_required")), !1) : isEmpty($.trim(m)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_two_title_required")), !1) : isEmpty($.trim(_)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_two_description_required")), !1) : isEmpty($.trim(p)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_three_title_required")), !1) : isEmpty($.trim(h)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_three_description_required")), !1) : isEmpty($.trim(g)) || isEmpty($.trim(g)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_four_title_required")), !1) : isEmpty($.trim(f)) ? (displayErrorMessage(Lang.get("messages.front_setting.home_page_step_four_description_required")), !1) : void 0
                })), listenSubmit("#createAboutUs", (function () {
                    var e = $("#aboutUsTitle").val(),
                        t = $("#aboutUsDes").val(),
                        a = $("#aboutUsMission").val();
                    return isEmpty($.trim(e)) ? (displayErrorMessage(Lang.get("messages.front_setting.about_us_title_required")), !1) : isEmpty($.trim(t)) ? (displayErrorMessage(Lang.get("messages.front_setting.about_us_description_required")), !1) : isEmpty($.trim(a)) ? (displayErrorMessage(Lang.get("messages.front_setting.about_us_mission_required")), !1) : void 0
                }))
            },
            9: () => {
                listenSubmit("#addFrontServiceForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#frontServiceSave");
                    $("#frontServiceSave").attr("disabled", !0), t.button("loading");
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#indexFrontServicesUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: a,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_front_service_modal").modal("hide"), $("#frontServiceSave").attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            $("#frontServiceSave").attr("disabled", !1), printErrorMessage("#frontServiceErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listen("click", ".editFrontServiceBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexFrontServicesUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#frontServiceId").val(e.data.id), e.data.icon_url ? $("#editFrontServicePreviewImage").css("background-image", 'url("' + e.data.icon_url + '")') : $("#editFrontServicePreviewImage").css("background-image", 'url("' + $("#indexServiceDefaultDocumentImageUrl").val() + '")'), $("#editFrontServiceName").val(e.data.name), $("#editFrontServiceDescription").val(e.data.short_description), isEmpty(e.data.icon_url) ? ($("#frontServiceIconUrl").hide(), $(".btn-view").hide()) : ($("#frontServiceIconUrl").show(), $(".btn-view").show(), $("#frontServiceIconUrl").attr("href", e.data.icon_url)), $("#edit_front_service_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editFrontServiceForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editFrontServiceSave");
                    $("#editFrontServiceSave").attr("disabled", !0), t.button("loading");
                    var a = $("#frontServiceId").val(),
                        i = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#indexFrontServicesUrl").val() + "/" + a,
                        type: "post",
                        data: i,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#editFrontServiceSave").attr("disabled", !1), $("#edit_front_service_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            $("#editFrontServiceSave").attr("disabled", !1), manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_front_service_modal", (function () {
                    resetModalForm("#addFrontServiceForm", "#add_front_service_modal #frontServiceErrorsBox"), $("#frontServiceSave").attr("disabled", !1), $("#frontServicePreviewImage").attr("src", $("#indexServiceDefaultDocumentImageUrl").val()).css("background-image", "url(".concat($("#indexServiceDefaultDocumentImageUrl").val(), ")"))
                })), listenShownBsModal("#add_front_service_modal", (function () {
                    $("#add_front_service_modal #frontServiceErrorsBox").show(), $("#add_front_service_modal #frontServiceErrorsBox").addClass("d-none")
                })), listenHiddenBsModal("#edit_front_service_modal", (function () {
                    resetModalForm("#editFrontServiceForm", "#edit_front_service_modal #editFrontServiceErrorsBox"), $("#editFrontServiceSave").attr("disabled", !1), $("#editFrontServicePreviewImage").attr("src", $("#indexServiceDefaultDocumentImageUrl").val()).css("background-image", "url(".concat($("#indexServiceDefaultDocumentImageUrl").val(), ")"))
                })), listenShownBsModal("#edit_front_service_modal", (function () {
                    $("#edit_front_service_modal #editFrontServiceErrorsBox").show(), $("#edit_front_service_modal #editFrontServiceErrorsBox").addClass("d-none")
                })), listen("click", ".deleteFrontServiceBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexFrontServicesUrl").val() + "/" + t, "", $("#frontService").val())
                }))
            },
            8821: () => {
                listenChange("#aboutUsImage", (function () {
                    var e = function (e, t) {
                        var a = $(e).val().split(".").pop().toLowerCase();
                        if (-1 == $.inArray(a, ["jpg", "png", "jpeg"])) return $(e).val(""), $(t).removeClass("d-none"), $(t).html(Lang.get("messages.allow_file_type")).show(), !1;
                        return $(t).hide(), !0
                    }($(this), "#aboutUsErrorsBox");
                    isEmpty(e) || 0 == e || ($("#aboutUsErrorsBox").html("").hide(), displayDocument(this, "#aboutUsPreviewImage", e))
                }))
            },
            3958: () => {
                function e(e) {
                    $.ajax({
                        url: $(this).attr("action"),
                        type: "POST",
                        data: e,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), setTimeout((function () {
                                location.reload()
                            }), 1500))
                        },
                        error: function (e) {
                            displayErrorMessage(e.message)
                        },
                        complete: function () {}
                    })
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("saveHospitalScheduleForm").length) return;
                    listenChange('select[name^="startTimes"]', (function (e) {
                        var t = $(this)[0].selectedIndex,
                            a = $(this).closest(".weekly-row").find('select[name^="endTimes"] option');
                        a.eq(t + 1).prop("selected", !0).trigger("change"), a.each((function (e) {
                            e <= t ? $(this).attr("disabled", !0) : $(this).attr("disabled", !1)
                        }))
                    }))
                })), listenSubmit("#saveHospitalScheduleForm", (function (t) {
                    t.preventDefault();
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#saveHospitalScheduleUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        cache: !1,
                        success: function (t) {
                            e(a)
                        },
                        error: function (t) {
                            Swal.fire({
                                title: "Delete !",
                                text: t.responseJSON.message,
                                type: "warning",
                                icon: "warning",
                                showCancelButton: !0,
                                closeOnConfirm: !0,
                                confirmButtonColor: "#266CB0",
                                showLoaderOnConfirm: !0,
                                cancelButtonText: "No, Cancel",
                                confirmButtonText: "Yes, Update!"
                            }).then((function (t) {
                                t.isConfirmed && e(a)
                            }))
                        }
                    })
                }))
            },
            9494: () => {},
            9591: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addIncomeForm").length && !$("#editIncomesForm").length) return;
                    listenShownBsModal("#add_incomes_modal, #edit_incomes_modal", (function () {
                        $("#incomeId, #editIncomeHeadId:first").focus(), $("#incomeId").select2({
                            width: "100%",
                            dropdownParent: $("#add_incomes_modal")
                        }), $("#editIncomeHeadId").select2({
                            width: "100%",
                            dropdownParent: $("#edit_incomes_modal")
                        })
                    })), $("#incomeHead").select2({
                        width: "100%"
                    }), $("#incomeDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !1,
                        locale: $(".userCurrentLanguage").val()
                    });
                    $("#editIncomeDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !1,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addIncomeForm", (function (e) {
                    e.preventDefault(), $("#incomeSave").attr("disabled", !0);
                    var t = jQuery(this).find("#incomeSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexIncomeCreateUrl").val(),
                        type: "POST",
                        data: new FormData(this),
                        dataType: "JSON",
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_incomes_modal").modal("hide"), $("#incomeSave").attr("disabled", !1), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e), $("#incomeSave").attr("disabled", !1)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".deleteIncomesBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexIncomeUrl").val() + "/" + t, null, $("#Income").val())
                })), listenClick("#incomeResetFilter", (function () {
                    $("#incomeHead").val(0).trigger("change"), hideDropdownManually($("#incomeFilterBtn"), $(".dropdown-menu"))
                })), listenClick(".editIncomesBtn", (function (e) {
                    ! function (e) {
                        $.ajax({
                            url: $("#indexIncomeUrl").val() + "/" + e + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data.document_url.split(".").pop().toLowerCase();
                                    "pdf" == t ? $("#editIncomePreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editIncomePreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" == t ? $("#editIncomePreviewImage").css("background-image", 'url("' + $("#indexIncomeDefaultDocumentImageUrl").val() + '")') : $("#editIncomePreviewImage").css("background-image", 'url("' + e.data.document_url + '")'), $("#editIncomeId").val(e.data.id), $("#editIncomeHeadId").val(e.data.income_head).trigger("change.select2"), $("#editIncomeName").val(e.data.name), document.querySelector("#editIncomeDate")._flatpickr.setDate(moment(e.data.date).format()), $("#editIncomeInvoiceNumber").val(e.data.invoice_number), $("#editIncomeAmount").val(e.data.amount), $(".price-input").trigger("input"), $("#editIncomeDescription").val(e.data.description), isEmpty(e.data.document_url) ? ($("#editIncomeDocumentUrl").hide(), $(".btn-view").hide()) : ($("#editIncomeDocumentUrl").show(), $(".btn-view").show(), $("#editIncomeDocumentUrl").attr("href", e.data.document_url)), $("#edit_incomes_modal").appendTo("body").modal("show")
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }(e.currentTarget.dataset.id)
                })), listenSubmit("#editIncomesForm", (function (e) {
                    e.preventDefault(), $("#editIncomeSave").attr("disabled", !0);
                    var t = jQuery(this).find("#editIncomeSave");
                    t.button("loading");
                    var a = $("#editIncomeId").val(),
                        i = $("#indexIncomeUrl").val() + "/" + a + "/update",
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST",
                            tableSelector: null
                        };
                    Livewire.emit("refresh"), editRecord(n, t, "#edit_incomes_modal"), $("#avatar_remove").val("")
                })), listenHiddenBsModal("#add_incomes_modal", (function () {
                    resetModalForm("#addIncomeForm", "#incomeErrorsBox"), $("#incomeSave").attr("disabled", !1), $("#incomeId").val("").trigger("change.select2"), $("#incomePreviewImage").css("background-image", 'url("' + $("#indexIncomeDefaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#edit_incomes_modal", (function () {
                    resetModalForm("#editIncomesForm", "#editIncomeErrorsBox"), $("#editIncomeSave").attr("disabled", !1)
                })), listenChange("#editIncomeAttachment", (function () {
                    var e = isValidIncomeDocument($(this), "#editIncomeErrorsBox");
                    isEmpty(e) || 0 == e ? ($(this).val(""), $("#editIncomeErrorsBox").removeClass("d-none hide"), $("#editIncomeErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=customValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editIncomeErrorsBox").html("").hide(), displayDocument(this, "#editIncomePreviewImage", e))
                })), window.isValidIncomeDocument = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html($("#indexIncomeDocumentError").val()).show(), !1) : a
                }, listenClick(".removeIncomesImage", (function () {
                    defaultImagePreview("#incomePreviewImage")
                })), listenClick(".removeIncomesImageEdit", (function () {
                    defaultImagePreview("#editIncomePreviewImage")
                })), listenChange("#incomeHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            3764: () => {
                document.addEventListener("turbo:load", (function () {
                    $(".price-input").trigger("input"), $(".insuranceDiscount").val() < 0 && $(".discount").val(0);
                    $(".addInsuranceItem").val() < 0 && $(".discount").val(0);
                    $("#insuranceDiscountId").blur((function () {
                        0 == $("#insuranceDiscountId").val().length && $("#insuranceDiscountId").val(0)
                    })), $(".insuranceForm").find("input:text:visible:first").focus(), window.isInsuranceNumberKey = function (e, t) {
                        var a = e.which ? e.which : event.keyCode;
                        return !((46 !== a || -1 !== $(t).val().indexOf(".")) && (a < 48 || a > 57))
                    }, listenKeyup(".disease-charge", (function () {
                        calculateAndSetInsuranceAmount()
                    })), listenChange(".service-tax, .discount, .hospital-rate, .disease-charge", (function () {
                        calculateAndSetInsuranceAmount()
                    })), window.calculateAndSetInsuranceAmount = function () {
                        var e = 0,
                            t = parseInt("" !== $(".service-tax").val() ? removeCommas($(".service-tax").val()) : 0),
                            a = parseInt("" !== $(".hospital-rate").val() ? removeCommas($(".hospital-rate").val()) : 0),
                            i = parseFloat($(".discount").val());
                        e = t + a, $(".disease-item-container>tr").each((function () {
                            var t = parseInt("" != $(this).find(".disease-charge").val() ? removeCommas($(this).find(".disease-charge").val()) : 0);
                            e += t
                        })), e -= e * i / 100, $("#insuranceTotal").text($(".currentCurrency").val() + addCommas(e.toFixed(2))), $("#insuranceTotal_amount").val(e)
                    }
                })), listenSubmit("#insuranceForm", (function (e) {
                    e.preventDefault(), $("#insuranceSaveBtn").attr("disabled", !0), jQuery(this).find("#insuranceSaveBtn").button("loading");
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".insuranceSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.href = $(".insuranceUrl").val(), $("#insuranceSaveBtn").attr("disabled", !1)
                        },
                        error: function (e) {
                            printErrorMessage("#insuranceValidationErrorsBox", e), $("#insuranceSaveBtn").attr("disabled", !1)
                        }
                    })
                }));
                var e = $(".insuranceUniqueId").val();

                function t() {
                    var e = 1;
                    $(".disease-item-container>tr").each((function () {
                        $(this).find(".item-number").text(e), e++
                    })), e - 1 == 0 && ($("#insuranceTotal").text("0"), $("#insuranceBillTbl tbody").append('<tr><td class="text-center item-number">1</td><td><input class="form-control disease-name" required name="disease_name[]" type="text"></td><td><input class="form-control disease-charge price-input" required name="disease_charge[]" type="text"></td><td class="text-center"><a href="javascript:void(0)" title="{{__(\'messages.common.delete\')}}"  class="delete-disease btn px-1 text-danger fs-3 pe-0">\n                    <i class="fa-solid fa-trash"></i>\n                            </a></td></tr>'))
                }
                listenClick("#addInsuranceItem", (function () {
                    var a = prepareTemplateRender("#insuranceDiseaseTemplate", {
                        uniqueId: e
                    });
                    $(".disease-item-container").append(a), e++, t()
                })), listenClick(".delete-disease", (function () {
                    $(this).parents("tr").remove(), t(), calculateAndSetInsuranceAmount()
                }))
            },
            3074: () => {
                listenClick(".deleteInsuranceBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexInsuranceUrl").val() + "/" + t, "", $("#Insurance").val())
                })), listenChange(".insuranceStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updateInsuranceStatus(t)
                })), listenClick("#insuranceResetFilter", (function () {
                    $("#filter_status").val(2).trigger("change")
                })), window.updateInsuranceStatus = function (e) {
                    $.ajax({
                        url: $("#indexInsuranceUrl").val() + "/" + e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                }, listenChange("#insurance_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#insuranceResetFilter", (function () {
                    $("#insurance_filter_status").val(0).trigger("change"), hideDropdownManually($("#insuranceFilterBtn"), $(".dropdown-menu"))
                }))
            },
            8542: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createInvestigationForm").length && !$("#editInvestigationForm").length) return;
                    $("#investigationDate,#editInvestigationDate").flatpickr({
                        format: "YYYY-MM-DD HH:mm:ss",
                        useCurrent: !0,
                        sideBySide: !0,
                        enableTime: !0,
                        locale: $(".userCurrentLanguage").val()
                    }), $("#investigationPatientId,#investigationDoctorId,#investigationStatus").select2({
                        width: "100%"
                    }), $("#createInvestigationForm, #editInvestigationForm").find("input:text:visible:first").focus()
                })), listenClick(".removeInvestigationImage", (function () {
                    defaultImagePreview("#investigationPreviewImage")
                }))
            },
            5228: () => {
                listenClick("#investigationResetFilter", (function () {
                    $("#investigationHead").val(0).trigger("change"), hideDropdownManually($("#investigationFilterBtn"), $(".dropdown-menu"))
                })), listenClick(".deleteInvestigationBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexInvestigationReportUrl").val() + "/" + t, "", $("#investigationReport").val())
                })), listenChange("#investigationHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            7240: () => {
                document.addEventListener("turbo:load", (function () {
                    listen("click", "#resetEmployeeInvoiceFilter", (function () {
                        $("#invoice_status_filter").val(2).trigger("change"), hideDropdownManually($("#invoiceFilterBtn"), $(".dropdown-menu"))
                    }))
                })), listen("click", ".deleteInvoicesBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexInvoiceUrl").val() + "/" + t, "", $("#Invoices").val())
                })), listenChange("#invoice_status_filter", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            4457: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".invoiceSaveUrl")) return;
                    $('input:text:not([readonly="readonly"])').first().blur(), $("#invoicePatientId").focus(), t(".accountId"), $("#invoice_date").flatpickr({
                        defaultDate: new Date,
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    }), $("#editInvoiceDate").flatpickr({
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    }), window.isNumberKey = function (e, t) {
                        var a = e.which ? e.which : event.keyCode;
                        return !((46 !== a || -1 !== $(t).val().indexOf(".")) && (a < 48 || a > 57))
                    }, listenClick(".deleteInvoiceItem", (function () {
                        $(this).parents("tr").remove(), e(), i()
                    })), listenKeyup(".qty", (function () {
                        var e = parseInt($(this).val()),
                            t = $(this).parent().siblings().find(".price").val();
                        t = parseInt(removeCommas(t));
                        var n = a(e, t);
                        $(this).parent().siblings(".amount").text(addCommas(n.toString())), i()
                    })), listenKeyup(".price", (function () {
                        var e = $(this).val();
                        e = parseInt(removeCommas(e));
                        var t = parseInt($(this).parent().siblings().find(".qty").val()),
                            n = a(t, e);
                        $(this).parent().siblings(".amount").text(addCommas(n.toString())), i()
                    }));
                    var a = function (e, t) {
                            return e > 0 && t > 0 ? e * t : 0
                        },
                        i = function () {
                            var e = 0;
                            $(".invoice-item-container>tr").each((function () {
                                var t = $(this).find(".item-total").text();
                                t = removeCommas(t), t = isEmpty($.trim(t)) ? 0 : parseInt(t), e += t
                            })), e = parseFloat(e), $("#total").text(addCommas(e.toFixed(2))), $("#total_amount").val(e), n()
                        },
                        n = function () {
                            var e = $("#discount").val(),
                                t = removeCommas($("#total").text());
                            (isEmpty(e) || isEmpty(t)) && (e = 0);
                            var a = t * e / 100,
                                i = t - a;
                            $("#finalAmount").text(addCommas(i.toFixed(2))), $("#total_amount").val(i.toFixed(2)), $("#discountAmount").text(addCommas(a.toFixed(2)))
                        };
                    listenKeyup("#discount", (function (e) {
                        n()
                    }))
                })), listenSubmit(".invoiceForm", (function (e) {
                    e.preventDefault();
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".invoiceSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.href = $(".invoiceUrl").val() + "/" + e.data.id
                        },
                        error: function (e) {
                            printErrorMessage("#validationErrorsBox", e)
                        }
                    })
                })), listenClick("#addInvoiceItem", (function () {
                    var a = $(".uniqueId").val(),
                        i = {
                            accounts: JSON.parse($(".invoiceAccounts").val()),
                            uniqueId: a
                        },
                        n = prepareTemplateRender("#invoiceItemTemplate", i);
                    $(".invoice-item-container").append(n), t(".accountId"), a++, e()
                }));
                var e = function () {
                    var e = 1;
                    if ($(".invoice-item-container>tr").each((function () {
                            $(this).find(".item-number").text(e), e++
                        })), e - 1 == 0) {
                        var a = $(".uniqueId").val(),
                            i = {
                                accounts: JSON.parse($(".invoiceAccounts").val()),
                                uniqueId: a
                            },
                            n = prepareTemplateRender("#invoiceItemTemplate", i);
                        $(".invoice-item-container").append(n), t(".accountId"), a++
                    }
                };

                function t(e) {
                    $(e).select2({
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.payment.account"),
                        width: "100%"
                    })
                }
            },
            7492: () => {
                function e(e) {
                    var t = e.replace(/\D/g, "");
                    return parseInt(t)
                }

                function t() {
                    totalCharges = e($("#totalCharges").text()), totalPayments = e($("#totalPayments").text()), grossTotal = e($("#grossTotal").text()), discountPercent = e($("#discountPercent").val()), taxPercentage = e($("#taxPercentage").val()), otherCharges = e($("#otherCharges").val());
                    totalCharges, totalPayments, otherCharges;
                    totalDiscount = a(discountPercent, totalCharges), totalTax = a(taxPercentage, totalCharges), netPayabelAmount = isNaN(totalCharges + otherCharges + totalTax - (totalPayments + totalDiscount)) ? 0 : totalCharges + otherCharges + totalTax - (totalPayments + totalDiscount), netPayabelAmount > 0 ? $("#billStatus").html("Unpaid") : (netPayabelAmount = 0, $("#billStatus").html("Paid")), $("#netPayabelAmount").text(addCommas(netPayabelAmount))
                }

                function a(e, t) {
                    return e / 100 * t
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#ipdBillForm").length) return !1;
                    1 == $("#showIpdBillStatus").val() && $(" #discountPercent, #taxPercentage,#otherCharges ").prop("disabled", !0);
                    t(), $("#grossTotal").text(0), $(" #discountPercent, #taxPercentage,#otherCharges ").prop("disabled", !0)
                })), listenKeyup("#discountPercent, #taxPercentage, #otherCharges", (function () {
                    "discountPercent" != this.id && "taxPercentage" != this.id || parseInt(removeCommas($(this).val())) > 100 && $(this).val(100), t()
                })), listenSubmit("#ipdBillForm", (function (e) {
                    e.preventDefault(), $(" #discountPercent, #taxPercentage,#otherCharges").prop("disabled", !1), screenLock(), $("#saveIpdBillbtn").attr("disabled", !0);
                    var a = jQuery(this).find("#saveIpdBillbtn");
                    a.button("loading"), t();
                    var i = new FormData($(this)[0]);
                    i.append("total_charges", totalCharges), i.append("total_payments", totalPayments), i.append("gross_total", grossTotal), i.append("net_payable_amount", netPayabelAmount), $.ajax({
                        url: $("#showIpdBillSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: i,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.reload()
                        },
                        error: function (e) {
                            UnprocessableInputError(e), $("#saveIpdBillbtn").attr("disabled", !1)
                        },
                        complete: function () {
                            screenUnLock(), a.button("reset")
                        }
                    })
                }))
            },
            7510: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#editIpdChargesForm").length && !$("#addIpdChargeNewForm").length) return;
                    $("#btnIpdChargeSave,#btnEditCharges").prop("disabled", !0), $("#ipdChargeDate, #ipdEditChargeDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !0,
                        minDate: $("#showIpdPatientCaseDate").val(),
                        locale: $(".userCurrentLanguage").val()
                    }), $("#ipdChargeTypeId, #ipdChargeCategoryId, #ipdChargeId").select2({
                        dropdownParent: $("#addIpdChargesModal")
                    }), $("#editIpdChargeTypeId, #editIpdChargeCategoryId, #editIpdChargeId").select2({
                        dropdownParent: $("#editIpdChargesModal")
                    })
                }));
                var e = null,
                    t = null,
                    a = null;

                function i(e) {
                    $(e ? "#btnEditCharges" : "#btnIpdChargeSave").prop("disabled", !0)
                }
                listen("click", ".edit-charges-btn", (function (i) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var n, r = $(i.currentTarget).attr("data-id");
                        n = r, $.ajax({
                            url: $("#showIpdChargesUrl").val() + "/" + n + "/edit",
                            type: "GET",
                            success: function (i) {
                                i.success && (e = i.data.charge_category_id, t = i.data.charge_id, i.data.standard_charge, a = i.data.applied_charge, $("#ipdChargesId").val(i.data.id), document.querySelector("#ipdEditChargeDate")._flatpickr.setDate(moment(i.data.date).format()), $("#editIpdChargeTypeId").val(i.data.charge_type_id).trigger("change", [{
                                    onceOnEditRender: !0
                                }]), $(".price-input").trigger("input"), $("#appliedChargeId").text(a), $("#editIpdChargesModal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".ipd-charge-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdChargesUrl").val() + "/" + t, "", $("#ipdCharge").val())
                })), listenChange("#ipdChargeTypeId, #editIpdChargeTypeId", (function (t, a) {
                    var n = $(this).data("is-charge-edit");
                    "" !== $(this).val() && $.ajax({
                        url: $("#showIpdChargeCategoryUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        beforeSend: function () {
                            i(n)
                        },
                        success: function (t) {
                            0 !== t.data.length ? ($(n ? "#editIpdChargeCategoryId" : "#ipdChargeCategoryId").empty(), $(n ? "#editIpdChargeCategoryId" : "#ipdChargeCategoryId").removeAttr("disabled"), $.each(t.data, (function (e, t) {
                                $(n ? "#editIpdChargeCategoryId" : "#ipdChargeCategoryId").append($("<option></option>").attr("value", e).text(t))
                            })), n ? void 0 === a ? $("#editIpdChargeCategoryId").trigger("change") : $("#editIpdChargeCategoryId").val(e).trigger("change", a) : $("#ipdChargeCategoryId").trigger("change"), $(n ? "#btnEditCharges" : "#btnIpdChargeSave").prop("disabled", !1)) : ($(n ? "#editIpdChargeCategoryId, #editIpdChargeId" : "#ipdChargeCategoryId, #ipdChargeId").empty(), $(n ? "#editIpdStandardCharge, #editIpdAppliedCharge" : "#ipdStandardCharge, #ipdAppliedCharge").val(""), $(n ? "#editIpdChargeCategoryId, #editIpdChargeId, #btnEditCharges" : "#ipdChargeCategoryId, #ipdChargeId, #btnIpdChargeSave").prop("disabled", !0))
                        }
                    }), $(n ? "#editIpdChargeCategoryId, #editIpdChargeId" : "#ipdChargeCategoryId, #ipdChargeId").empty(), $(n ? "#editIpdStandardCharge, #editIpdAppliedCharge" : "#ipdStandardCharge, #ipdAppliedCharge").val(""), $(n ? "#editIpdChargeCategoryId, #editIpdChargeId" : "#ipdChargeCategoryId, #ipdChargeId").prop("disabled", !0), $("#ipdChargeCategoryId ,#ipdChargeId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.case.case"),
                        dropdownParent: $("#addIpdChargesModal")
                    }), $("#editIpdChargeCategoryId, #editIpdChargeId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.case.case"),
                        dropdownParent: $("#editIpdChargesModal")
                    })
                })), listenHiddenBsModal("#addIpdChargesModal,#editIpdChargesModal", (function () {
                    $("#ipdChargeCategoryId ,#ipdChargeId,#editIpdChargeCategoryId, #editIpdChargeId").attr("disabled", !0)
                })), listenChange("#ipdChargeCategoryId, #editIpdChargeCategoryId", (function (e, a) {
                    var n = $(this).data("is-charge-edit");
                    "" !== $(this).val() && $.ajax({
                        url: $("#showIpdChargeUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        beforeSend: function () {
                            i(n)
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($(n ? "#editIpdChargeId" : "#ipdChargeId").empty(), $(n ? "#editIpdChargeId" : "#ipdChargeId").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $(n ? "#editIpdChargeId" : "#ipdChargeId").append($("<option></option>").attr("value", e).text(t))
                            })), n ? void 0 === a ? $("#editIpdChargeId").trigger("change") : $("#editIpdChargeId").val(t).trigger("change", a) : $("#ipdChargeId").trigger("change")) : $(n ? "#editIpdChargeId" : "#ipdChargeId").prop("disabled", !0)
                        }
                    }), $(n ? "#editIpdChargeId" : "#ipdChargeId").empty(), $(n ? "#editIpdChargeId" : "#ipdChargeId").prop("disabled", !0)
                })), listenChange("#ipdChargeId, #editIpdChargeId", (function (e, t) {
                    var a = $(this).data("is-charge-edit");
                    $.ajax({
                        url: $("#showIpdChargeStandardRateUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val(),
                            isEdit: a,
                            onceOnEditRender: t,
                            ipdChargeId: $("#ipdChargesId").val()
                        },
                        beforeSend: function () {
                            i(a)
                        },
                        success: function (e) {
                            a ? null != e.data ? ($("#editIpdStandardCharge").val(e.data.standard_charge), $("#appliedChargeId").text(e.data.applied_charge), $("#editIpdAppliedCharge").val(e.data.applied_charge), $(".price-input").trigger("input"), $("#btnEditCharges").prop("disabled", !1)) : console.log("from else") : ($("#ipdStandardCharge, #ipdAppliedCharge").val(e.data), $("#btnIpdChargeSave").prop("disabled", !1))
                        }
                    })
                })), listen("keypress", "#editIpdAppliedCharge", (function () {
                    var e = $("#editIpdAppliedCharge").val();
                    $("#appliedChargeId").text(e)
                })), listenSubmit("#addIpdChargeNewForm", (function (e) {
                    e.preventDefault(), $("#btnIpdChargeSave").attr("disabled", !0);
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#showIpdChargesCreateUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#addIpdChargesModal").modal("hide"), livewire.emit("refresh"), $("#btnIpdChargeSave").attr("disabled", !1))
                        },
                        error: function (e) {
                            printErrorMessage("#ipdChargevalidationErrorsBox", e), $("#btnIpdChargeSave").attr("disabled", !1)
                        }
                    })
                })), listenSubmit("#editIpdChargesForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnEditCharges");
                    t.button("loading");
                    var a = $("#ipdChargesId").val(),
                        i = $("#showIpdChargesUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    editRecord(n, t, "#editIpdChargesModal", "#btnEditCharges")
                })), listenHiddenBsModal("#addIpdChargesModal", (function () {
                    $("#addIpdChargeNewForm")[0].reset(), $("#ipdChargeTypeId, #ipdChargeCategoryId, #ipdChargeId, #ipdStandardCharge, #ipdAppliedCharge").val(""), $("#ipdChargeCategoryId, #ipdChargeId").empty(), $("#ipdChargeCategoryId").append($("<option>" + Lang.get("messages.pathology_category.select_charge_category") + "</option>")), $("#ipdChargeId").append($("<option>Select Code</option>")), $("#ipdChargeTypeId").trigger("change.select2"), $("#btnIpdChargeSave").prop("disabled", !0), $("#ipdChargeDate").flatpickr().clear()
                })), listenHiddenBsModal("#editIpdChargesModal", (function () {
                    $("#btnEditCharges").prop("disabled", !0)
                }))
            },
            3985: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#showIpdConsultantRegisterUrl").length) return;
                    $(".doctorId").select2({
                        width: "100%",
                        dropdownParent: $("#addConsultantInstructionModal")
                    }), $("#editConsultantDoctorId").select2({
                        width: "100%",
                        dropdownParent: $("#editIpdConsultantInstructionModal")
                    }), t()
                }));
                var e = function (e) {
                    $(e).attr("readonly", !1)
                };
                e(".appliedDate"), e(".instructionDate");
                var t = function () {
                        $(".appliedDate").flatpickr({
                            enableTime: !0,
                            dateFormat: "Y-m-d H:i",
                            useCurrent: !1,
                            sideBySide: !0,
                            allowInput: !1,
                            widgetPositioning: {
                                horizontal: "left",
                                vertical: "bottom"
                            },
                            minDate: $("#showIpdPatientCaseDate").val(),
                            locale: $(".userCurrentLanguage").val()
                        }), $(".instructionDate").flatpickr({
                            enableTime: !1,
                            format: "YYYY-MM-DD",
                            useCurrent: !0,
                            sideBySide: !0,
                            widgetPositioning: {
                                horizontal: "left",
                                vertical: "bottom"
                            },
                            minDate: $("#showIpdPatientCaseDate").val()
                        })
                    },
                    a = function (e) {
                        $(e).select2({
                            placeholder: Lang.get("messages.web_home.select_doctor"),
                            width: "100%",
                            dropdownParent: $("#addConsultantInstructionModal")
                        })
                    };
                listen("click", "#addIpdConsultantItem", (function () {
                    var e = $("#showIpdUniqueId").val(),
                        n = {
                            doctors: JSON.parse($("#showIpdDoctors").val()),
                            uniqueId: e
                        },
                        r = prepareTemplateRender("#ipdConsultantInstructionItemTemplate", n);
                    $(".ipd-consultant-item-container").append(r), a(".doctorId"), t(), e++, i()
                }));
                var i = function () {
                    var e = 1,
                        i = $("#showIpdUniqueId").val();
                    if ($(".ipd-consultant-item-container>tr").each((function () {
                            $(this).find(".item-number").text(e), e++
                        })), e - 1 == 0) {
                        var n = {
                                doctors: JSON.parse($("#showIpdDoctors").val()),
                                uniqueId: i
                            },
                            r = prepareTemplateRender("#ipdConsultantInstructionItemTemplate", n);
                        $(".ipd-consultant-item-container").append(r), a(".doctorId"), t(), i++
                    }
                };
                listen("click", ".deleteIpdConsultantInstruction", (function () {
                    $(this).parents("tr").remove(), i()
                })), listen("click", ".delete-consultant-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdConsultantRegisterUrl").val() + "/" + t, "", $("#ipdConsultantRegister").val())
                })), listen("click", ".delete-consultant-doctor-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdConsultantRegisterUrl").val() + "/" + t, "", $("#ipdConsultantDoctor").val())
                })), listenSubmit("#addIpdConsultantNewForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnIpdConsultantSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#showIpdConsultantRegisterCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#addConsultantInstructionModal"), t.attr("disabled", !1), setTimeout((function () {
                        $("#consultant-div").load(location.href + " #consultant-div")
                    }), 500)
                })), listen("click", ".edit-consultant-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#showIpdConsultantRegisterUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#ipdEditConsultantId").val(e.data.id), document.querySelector("#editConsultantAppliedDate")._flatpickr.setDate(moment(e.data.applied_date).format()), $("#editConsultantDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editConsultantDoctorId").select2({
                                    width: "100%",
                                    dropdownParent: $("#editIpdConsultantInstructionModal")
                                }), document.querySelector("#editConsultantInstructionDate")._flatpickr.setDate(moment(e.data.instruction_date).format()), $("#editConsultantInstruction").val(e.data.instruction), $("#editIpdConsultantInstructionModal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editIpdConsultantNewForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editConsultantSave");
                    t.button("loading");
                    var a = $("#ipdEditConsultantId").val(),
                        i = $("#showIpdConsultantRegisterUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    editRecord(n, t, "#editIpdConsultantInstructionModal"), setTimeout((function () {
                        getLatestData($("#showIpdPatientDepartmentId").val())
                    }), 500)
                })), listenHiddenBsModal("#addConsultantInstructionModal", (function () {
                    resetModalForm("#addIpdConsultantNewForm", "#ipdConsultantErrorsBox"), $("#ipdConsultantInstructionTbl").find("tr:gt(1)").remove(), $(".doctorId").val(""), $(".doctorId").trigger("change")
                }))
            },
            1611: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html(Lang.get("messages.incomes.document_error")).show(), !1) : a
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#ipdDiagnosisReportDate").length && !$("#editIpdDiagnosisReportDate").length) return;
                    $("#ipdDiagnosisReportDate, #editIpdDiagnosisReportDate").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        minDate: $("#showIpdPatientCaseDate").val(),
                        locale: $(".userCurrentLanguage").val(),
                        widgetPositioning: {
                            horizontal: "left",
                            vertical: "bottom"
                        }
                    })
                })), listen("click", ".ipdDignosis-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdDiagnosisUrl").val() + "/" + t, "", $("#ipdDiagnosisDelete").val())
                })), listenSubmit("#addIpdDiagnosisForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#showIpdDiagnosisCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_ipd_diagnosis_modal")
                })), listen("click", ".ipdDignosis-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#showIpdDiagnosisUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data.ipd_diagnosis_document_url.split(".").pop().toLowerCase();
                                    "pdf" == t ? $("#editIpdDiagnosisPreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editIpdDiagnosisPreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" != e.data.ipd_diagnosis_document_url && $("#editIpdDiagnosisPreviewImage").css("background-image", 'url("' + e.data.ipd_diagnosis_document_url + '")'), $("#ipdDiagnosisId").val(e.data.id), $("#editIpdDiagnosisReportType").val(e.data.report_type), document.querySelector("#editIpdDiagnosisReportDate")._flatpickr.setDate(moment(e.data.report_date).format()), $("#editIpdDiagnosisDescription").val(e.data.description), "" != e.data.ipd_diagnosis_document_url ? ($("#editIpdDiagnosisDocumentViewUrl").show(), $(".btn-view").show(), $("#editIpdDiagnosisDocumentViewUrl").attr("href", e.data.ipd_diagnosis_document_url)) : ($("#editIpdDiagnosisDocumentViewUrl").hide(), $(".btn-view").hide()), $("#edit_ipd_diagnosis_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editIpdDiagnosisForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editIpdDiagnosisSave");
                    t.button("loading");
                    var a = $("#ipdDiagnosisId").val(),
                        i = $("#showIpdDiagnosisUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    editRecord(n, t, "#edit_ipd_diagnosis_modal")
                })), listenHiddenBsModal("#add_ipd_diagnosis_modal", (function () {
                    resetModalForm("#addIpdDiagnosisForm", "#ipdDiagnosisErrorsBox"), $("#ipdDiagnosisPreviewImage").attr("src", $("#showDefaultDocumentImageUrl").val()), $("#ipdDiagnosisPreviewImage").css("background-image", 'url("' + $("#showDefaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#edit_ipd_diagnosis_modal", (function () {
                    resetModalForm("#editIpdDiagnosisForm", "#editIpdDiagnosisErrorsBox"), $("#editIpdDiagnosisPreviewImage").attr("src", $("#showDefaultDocumentImageUrl").val()), $("#editIpdDiagnosisPreviewImage").css("background-image", 'url("' + $("#showDefaultDocumentImageUrl").val() + '")')
                })), listenChange("#documentImage", (function () {
                    var t = e($(this), "#ipdDiagnosisErrorsBox");
                    isEmpty(t) || 0 == t || ($("#ipdDiagnosisErrorsBox").html("").hide(), displayDocument(this, "#ipdDiagnosisPreviewImage", t))
                })), listenChange("#editDocumentImage", (function () {
                    var t = e($(this), "#editIpdDiagnosisErrorsBox");
                    isEmpty(t) || 0 == t || ($("#editIpdDiagnosisErrorsBox").html("").hide(), displayDocument(this, "#editIpdDiagnosisPreviewImage", t))
                })), listen("click", ".removeIpdDiagnosisImage", (function () {
                    defaultImagePreview(".previewImage")
                })), listen("click", ".removeIpdDiagnosisImageEdit", (function () {
                    defaultImagePreview(".previewImage")
                }))
            },
            5697: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#ipdOperationDate").length) return;
                    $("#ipdOperationDate").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val(),
                        widgetPositioning: {
                            horizontal: "left",
                            vertical: "bottom"
                        }
                    }), $("#ipdOperationsId, #ipdOperationCategoryId, #ipdOperationDoctorId").select2({
                        dropdownParent: $("#addIpdOperationModal")
                    }), $("#editIpdOperationCategoryId, #editIpdOperationsId, #editIpdOperationDoctorId").select2({
                        dropdownParent: $("#editIpdOperationModal")
                    })
                }));
                var e = null;
                listenClick(".updateIpdOperation", (function (t) {
                    var a = $(t.currentTarget).attr("data-id");
                    $.ajax({
                        url: $(".IpdOperationUrl").val() + "/" + a + "/edit",
                        method: "GET",
                        success: function (t) {
                            e = t.data.operation_id, $("#ipdOperationId").val(t.data.id), $("#ipdOperationRefNo").val(t.data.ref_no), $("#editIpdOperationDate").val(t.data.operation_date), $("#editIpdOperationCategoryId").val(t.data.operation_category_id).trigger("change", [{
                                onceOnEditRender: !0
                            }]), $("#editIpdOperationDoctorId").val(t.data.doctor_id).trigger("change.select2"), $("#editIpdAssistantConsultant1").val(t.data.assistant_consultant_1), $("#editIpdAssistantConsultant2").val(t.data.assistant_consultant_2), $("#editAnesthetist").val(t.data.anesthetist), $("#editAnesthesiaType").val(t.data.anesthesia_type), $("#editOTTechnician").val(t.data.ot_technician), $("#editOTAssistant").val(t.data.ot_assistant), $("#editIpdOperationRemark").val(t.data.remark), $("#editIpdOperationResult").val(t.data.result), $("#editIpdOperationModal").modal("show")
                        }
                    })
                })), listenChange("#ipdOperationCategoryId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $("#operationCategoryChange").val(),
                        type: "GET",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            $("#ipdOperationsId").children().remove(), $.each(e, (function (e, t) {
                                $("#ipdOperationsId").append($("<option></option>").attr("value", t).text(e))
                            }))
                        }
                    })
                })), listenChange("#editIpdOperationCategoryId", (function (t, a) {
                    "" !== $(this).val() && $.ajax({
                        url: $("#operationCategoryChange").val(),
                        type: "GET",
                        data: {
                            id: $(this).val()
                        },
                        success: function (t) {
                            $("#editIpdOperationsId").children().remove(), void 0 !== a ? ($.each(t, (function (e, t) {
                                $("#editIpdOperationsId").append($("<option></option>").attr("value", t).text(e))
                            })), $("#editIpdOperationsId").val(e)) : $.each(t, (function (e, t) {
                                $("#editIpdOperationsId").append($("<option></option>").attr("value", t).text(e))
                            }))
                        }
                    })
                })), listenSubmit("#addIpdOperationNewForm", (function (e) {
                    e.preventDefault(), $.ajax({
                        url: $("#addNewOperation").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            displaySuccessMessage(e.message), $("#addIpdOperationModal").modal("hide"), $("#addIpdOperationNewForm")[0].reset(), window.livewire.emit("refresh")
                        }
                    })
                })), listen("click", ".deleteIpdOperation", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".IpdOperationUrl").val() + "/" + t, "", Lang.get("messages.ipd_operation.ipd_operation"))
                })), listenSubmit("#editIpdOperationNewForm", (function (e) {
                    e.preventDefault();
                    var t = $("#ipdOperationId").val();
                    $.ajax({
                        url: $(".IpdOperationUrl").val() + "/" + t,
                        method: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            displaySuccessMessage(e.message), $("#editIpdOperationModal").modal("hide"), $("#editIpdOperationNewForm")[0].reset(), window.livewire.emit("refresh")
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message), $("#editIpdOperationModal").modal("hide"), $("#editIpdOperationNewForm")[0].reset(), window.livewire.emit("refresh")
                        }
                    })
                })), listenHiddenBsModal("#addIpdOperationModal", (function () {
                    resetModalForm("#addIpdOperationNewForm", "#ipdOperationValidationErrorsBox"), $("#ipdOperationCategoryId, #ipdOperationsId, #ipdOperationDoctorId").val("").trigger("change.select2")
                }))
            },
            569: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#ipdAdmissionDate").length && !$("#editIpdAdmissionDate").length) return;
                    $("#ipdPatientId, #ipdDoctorId, #ipdBedTypeId,#editIpdPatientId, #editIpdDoctorId, #editIpdBedTypeId").select2({
                        width: "100%"
                    }), $("#ipdCaseId, #editIpdCaseId ").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.ipd_patient.case_id")
                    }), $("#ipdBedId, #editIpdBedId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.bed_assign.bed")
                    });
                    var e = $("#ipdAdmissionDate, #editIpdAdmissionDate").flatpickr({
                        enableTime: !0,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    });
                    $(".isEdit").val() ? ($(".ipdPatientId, .ipdBedTypeId").trigger("change"), e.set("minDate", $(".ipdAdmissionDate").val())) : (e.setDate(new Date), e.set("minDate", new Date))
                })), listenClick(".ipd-diagnosis-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href="#cases-tab"]').tab("show"), $(this).removeClass("active"), $("#cases-tab").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $("#cases-tab").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenClick(".ipd-charges-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href=".ipdCharges"]').tab("show"), $(this).removeClass("active"), $(".ipdCharges").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $(".ipdCharges").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenClick(".ipd-consultant-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href=".ipdConsultantInstruction"]').tab("show"), $(this).removeClass("active"), $(".ipdConsultantInstruction").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $(".ipdConsultantInstruction").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenClick(".ipd-prescription-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href=".ipdPrescriptions"]').tab("show"), $(this).removeClass("active"), $(".ipdPrescriptions").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $(".ipdPrescriptions").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenClick(".ipd-payment-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href=".ipdPayment"]').tab("show"), $(this).removeClass("active"), $(".ipdPayment").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $(".ipdPayment").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenClick(".ipd-operation-btn", (function (e) {
                    e.preventDefault(), $('#myTab a[href=".ipdOperation"]').tab("show"), $(this).removeClass("active"), $(".ipdOperation").attr("aria-selected", !0), $("#ipdOverview").attr("aria-selected", !1), $(".ipdOperation").addClass("active"), $("#ipdOverview").removeClass("active")
                })), listenKeyup(".ipdDepartmentFloatNumber", (function () {
                    if (-1 != $(this).val().indexOf(".") && $(this).val().split(".")[1].length > 2) {
                        if (isNaN(parseFloat(this.value))) return;
                        this.value = parseFloat(this.value).toFixed(2)
                    }
                    return this
                })), listenSubmit("#createIpdPatientForm, #editIpdPatientDepartmentForm", (function () {
                    $("#ipdSave, #btnIpdPatientEdit").attr("disabled", !0)
                })), listenChange(".ipdPatientId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $(".patientCasesUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").empty(), $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").append($("<option></option>").attr("value", e).text(t))
                            })), $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").val($("#editIpdPatientCaseId").val()).trigger("change.select2")) : $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").prop("disabled", !0)
                        }
                    }), $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").empty(), $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").prop("disabled", !0), $("#ipdDepartmentCaseId, #editIpdDepartmentCaseId ").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.ipd_patient.case_id")
                    })
                })), listenChange(".ipdBedTypeId", (function () {
                    var e = null,
                        t = null;
                    if (void 0 !== $("#editIpdPatientBedId").val() && void 0 !== $("#editIpdPatientBedTypeId").val() && (e = $("#editIpdPatientBedId").val(), t = $("#editIpdPatientBedTypeId").val()), "" !== $(this).val()) {
                        var a = $(this).val();
                        $.ajax({
                            url: $(".patientBedsUrl").val(),
                            type: "get",
                            dataType: "json",
                            data: {
                                id: $(this).val(),
                                isEdit: $(".isEdit").val(),
                                bedId: e,
                                ipdPatientBedTypeId: t
                            },
                            success: function (e) {
                                null !== e.data ? 0 !== e.data.length && ($("#ipdBedId,#editIpdBedId").empty(), $("#ipdBedId,#editIpdBedId").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                    $("#ipdBedId,#editIpdBedId").append($("<option></option>").attr("value", e).text(t))
                                })), void 0 !== $("#editIpdPatientBedId").val() && void 0 !== $("#editIpdPatientBedTypeId").val() && a === $("#editIpdPatientBedTypeId").val() && $("#ipdBedId,#editIpdBedId").val($("#editIpdPatientBedId").val()).trigger("change.select2"), $("#ipdBedId,#editIpdBedId").prop("required", !0)) : $("#ipdBedId,#editIpdBedId").prop("disabled", !0)
                            }
                        })
                    }
                    $("#ipdBedId,#editIpdBedId").empty(), $("#ipdBedId,#editIpdBedId").prop("disabled", !0), $("#ipdBedId, #editIpdBedId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.bed_assign.bed")
                    })
                }))
            },
            9807: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#ipd_patients_filter_status").length) return;
                    $("#ipd_patients_filter_status").select2()
                })), listenChange("#ipd_patients_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#ipdResetFilter", (function () {
                    $("#ipd_patients_filter_status").val("0").trigger("change"), hideDropdownManually($("#ipdPatientDepartmentFilterBtn"), $(".dropdown-menu"))
                })), listen("click", ".deleteIpdDepartmentBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexIpdPatientUrl").val() + "/" + t, "", $("#ipdPatientDepartment").val())
                }))
            },
            2229: () => {},
            1622: () => {},
            6758: () => {},
            9828: () => {},
            5397: () => {},
            3788: () => {
                listenClick(".viewIpdPrescription", (function () {
                    $.ajax({
                        url: $("#showIpdPrescriptionUrl").val() + "/" + $(this).data("id"),
                        type: "get",
                        success: function (e) {
                            $("#ipdPrescriptionViewData").html(e), $("#showIpdPrescriptionModal").modal("show"), ajaxCallCompleted()
                        }
                    })
                })), listenClick(".printIpdPrescription", (function () {
                    var e = document.getElementById("DivIdToPrint"),
                        t = window.open("", "Print-Window");
                    t.document.open(), t.document.write('<html><link href="' + $("#showListBootstrapUrl").val() + '" rel="stylesheet" type="text/css"/><body onload="window.print()">' + e.innerHTML + "</body></html>"), t.document.close(), setTimeout((function () {
                        t.close()
                    }), 10)
                }))
            },
            9544: () => {
                document.addEventListener("turbo:load", (function () {
                    $.ajaxSetup({
                        headers: {
                            "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content")
                        }
                    })
                })), listenClick("#ipdPaymentBtn", (function () {
                    var e = this,
                        t = {
                            amount: parseInt($("#billAmount").val()),
                            ipdNumber: $("#ipdNumber").val()
                        },
                        a = $("#stripeConfigKey").val(),
                        i = Stripe(a);
                    $(this).html('<div class="spinner-border spinner-border-sm " role="status">\n                                            <span class="sr-only">Loading...</span>\n                                        </div>').addClass("disabled"), $.post($("#showListIpdStripePaymentUrl").val(), t).done((function (e) {
                        var t = e.data.sessionId;
                        i.redirectToCheckout({
                            sessionId: t
                        }).then((function (e) {
                            $(this).html(Lang.get("messages.ipd_payments.make_payment")).removeClass("disabled"), manageAjaxErrors(e)
                        }))
                    })).catch((function (t) {
                        $(e).html(Lang.get("messages.ipd_payments.make_payment")).removeClass("disabled"), manageAjaxErrors(t)
                    }))
                }))
            },
            26: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#showListIpdPatientDepartmentId").length) return;
                    e = $("#showListIpdPatientDepartmentId").val(), $.ajax({
                        url: $("#showListIpdTimelinesUrl").val(),
                        type: "get",
                        data: {
                            id: e
                        },
                        success: function (e) {
                            $("#ipdTimelines").html(e)
                        }
                    });
                    var e
                }))
            },
            1230: () => {
                function loadIpdPaymentData() {
                    ($("#addIpdPaymentNewForm").length || $("#editIpdPaymentForm").length) && ($("#ipdPaymentDate,#editIpdPaymentDate").flatpickr({
                        dateFormat: "Y-m-d",
                        enableTime: !1,
                        minDate: $("#showIpdPatientCaseDate").val(),
                        locale: $(".userCurrentLanguage").val(),
                        widgetPositioning: {
                            horizontal: "right",
                            vertical: "bottom"
                        }
                    }), $("#ipdPaymentModeId").select2({
                        width: "100%",
                        dropdownParent: $("#addIpdPaymentModal")
                    }), $("#editIpdPaymentModeId").select2({
                        width: "100%",
                        dropdownParent: $("#editIpdPaymentModal")
                    }))
                }

                function renderIpdPaymentData(e) {
                    $.ajax({
                        url: $("#showIpdPaymentUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data.ipd_payment_document_url.split(".").pop().toLowerCase();
                                "pdf" == t ? $("#editIpdPaymentPreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editIpdPaymentPreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" != e.data.ipd_payment_document_url ? $("#editIpdPaymentPreviewImage").css("background-image", 'url("' + e.data.ipd_payment_document_url + '")') : $("#editIpdPaymentPreviewImage").css("background-image", 'url("' + $(".showDefaultDocumentImageUrl").val() + '")'), $("#ipdPaymentId").val(e.data.id), $("#editIpdPaymentAmount").val(e.data.amount), document.querySelector("#editIpdPaymentDate")._flatpickr.setDate(moment(e.data.date).format("YYYY-MM-DD h:mm A")), $("#editIpdPaymentNote").val(e.data.notes), $("#editIpdPaymentModeId").val(e.data.payment_mode).trigger("change.select2"), $("#editIpdPaymentModal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }

                function isValidIpdPaymentDocument(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html(Lang.get("messages.expense.document_error")).show(), !1) : a
                }

                function deleteItemPaymentAjax(url, tableId, header) {
                    var callFunction = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    $.ajax({
                        url,
                        type: "DELETE",
                        dataType: "json",
                        success: function success(obj) {
                            obj.success && Livewire.emit("resetPage"), Swal.fire({
                                icon: "success",
                                title: "Deleted!",
                                confirmButtonColor: "#009ef7",
                                text: header + Lang.get("messages.common.has_been_deleted"),
                                timer: 2e3
                            }), callFunction && eval(callFunction)
                        },
                        error: function (e) {
                            Swal.fire({
                                title: "",
                                text: e.responseJSON.message,
                                confirmButtonColor: "#009ef7",
                                icon: "error",
                                timer: 5e3
                            })
                        }
                    })
                }
                document.addEventListener("turbo:load", loadIpdPaymentData), listen("click", ".ipdpayment-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdPaymentUrl").val() + "/" + t, null, $("#ipdPaymentButton").val())
                })), listen("click", ".ipdpayment-edit-btn", (function (e) {
                    $(".ajaxCallIsRunning").val() || (ajaxCallInProgress(), renderIpdPaymentData($(e.currentTarget).attr("data-id")))
                })), listenSubmit("#addIpdPaymentNewForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnIpdPaymentSave");
                    t.button("loading");
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#showIpdPaymentCreateUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: a,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#addIpdPaymentModal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#ipdPaymentValidationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editIpdPaymentForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnEditIpdPaymentSave");
                    t.button("loading");
                    var a = $("#ipdPaymentId").val(),
                        i = $("#showIpdPaymentUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST"
                        };
                    editIpdPaymentRecord(n, t, "#editIpdPaymentModal")
                })), listenHiddenBsModal("#addIpdPaymentModal", (function () {
                    resetModalForm("#addIpdPaymentNewForm", "#ipdPaymentValidationErrorsBox"), $("#ipdPaymentPreviewImage").attr("src", $("#showDefaultDocumentImageUrl").val()), $("#ipdPaymentPreviewImage").css("background-image", 'url("' + $("#showDefaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#editIpdPaymentModal", (function () {
                    resetModalForm("#editIpdPaymentForm", "#editIpdPaymentValidationErrorsBox")
                })), listenChange("#ipdPaymentDocumentImage", (function () {
                    var e = isValidIpdPaymentDocument($(this), "#ipdPaymentValidationErrorsBox");
                    isEmpty(e) || 0 == e || ($("#ipdPaymentValidationErrorsBox").html("").hide(), displayDocument(this, "#ipdPaymentPreviewImage", e))
                })), listenChange("#editIpdPaymentDocumentImage", (function () {
                    var e = isValidIpdPaymentDocument($(this), "#editIpdPaymentValidationErrorsBox");
                    isEmpty(e) || 0 == e || ($("#editIpdPaymentValidationErrorsBox").html("").hide(), displayDocument(this, "#editIpdPaymentPreviewImage", e))
                })), window.editIpdPaymentRecord = function (e, t) {
                    var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "#EditModal",
                        i = "" === e.formSelector ? e.formData : new FormData($(e.formSelector)[0]);
                    $.ajax({
                        url: e.url,
                        type: e.type,
                        data: i,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $(a).modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }, listen("click", "#ipdPaymentDocumentImage", (function () {
                    defaultImagePreview("#ipdPaymentPreviewImage")
                })), listen("click", ".removeIpdPaymentImageEdit", (function () {
                    defaultImagePreview("#editIpdPaymentPreviewImage")
                }))
            },
            1307: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#editIpdPrescriptionForm").length && !$("#addIpdPrescriptionForm").length) return;
                    $(".ipdDoseDuration,.ipdDoseInterval,.prescriptionMedicineMealId").select2({
                        width: "100%"
                    })
                })), listen("click", ".deleteIpdPrescriptionBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showIpdPrescriptionUrl").val() + "/" + t, "", $("#ipdPrescription").val())
                }));
                var e = function (e) {
                    "#ipdPrescriptionItemTemplate" === e ? ($(".ipdCategoryId").select2({
                        placeholder: Lang.get("messages.medicine.select_category"),
                        width: "100%",
                        dropdownParent: $("#addIpdPrescriptionModal")
                    }), $(".ipdDoseDuration,.ipdDoseInterval,.prescriptionMedicineMealId").select2({
                        width: "100%"
                    }), $(".medicineId").select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%",
                        dropdownParent: $("#editIpdPrescriptionModal")
                    })) : ($(".ipdCategoryId").select2({
                        placeholder: Lang.get("messages.medicine.select_category"),
                        width: "100%",
                        dropdownParent: $("#editIpdPrescriptionModal")
                    }), $(".ipdDoseDuration,.ipdDoseInterval,.prescriptionMedicineMealId").select2({
                        width: "100%"
                    }), $(".medicineId").select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%",
                        dropdownParent: $("#editIpdPrescriptionModal")
                    }))
                };
                e("#ipdPrescriptionItemTemplate");
                var t = function (e) {
                    "addIpdPrescriptionModal" === e ? $(".medicineId").select2({
                        placeholder: Lang.get("messages.medicine.select_category"),
                        width: "100%",
                        dropdownParent: $("#addIpdPrescriptionModal")
                    }) : $(".medicineId").select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%",
                        dropdownParent: $("#editIpdPrescriptionModal")
                    })
                };
                listenClick("#addPrescriptionItem, #addPrescriptionItemOnEdit", (function () {
                    var t = parseInt($(this).data("edit")) ? "#editIpdPrescriptionItemTemplate" : "#ipdPrescriptionItemTemplate",
                        i = parseInt($(this).data("edit")) ? ".edit-ipd-prescription-item-container" : ".ipd-prescription-item-container",
                        n = $("#showIpdUniqueId").val(),
                        r = {
                            medicineCategories: JSON.parse($("#showMedicineCategories").val()),
                            ipdDoseDuration: JSON.parse($(".ipdPrescriptionDurations").val()),
                            ipdDoseInterval: JSON.parse($(".ipdPrescriptionIntervals").val()),
                            meals: JSON.parse($(".ipdPrescriptionMeals").val()),
                            uniqueId: n
                        },
                        s = prepareTemplateRender(t, r);
                    $(i).append(s), e(t), n++, $("#showIpdUniqueId").val(n), a(parseInt($(this).data("edit")))
                }));
                var a = function (t) {
                    var a = t ? "#editIpdPrescriptionItemTemplate" : "#ipdPrescriptionItemTemplate",
                        i = t ? ".edit-ipd-prescription-item-container" : ".ipd-prescription-item-container",
                        n = t ? ".edit-prescription-item-number" : ".prescription-item-number",
                        r = 1;
                    $(i + ">tr").each((function () {
                        $(this).find(n).text(r), r++
                    }));
                    var s = $("#showIpdUniqueId").val();
                    if (r - 1 == 0) {
                        var o = {
                                medicineCategories: JSON.parse($("#showMedicineCategories").val()),
                                ipdDoseDuration: JSON.parse($(".ipdPrescriptionDurations").val()),
                                ipdDoseInterval: JSON.parse($(".ipdPrescriptionIntervals").val()),
                                meals: JSON.parse($(".ipdPrescriptionMeals").val()),
                                uniqueId: s
                            },
                            d = prepareTemplateRender(a, o);
                        $(i).append(d), e(a), s++
                    }
                };

                function i() {
                    var e = !0;
                    return $(".medicineId").each((function () {
                        if ("Select Medicine" == $(this).val()) return displayErrorMessage(Lang.get("messages.medicine_bills.medicine_required")), e = !1, !1
                    })), e
                }
                listenClick(".editIpdPrescriptionBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = e.currentTarget.dataset.id;
                        t = a, $.ajax({
                            url: $("#showIpdPrescriptionUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data.ipdPrescription,
                                        a = e.data.ipdPrescriptionItems;
                                    $("#ipdEditPrescriptionId").val(t.id), $("#editHeaderNote").val(t.header_note), $("#editFooterNote").val(t.footer_note), $.each(a, (function (e, t) {
                                        $("#addPrescriptionItemOnEdit").trigger("click");
                                        var a = $("#showIpdUniqueId").val() - 1;
                                        $(document).find("[data-id='" + a + "']").val(t.category_id).trigger("change", [{
                                            medicineId: t.medicine_id
                                        }]), $(document).find("[data-dosage-id='" + a + "']").val(t.dosage), $(document).find("[data-dose-duration-id='" + a + "']").val(t.day).trigger("change", [{
                                            ipdDoseDuration: t.day
                                        }]), $(document).find("[data-dose-interval-id='" + a + "']").val(t.dose_interval).trigger("change", [{
                                            ipdDoseInterval: t.dose_interval
                                        }]), $(document).find("[data-meal-id='" + a + "']").val(t.time).trigger("change", [{
                                            prescriptionMedicineMealId: t.time
                                        }]), $(document).find("[data-instruction-id='" + a + "']").val(t.instruction)
                                    }));
                                    var i = 1;
                                    $(".edit-ipd-prescription-item-container>tr").each((function () {
                                        $(this).find(".prescription-item-number").text(i), i++
                                    })), $("#editIpdPrescriptionModal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".deleteIpdPrescription, .deleteIpdPrescriptionOnEdit", (function () {
                    $(this).parents("tr").remove(), a(parseInt($(this).data("edit")))
                })), listenChange(".ipdCategoryId", (function (e, a) {
                    var i = $(document).find("[data-medicine-id='" + $(this).data("id") + "']");
                    "" !== $(this).val() && $.ajax({
                        url: $("#showMedicinesListUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? (i.empty(), i.removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                i.append($("<option></option>").attr("value", e).text(t))
                            })), $(".modal").hasClass("show") && t($(".modal.fade.show").attr("id")), void 0 !== a && i.val(a.medicineId).trigger("change.select2")) : i.append($("<option></option>").text(Lang.get("messages.medicine_bills.select_medicine")))
                        }
                    }), i.empty(), i.prop("disabled", !0)
                })), listenClick(".printIpdPrescription", (function () {
                    var e = document.getElementById("DivIdToPrint"),
                        t = window.open("", "Print-Window");
                    t.document.open(), t.document.write('<html><link href="' + $("#showIpdBootstrapUrl").val() + '" rel="stylesheet" type="text/css"/><body onload="window.print()">' + e.innerHTML + "</body></html>"), t.document.close(), setTimeout((function () {
                        t.close()
                    }), 1e6)
                })), listenHiddenBsModal("#addIpdPrescriptionModal", (function () {
                    resetModalForm("#addIpdPrescriptionForm", "#validationErrorsBox"), $("#ipdPrescriptionTbl").find("tr:gt(1)").remove(), $(".ipdCategoryId").val(""), $(".ipdCategoryId").trigger("change")
                })), listenShownBsModal("#addIpdPrescriptionModal", (function () {
                    t(".medicineId"), e("#ipdPrescriptionItemTemplate")
                })), listenHiddenBsModal("#editIpdPrescriptionModal", (function () {
                    $("#editIpdPrescriptionTbl").find("tr:gt(0)").remove(), resetModalForm("#editIpdPrescriptionForm", "#editIpdPrescriptionErrorsBox")
                })), listenClick(".viewIpdPrescription", (function (e) {
                    var t = e.currentTarget.dataset.id;
                    $.ajax({
                        url: $("#showIpdPrescriptionUrl").val() + "/" + t,
                        type: "get",
                        beforeSend: function () {
                            screenLock()
                        },
                        success: function (e) {
                            $("#ipdPrescriptionViewData").html(e), $("#showIpdPrescriptionModal").modal("show"), ajaxCallCompleted()
                        },
                        complete: function () {
                            screenUnLock()
                        }
                    })
                })), listenSubmit("#addIpdPrescriptionForm", (function (e) {
                    if (e.preventDefault(), !0 !== i()) return !1;
                    var t = jQuery(this).find("#btnIpdPrescriptionSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#showIpdPrescriptionCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#addIpdPrescriptionModal")
                })), listenSubmit("#editIpdPrescriptionForm", (function (e) {
                    if (e.preventDefault(), !0 !== i()) return !1;
                    var t = jQuery(this).find("#btnEditIpdPrescriptionSave");
                    t.button("loading");
                    var a = $("#ipdEditPrescriptionId").val(),
                        n = $("#showIpdPrescriptionUrl").val() + "/" + a,
                        r = {
                            formSelector: $(this),
                            url: n,
                            type: "POST"
                        };
                    editRecord(r, t, "#editIpdPrescriptionModal")
                }))
            },
            1698: () => {
                function e(e) {
                    $.ajax({
                        url: $("#showIpdTimelinesUrl").val(),
                        type: "get",
                        data: {
                            id: e
                        },
                        success: function (e) {
                            $("#ipdTimelines").html(e)
                        }
                    })
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#editIpdTimelineForm").length && !$("#addIpdTimelineNewForm").length) return;
                    e($("#ipdPatientDepartmentId").val()), $("#ipdTimelineDate, #editIpdTimelineDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        minDate: $("#showIpdPatientCaseDate").val(),
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addIpdTimelineNewForm", (function (t) {
                    t.preventDefault();
                    var a = jQuery(this).find("#btnIpdTimelineSave");
                    a.button("loading");
                    var i = {
                        formSelector: $(this),
                        url: $("#showIpdTimelineCreateUrl").val(),
                        type: "POST",
                        tableSelector: "#tbl"
                    };
                    newRecord(i, a, "#addIpdTimelineModal"), a.attr("disabled", !1), setTimeout((function () {
                        e($("#ipdPatientDepartmentId").val()), $("#overviewIpdTimeline").load(location.href + " #overviewIpdTimeline")
                    }), 500)
                })), listenClick(".edit-timeline-btn", (function () {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var e, t = $(this).data("timeline-id");
                        e = t, $.ajax({
                            url: $("#showIpdTimelinesUrl").val() + "/" + e + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    if ("" != e.data.ipd_timeline_document_url) {
                                        var t = e.data.ipd_timeline_document_url.split(".").pop().toLowerCase();
                                        "pdf" == t ? $("#editPreviewIpdTimelineImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editPreviewIpdTimelineImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : $("#editPreviewIpdTimelineImage").css("background-image", 'url("' + e.data.ipd_timeline_document_url + '")'), $("#ipdTimeDocumentUrl").show(), $(".btn-view").show()
                                    } else $("#ipdTimeDocumentUrl").hide(), $(".btn-view").hide(), $("#editPreviewIpdTimelineImage").css("background-image", 'url("' + $("#showDefaultDocumentImageUrl").val() + '")');
                                    $("#ipdTimelineId").val(e.data.id), $("#editIpdTimelineTitle").val(e.data.title), document.querySelector("#editIpdTimelineDate")._flatpickr.setDate(moment(e.data.date).format()), $("#editIpdTimelineDescription").val(e.data.description), $("#ipdTimeDocumentUrl").attr("href", e.data.ipd_timeline_document_url), 1 == e.data.visible_to_person ? $("#editIpdTimelineVisibleToPerson").prop("checked", !0) : $("#editIpdTimelineVisibleToPerson").prop("checked", !1), $("#editIpdTimelineModal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editIpdTimelineForm", (function (t) {
                    t.preventDefault();
                    var a = jQuery(this).find("#btnIpdTimelineEdit");
                    a.button("loading");
                    var i = $("#ipdTimelineId").val(),
                        n = $("#showIpdTimelinesUrl").val() + "/" + i,
                        r = {
                            formSelector: $(this),
                            url: n,
                            type: "POST",
                            tableSelector: "#tbl"
                        };
                    editRecord(r, a, "#editIpdTimelineModal"), setTimeout((function () {
                        e($("#ipdPatientDepartmentId").val()), $("#overviewIpdTimeline").load(location.href + " #overviewIpdTimeline")
                    }), 500)
                })), listenClick(".delete-timeline-btn", (function () {
                    var t = $(this).data("timeline-id");
                    swal({
                        title: $(".deleteVariable").val(),
                        text: $(".confirmVariable").val() + $("#ipdTimeline").val() + "?",
                        type: "warning",
                        icon: "warning",
                        showCancelButton: !0,
                        closeOnConfirm: !1,
                        confirmButtonColor: "#50cd89",
                        showLoaderOnConfirm: !0,
                        buttons: {
                            confirm: $(".yesVariable").val() + ", " + $(".deleteVariable").val(),
                            cancel: $(".noVariable").val() + ", " + $(".cancelVariable").val()
                        }
                    }).then((function (a) {
                        a && $.ajax({
                            url: $("#showIpdTimelinesUrl").val() + "/" + t,
                            type: "DELETE",
                            dataType: "json",
                            success: function (t) {
                                t.success && setTimeout((function () {
                                    e($("#ipdPatientDepartmentId").val()), $("#overviewIpdTimeline").load(location.href + " #overviewIpdTimeline")
                                }), 500), swal({
                                    title: $(".deletedVariable").val(),
                                    text: $("#ipdTimeline").val() + " " + $(".hasBeenDeletedVariable").val(),
                                    icon: "success",
                                    confirmButtonColor: "#50cd89",
                                    timer: 2e3,
                                    buttons: {
                                        confirm: Lang.get("messages.common.ok")
                                    }
                                }), livewire.emit("refresh")
                            }
                        })
                    }))
                })), listenHiddenBsModal("#addIpdTimelineModal", (function () {
                    resetModalForm("#addIpdTimelineNewForm", "#ipdTimelineErrorsBox"), $("#previewIpdTimelineImage").attr("src", $("#showDefaultDocumentImageUrl").val()), $("#previewIpdTimelineImage").css("background-image", 'url("' + $("#showDefaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#editIpdTimelineModal", (function () {
                    resetModalForm("#editIpdTimelineForm", "#editIpdTimelineErrorsBox")
                })), listenClick(".removeIpdTimeline", (function () {
                    defaultImagePreview("#previewIpdTimelineImage")
                })), listenClick(".removeIpdTimelineEdit", (function () {
                    defaultImagePreview("#editPreviewIpdTimelineImage")
                }))
            },
            4592: () => {
                function e(e) {
                    toastr.error(e), $("#issuedItemSave").prop("disabled", !0)
                }
                document.addEventListener("turbo:load", (function () {
                    $("#issueItemCategory, #issueUserType").select2({
                        width: "100%"
                    }), $("#issueTo").select2({
                        placeholder: Lang.get("messages.message.select_user"),
                        width: "100%"
                    }), $("#issueItems").select2({
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.item.item"),
                        width: "100%"
                    });
                    var e = $("#issueReturnDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    });
                    $("#issueDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val(),
                        onChange: function (t, a, i) {
                            var n = moment($("#issueDate").val()).add(1, "days").format();
                            e.set("minDate", n)
                        }
                    }), $("#issueDate").on("dp.change", (function (e) {
                        var t = moment($("#issueDate").val()).add(1, "days");
                        $("#issueReturnDate").data("DateTimePicker").minDate(t)
                    })), setTimeout((function () {
                        $("#issueItemCategory, #issueUserType").trigger("change")
                    }), 300)
                })), listenChange("#issueItemCategory", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $("#issuedItemsUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($("#issueItems").empty(), $("#issueItems").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $("#issueItems").append($("<option></option>").attr("value", e).text(t))
                            })), $("#issueItems").trigger("change")) : ($("#issueItems").prop("disabled", !0), $("#itemQuantity").prop("disabled", !0), $("#itemQuantity").val(""), $("#showAvailableQuantity").text("0"), $("#itemAvailableQuantity").val(0))
                        }
                    }), $("#issueItems").empty(), $("#issueItems").append("<option>" + Lang.get("messages.common.choose") + " " + Lang.get("messages.item.item") + "</option>"), $("#issueItems").prop("disabled", !0)
                })), listenChange("#issueUserType", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $("#itemIssuedUsersUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($("#issueTo").empty(), $("#issueTo").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $("#issueTo").append($("<option></option>").attr("value", e).text(t))
                            }))) : $("#issueTo").prop("disabled", !0)
                        }
                    }), $("#issueTo").empty(), $("#issueTo").append("<option>" + Lang.get("messages.message.select_user") + "</option>"), $("#issueTo").prop("disabled", !0)
                })), listenChange("#issueItems", (function () {
                    $.ajax({
                        url: $("#issuedItemAvailableQtyUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            $("#itemAvailableQuantity").val(e), $("#showAvailableQuantity").text(e), $("#itemQuantity").attr("max", e), $("#itemQuantity").attr("disabled", !1)
                        }
                    })
                })), listenChange("#itemQuantity", (function () {
                    var t = parseInt($("#itemAvailableQuantity").val()),
                        a = parseInt($(this).val());
                    a <= t ? $("#issuedItemSave").prop("disabled", !1) : e(0 === a ? Lang.get("messages.issued_item.quantity_cannot_be_zero") : Lang.get("messages.issued_item.quantity_must_be_less_than_available_quantity"))
                })), listenSubmit("#createIssuedItemForm, #editIssuedItemForm", (function () {
                    $("#issuedItemSave").attr("disabled", !0)
                }))
            },
            2958: () => {
                $("#filter_status").select2(), listenClick("#issuedItemResetFilter", (function () {
                    $("#issuedItemHead").val(2).trigger("change")
                })), listenClick(".deleteIssuedItemBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexIssuedItemUrl").val() + "/" + t, "", $("#issuedItem").val())
                })), listenClick(".changes-status-btn", (function (e) {
                    var t = $(this).attr("data-id"),
                        a = $(this).attr("status");
                    Lang.setLocale($(".userCurrentLanguage").val()), a || swal({
                        title: Lang.get("messages.appointment.change_status") + "!",
                        text: Lang.get("messages.issued_item.are_you_sure_want_to_return_this_item") + "?",
                        type: "warning",
                        icon: "warning",
                        showCancelButton: !0,
                        closeOnConfirm: !1,
                        confirmButtonColor: "#50cd89",
                        showLoaderOnConfirm: !0,
                        buttons: {
                            confirm: Lang.get("messages.common.yes"),
                            cancel: Lang.get("messages.common.no")
                        }
                    }).then((function (e) {
                        e && $.ajax({
                            url: $("#indexReturnIssuedItemUrl").val(),
                            type: "get",
                            dataType: "json",
                            data: {
                                id: t
                            },
                            success: function (e) {
                                swal({
                                    title: Lang.get("messages.issued_item.item_returned"),
                                    icon: "success",
                                    confirmButtonColor: "#50cd89",
                                    timer: 2e3
                                }), livewire.emit("refresh")
                            }
                        })
                    }))
                })), listenChange("#issuedItemHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#issuedItemFilter"), $("#issuedItemFilter"))
                }))
            },
            2458: () => {
                document.addEventListener("turbo:load", (function () {
                    listenClick(".editItemCategoryBtn", (function (e) {
                        if (!$(".ajaxCallIsRunning").val()) {
                            ajaxCallInProgress();
                            var t, a = $(e.currentTarget).attr("data-id");
                            t = a, $.ajax({
                                url: $("#indexItemCategoriesUrl").val() + "/" + t + "/edit",
                                type: "GET",
                                success: function (e) {
                                    if (e.success) {
                                        var t = e.data;
                                        $("#itemCategoryId").val(t.id), $("#editItemCategoryName").val(t.name), $("#edit_item_categories_modal").modal("show"), ajaxCallCompleted()
                                    }
                                },
                                error: function (e) {
                                    manageAjaxErrors(e)
                                }
                            })
                        }
                    })), listenClick(".deleteItemCategoryBtn", (function (e) {
                        var t = $(e.currentTarget).attr("data-id");
                        deleteItem($("#indexItemCategoriesUrl").val() + "/" + t, "", $("#localItemCategory").val())
                    })), listenHiddenBsModal("#add_item_categories_modal", (function () {
                        resetModalForm("#addItemCategoryForm", "#itemCatErrorsBox")
                    })), listenHiddenBsModal("#edit_item_categories_modal", (function () {
                        resetModalForm("#editItemCatForm", "#editItemCatErrorsBox")
                    }))
                })), listenSubmit("#addItemCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#itemCategorySave");
                    t.button("loading"), $.ajax({
                        url: $("#indexItemCategoryCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_item_categories_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#itemCatErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editItemCatForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editItemCategorySave");
                    t.button("loading");
                    var a = $("#itemCategoryId").val();
                    $.ajax({
                        url: $("#indexItemCategoriesUrl").val() + "/" + a,
                        type: "put",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_item_categories_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }))
            },
            2142: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#stockItemCategory").length && !$("#editStockItemCategory").length) return;
                    $("#stockItemCategory, #editStockItemCategory").select2({
                        width: "100%"
                    }), $("#stockItems, #editStockItems").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.item.item")
                    }), $(".isEdit").val() && ($(".price-input").trigger("input"), setTimeout((function () {
                        $("#stockItemCategory, #editStockItemCategory").trigger("change")
                    }), 300))
                })), listenChange(".stockCategory", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $(".itemsUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($(".stockItems").empty(), $(".stockItems").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $(".stockItems").append($("<option></option>").attr("value", e).text(t))
                            })), $(".isEdit").val() && ($(".stockItems").val($("#editStockItemId").val()).trigger("change.select2"), isEdit = !1)) : $(".stockItems").prop("disabled", !0)
                        }
                    }), $(".stockItems").empty(), $(".stockItems").prop("disabled", !0)
                })), listenClick(".removeStockImage", (function () {
                    defaultImagePreview(".previewImage")
                }))
            },
            4116: () => {
                listenClick(".deleteStockBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexItemStockUrl").val() + "/" + t, "", $("#itemStock").val())
                }))
            },
            3666: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#itemCategory").length && !$("#editItemCategory").length) return;
                    $("#itemCategory").select2({
                        width: "100%"
                    }), $("#editItemCategory").select2({
                        width: "100%"
                    })
                }))
            },
            1753: () => {
                listenClick(".deleteItemsBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexItemUrl").val() + "/" + t, "", $("#Items").val())
                }))
            },
            1065: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createLabTechnicianForm").length && !$("#editLabTechnicianForm").length) return;
                    $("#technicianBloodGroup").select2({
                        width: "100%"
                    }), $("#editTechnicianBloodGroup").select2({
                        width: "100%"
                    }), $(".departmentId").select2({
                        width: "100%"
                    }), $(".technicianBirthDate").flatpickr({
                        dateFormat: "Y-m-d",
                        useCurrent: !1,
                        locale: $(".userCurrentLanguage").val()
                    }).set("maxDate", new Date)
                })), listenSubmit("#createLabTechnicianForm, #editLabTechnicianForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), $("#createLabTechnicianForm, #editLabTechnicianForm").find("input:text:visible:first").focus(), listenChange(".technicianProfileImage", (function () {
                    var t = e($(this), "#technicianErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#technicianErrorsBox").removeClass("d-none hide"), $("#technicianErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=technicianErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#technicianErrorsBox").html("").hide(), displayDocument(this, "#technicianErrorsBox", t))
                })), listenChange(".editTechnicianProfileImage", (function () {
                    var t = e($(this), "#editTechnicianErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#editTechnicianErrorsBox").removeClass("d-none hide"), $("#editTechnicianErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editTechnicianErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editTechnicianErrorsBox").html("").hide(), displayDocument(this, "#editTechnicianErrorsBox", t))
                }))
            },
            681: () => {
                "use strict";
                listen("click", ".deleteTechnicianBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#labTechnicianURL").val() + "/" + t, "", $("#labTechnician").val())
                })), listenChange(".technicianStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updateLabTechnicianStatus(t)
                })), listenChange("#technicianFilterStatus", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listen("click", "#technicianResetFilter", (function () {
                    $("#technicianFilterStatus").val(0).trigger("change"), hideDropdownManually($("#labTechnicianFilterBtn"), $(".dropdown-menu"))
                })), window.updateLabTechnicianStatus = function (e) {
                    $.ajax({
                        url: $("#labTechnicianURL").val() + "/" + e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                }
            },
            4874: () => {},
            8283: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#indexLiveConsultationUrl").length) return;
                    listenShownBsModal("#add_consulatation_modal", (function () {
                        $(".doctor-name,.patient-name,.consultation-type,.consultation-type-number,.change-status").select2({
                            width: "100%",
                            dropdownParent: "#add_consulatation_modal"
                        })
                    })), listenShownBsModal("#edit_consulatation_modal", (function () {
                        $(".edit-doctor-name,.edit-patient-name,.edit-consultation-type,.edit-consultation-type-number,.edit-change-status").select2({
                            width: "100%",
                            dropdownParent: "#edit_consulatation_modal"
                        })
                    })), $("#liveConsultationFilterStatusArr").select2({
                        width: "100%"
                    }), $(".consultation-date").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        minDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    }), $(".edit-consultation-date").flatpickr({
                        enableTime: !0,
                        minDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    }), $(".change-consultation-status").select2({
                        width: "100%"
                    })
                })), listenHiddenBsModal("#add_consulatation_modal", (function () {
                    resetModalForm("#addConsultationForm", "#consultationErrorsBox"), $(".consultation-type, .consultation-type-number").val("").trigger("change"), $("select").each((function (e, t) {
                        var a = "#" + $(this).attr("id");
                        $(a).val(""), $(a).prop("selectedIndex", 0).trigger("change")
                    })), $("#consultationTypeNumber").val(null).trigger("change"), $("#consultationTypeNumber").append($('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"))
                })), listenHiddenBsModal("#edit_consulatation_modal", (function () {
                    resetModalForm("#editConsultationForm", "#editConsultationErrorsBox")
                })), listenChange(".patient-name, .edit-patient-name", (function () {
                    "" !== $(this).val() && (e = $(this).val(), $(".consultation-type-number, .edit-consultation-type-number").empty(), $(".consultation-type-number, .edit-consultation-type-number").append('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"), $(".consultation-type, .edit-consultation-type").removeAttr("disabled"))
                }));
                var e = null;
                listenChange(".consultation-type", (function () {
                    $.ajax({
                        url: $("#indexLiveConsultationTypeNumber").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            consultation_type: $(this).val(),
                            patient_id: e
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($(".consultation-type-number").empty(), $(".consultation-type-number").removeAttr("disabled"), $(".consultation-type-number").append('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"), $.each(e.data, (function (e, t) {
                                $(".consultation-type-number").append($("<option></option>").attr("value", e).text(t))
                            })), $(".consultation-type-number").select2({
                                width: "100%",
                                dropdownParent: $("#add_consulatation_modal")
                            }), $(".edit-consultation-type-number").select2({
                                width: "100%",
                                dropdownParent: $("#edit_consulatation_modal")
                            })) : ($(".consultation-type-number").empty(), $(".consultation-type-number").append('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"), $(".consultation-type-number").prop("disabled", !0))
                        }
                    })
                })), listenChange(".edit-consultation-type", (function () {
                    $.ajax({
                        url: $("#indexLiveConsultationTypeNumber").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            consultation_type: $(this).val(),
                            patient_id: e
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($(".edit-consultation-type-number").empty(), $(".edit-consultation-type-number").removeAttr("disabled"), $(".edit-consultation-type-number").append('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"), $.each(e.data, (function (e, t) {
                                $(".edit-consultation-type-number").append($("<option></option>").attr("value", e).text(t))
                            })), $(".consultation-type-number").select2({
                                width: "100%",
                                dropdownParent: $("#add_consulatation_modal")
                            }), $(".edit-consultation-type-number").select2({
                                width: "100%",
                                dropdownParent: $("#edit_consulatation_modal")
                            })) : ($(".edit-consultation-type-number").empty(), $(".edit-consultation-type-number").append('<option selected="selected" value="">' + Lang.get("messages.common.choose") + " " + Lang.get("messages.live_consultation.type_number") + "</option>"), $(".edit-consultation-type-number").prop("disabled", !0))
                        }
                    })
                })), listenSubmit("#addConsultationForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#consultationSave");
                    t.button("loading"), $("#consultationSave").attr("disabled", !0), $.ajax({
                        url: $("#indexLiveConsultationCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_consulatation_modal").modal("hide"), $("#liveConsultationTable").DataTable().ajax.reload(null, !1), setTimeout((function () {
                                t.button("reset")
                            }), 2500), $("#consultationSave").attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#consultationErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3), $("#consultationSave").attr("disabled", !1)
                        }
                    })
                })), listenSubmit("#editConsultationForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editConsultationSave");
                    t.button("loading"), $("#editConsultationSave").attr("disabled", !0);
                    var a = $("#liveConsultationId").val();
                    $.ajax({
                        url: $("#indexLiveConsultationUrl").val() + "/" + a,
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_consulatation_modal").modal("hide"), $("#liveConsultationTable").DataTable().ajax.reload(null, !1), $("#editConsultationSave").attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e), $("#editConsultationSave").attr("disabled", !1)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".editConsultationBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexLiveConsultationUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#liveConsultationId").val(t.id), $(".edit-consultation-title").val(t.consultation_title), $(".edit-consultation-date").val(moment(t.consultation_date).format("YYYY-MM-DD h:mm A")), $(".edit-consultation-duration-minutes").val(t.consultation_duration_minutes), $(".edit-patient-name").val(t.patient_id).trigger("change"), $(".edit-doctor-name").val(t.doctor_id).trigger("change"), $(".host-enable,.host-disabled").prop("checked", !1), t.host_video, $('input[name="host_video"][value='.concat(t.host_video, "]")).prop("checked", !0), $(".client-enable,.client-disabled").prop("checked", !1), t.participant_video, $('input[name="participant_video"][value='.concat(t.participant_video, "]")).prop("checked", !0), $(".edit-consultation-type").val(t.type).trigger("change"), setTimeout((function () {
                                        $(".edit-consultation-type-number").val(t.type_number).trigger("change")
                                    }), 1e3), $(".edit-description").val(t.description), $("#edit_consulatation_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".startConsultationBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexLiveConsultationUrl").val() + "/" + t + "/start",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#startConsultationId").val(t.liveConsultation.id), $(".start-modal-title").text(t.liveConsultation.consultation_title), $(".host-name").text(t.liveConsultation.user.full_name), $(".date").text(moment(t.liveConsultation.consultation_date).format("Do MMM, Y") + " " + moment(t.liveConsultation.consultation_date).format("LT")), $(".minutes").text(t.liveConsultation.consultation_duration_minutes), $("#startModal").find(".status").append("started" === t.zoomLiveData.status ? $(".status").text("Started") : $(".status").text("Awaited")), $(".start").attr("href", $("#indexConsultationPatientRole").val() ? t.liveConsultation.meta.join_url : "started" === t.zoomLiveData.status ? $(".start").addClass("disabled") : t.liveConsultation.meta.start_url), "waiting" === t.zoomLiveData.status && $(".start").removeClass("disabled"), $("#startModal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".deleteConsultationBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexLiveConsultationUrl").val() + "/" + t, "", $("#LiveConsultation").val())
                })), listenChange(".change-consultation-status", (function () {
                    var e = $(this).val();
                    $.ajax({
                        url: $("#indexLiveConsultationUrl").val() + "/change-status",
                        type: "GET",
                        data: {
                            statusId: e,
                            id: $(this).attr("data-id")
                        },
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenClick(".showConsultationData", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    $.ajax({
                        url: $("#indexLiveConsultationUrl").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data.liveConsultation,
                                    a = $("#show_live_consultations_modal");
                                $("#startLiveConsultationId").val(t.id), $("#showConsultationTitle").text(t.consultation_title), $("#showConsultationDate").text(moment(t.consultation_date).format("Do MMM, Y") + " " + moment(t.consultation_date).format("LT")), $("#showConsultationDurationMinutes").text(t.consultation_duration_minutes), $("#showConsultationPatient").text(t.patient.patient_user.full_name), $("#showConsultationDoctor").text(t.doctor.doctor_user.full_name), 0 == t.type ? a.find("#showConsultationType").append("OPD") : a.find("#showConsultationType").append("IPD"), 0 == t.type ? a.find("#showConsultationTypeNumber").append(t.opd_patient.opd_number) : a.find("#showConsultationTypeNumber").append(t.ipd_patient.ipd_number), 0 === t.host_video ? $("#showConsultationHostVideo").text("Disable") : $("#showConsultationHostVideo").text("Enable"), 0 === t.participant_video ? $("#showConsultationParticipantVideo").text("Disable") : $("#showConsultationParticipantVideo").text("Enable"), isEmpty(t.description) ? $("#showConsultationDescription").text(Lang.get("messages.common.n/a")) : $("#showConsultationDescription").text(t.description), a.modal("show")
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenHiddenBsModal("#show_live_consultations_modal", (function () {
                    $(this).find("#showConsultationTitle, #showConsultationDate, #showConsultationDurationMinutes, #showConsultationPatient, #showConsultationDoctor, #showConsultationType, #showConsultationTypeNumber, #showConsultationHostVideo, #showConsultationParticipantVideo, #showConsultationDescription").empty()
                })), listenClick(".add-credential", (function () {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var e, t = $("#zoomUserId").val();
                        e = t, $.ajax({
                            url: "user-zoom-credential/" + e + "/fetch",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    isEmpty(t) || ($("#zoomApiKey").val(t.zoom_api_key), $("#zoomApiSecret").val(t.zoom_api_secret)), $("#addCredential").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#addZoomForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnZoomSave");
                    t.button("loading"), $.ajax({
                        url: $("#indexZoomCredentialCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#addCredential").modal("hide"), setTimeout((function () {
                                t.button("reset")
                            }), 2500), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#credentialValidationErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3)
                        }
                    })
                })), listenChange("#liveConsultationFilterStatusArr", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#consultationResetFilter", (function () {
                    $("#liveConsultationFilterStatusArr").val(0).trigger("change"), hideDropdownManually($("#liveConsultationFilterBtn"), $(".dropdown-menu"))
                })), listenChange(".consultation-type", (function () {
                    $(".consultation-type-number").val("").trigger("change")
                })), listenChange(".patient-name", (function () {
                    $(".consultation-type").val("").trigger("change"), $(".consultation-type-number").trigger("change")
                }))
            },
            6551: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#indexLiveMeetingUrl").length) return;
                    $(".change-meeting-status").select2({
                        width: "100%"
                    }), $("#meetingUserId, #statusArr").select2({
                        width: "100%"
                    }), $(".editUserId").select2({
                        width: "100%"
                    }), $(".consultation-date, .edit-consultation-date").flatpickr({
                        enableTime: !0,
                        minDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addLiveMeetingForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#meetingSave");
                    $("#meetingSave").attr("disabled", !0), $.ajax({
                        url: $("#indexLiveMeetingCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_live_meeting_modal").modal("hide"), t.attr("disabled", !1), livewire.emit("refresh"), $(".change-meeting-status").select2({
                                width: "100%"
                            }), setTimeout((function () {
                                t.attr("disabled", !1)
                            }), 3e3))
                        },
                        error: function (e) {
                            printErrorMessage("#meetingErrorsBox", e), setTimeout((function () {
                                t.attr("disabled", !1)
                            }), 2e3)
                        }
                    })
                })), listenHiddenBsModal("#add_live_meeting_modal", (function () {
                    resetModalForm("#addLiveMeetingForm", "#meetingErrorsBox"), $("#meetingUserId").val($(".loggedInUserId").val()).trigger("change.select2")
                })), listenChange(".change-meeting-status", (function () {
                    var e = $(this).val();
                    $.ajax({
                        url: $("#indexLiveMeetingUrl").val() + "/change-status",
                        type: "GET",
                        data: {
                            statusId: e,
                            id: $(this).attr("data-id")
                        },
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listen("click", ".startMeetingBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexLiveMeetingUrl").val() + "/" + t + "/start",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#startLiveConsultationId").val(t.liveMeeting.id), $(".start-modal-title").text(t.liveMeeting.consultation_title), $(".host-name").text(t.liveMeeting.user.full_name), $(".date").text(moment(t.liveMeeting.consultation_date).format("Do MMM, Y") + " " + moment(t.liveMeeting.consultation_date).format("LT")), $(".minutes").text(t.liveMeeting.consultation_duration_minutes), $("#startConsultationModal").find(".status").append("started" === t.zoomLiveData.status ? $(".status").text("Started") : $(".status").text("Awaited")), $("#indexMeetingAdminRole").val() || $("#indexMeetingDoctorRole").val() ? "started" === t.zoomLiveData.status ? $(".start").addClass("disabled") : $(".start").attr("href", t.liveMeeting.meta.start_url) : $(".start").attr("href", t.liveMeeting.meta.join_url), "waiting" === t.zoomLiveData.status && $(".start").removeClass("disabled"), $("#startConsultationModal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".showMeetingData", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    $.ajax({
                        url: $("#indexLiveMeetingUrl").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#showMeetingId").val(t.id), $("#showMeetingTitle").text(t.consultation_title), $("#showMeetingDate").text(moment(t.consultation_date).format("Do MMM, Y") + " " + moment(t.consultation_date).format("LT")), $("#showMeetingMinutes").text(t.consultation_duration_minutes), 0 == t.host_video ? $("#showMeetingHost").text("Disable") : $("#showMeetingHost").text("Enable"), 0 == t.participant_video ? $("#showMeetingParticipant").text("Disable") : $("#showMeetingParticipant").text("Enable"), isEmpty(t.description) ? $("#showMeetingDescription").text(Lang.get("messages.common.n/a")) : $("#showMeetingDescription").text(t.description), $("#show_live_meetings_modal").modal("show")
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listen("click", ".editMeetingBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexLiveMeetingUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#liveMeetingId").val(t.id), $(".edit-consultation-title").val(t.consultation_title), $(".edit-consultation-date").val(moment(t.consultation_date).format("YYYY-MM-DD h:mm A")), $(".edit-consultation-duration-minutes").val(t.consultation_duration_minutes), $(".editUserId").val(t.meetingUsers).trigger("change.select2"), $(".host-enable,.host-disabled").prop("checked", !1), t.host_video, $('input[name="host_video"][value='.concat(t.host_video, "]")).prop("checked", !0), $(".client-enable,.client-disabled").prop("checked", !1), t.participant_video, $('input[name="participant_video"][value='.concat(t.participant_video, "]")).prop("checked", !0), $(".edit-description").val(t.description), $("#edit_live_meeting_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editMeetingForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editMeetingSave");
                    t.button("loading"), t.attr("disabled", !0);
                    var a = $("#liveMeetingId").val();
                    $.ajax({
                        url: $("#indexLiveMeetingUrl").val() + "/" + a,
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_live_meeting_modal").modal("hide"), t.attr("disabled", !1), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            t.attr("disabled", !1), manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listen("click", ".deleteMeetingBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexLiveMeetingUrl").val() + "/" + t, "", $("#LiveMeeting").val())
                })), listenHiddenBsModal("#show_live_meetings_modal", (function () {
                    $(this).find("#showMeetingTitle,#showMeetingDate, #showMeetingMinutes, #showMeetingHost, #showMeetingParticipant, #showMeetingDescription").empty()
                })), listenChange("#liveMeetingFilterArrID", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#liveMeetingResetFilter", (function () {
                    $("#liveMeetingFilterArrID").val(0).trigger("change"), hideDropdownManually($("#liveMeetingFilterBtn"), $(".dropdown-menu"))
                }))
            },
            9239: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#mailEmailId").length) return;
                    $("#mailEmailId").focus()
                })), listenChange("#mailDocumentImage", (function () {
                    var e = isValidMailDocument($(this), "#mailValidationErrorsBox");
                    isEmpty(e) || 0 == e || ($("#mailValidationErrorsBox").html("").hide(), displayDocument(this, "#mailPreviewImage", e))
                })), window.isValidMailDocument = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html(Lang.get("messages.expense.document_error")).show(), !1) : a
                }, listenClick(".removeMailImage", (function () {
                    defaultImagePreview("#mailPreviewImage")
                }))
            },
            5908: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#medicineUniqueId").length) return;
                    $(".medicine_bill_date").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i"
                    }), $(".edit_medicine_bill_date").flatpickr({
                        enableTime: !0,
                        dateFormat: "Y-m-d H:i"
                    }), $(".medicineBillExpiryDate").flatpickr({
                        minDate: new Date,
                        dateFormat: "Y-m-d"
                    }), $(".medicine-payment-mode").select2({
                        width: "100%"
                    }), $(".medicineBillCategoriesId").select2({
                        width: "100%"
                    })
                }));
                var e = "";
                Lang.setLocale($(".userCurrentLanguage").val()), listenChange(".medicineBillCategoriesId", (function () {
                    var e = $(this).val(),
                        t = $(this).closest("tr").find(".purchaseMedicineId");
                    if ("" == e) return $(t).find("option").remove(), $(t).append($("<option></option>").attr("placeholder", "").text(Lang.get("messages.medicine_bills.select_medicine"))), !1;
                    $.ajax({
                        type: "get",
                        url: route("get-medicine-category", e),
                        success: function (e) {
                            var a = e.data.medicine;
                            $(t).find("option").remove(), $(t).attr("required", !0), $(t).append($('<option value="">' + Lang.get("messages.medicine_bills.select_medicine") + "</option>")), $.each(a, (function (e, a) {
                                $(t).append($("<option></option>").attr("value", e).text(a))
                            }))
                        }
                    })
                })), listenChange(".medicinePurchaseId", (function () {
                    var e = $(this).closest("tr"),
                        t = $(this).val(),
                        a = "#medicine_sale_price" + $(this).attr("data-id");
                    if ("" == t || t == Lang.get("messages.medicine_bills.select_medicine")) return $(a).val("0.00"), !1;
                    $.ajax({
                        type: "get",
                        url: route("get-medicine", t),
                        success: function (t) {
                            $(a).val(t.data.selling_price.toFixed(2));
                            var i = e.find(".medicineBill-quantity").val(),
                                n = e.find(".medicineBill-sale-price").val(),
                                r = parseFloat(n * i);
                            e.find(".medicine-bill-amount").val(r.toFixed(2));
                            for (var s = $(".medicineBill-tax"), o = $(".medicine-bill-amount"), d = 0, l = 0, c = 0, u = 0, m = 0; m < o.length; m++) d += parseFloat(o[m].value), u = $(".medicineBill-discount").val(), 0 != s[m].value && "" != s[m].value ? l += o[m].value * s[m].value / 100 : parseFloat(o[m].value);
                            if (u = "" == u ? 0 : u, c = parseFloat(d) + parseFloat(l), c = parseFloat(c) - parseFloat(u), u > d && $(this).hasClass("medicineBill-discount")) return u = u.slice(0, -1), displayErrorMessage(Lang.get("messages.medicine_bills.validate_discount")), $("#discountAmount").val(u), !1;
                            u > d && (c = 0), $("#total").val(d.toFixed(2)), $("#medicineTotalTaxId").val(l.toFixed(2)), $("#netAmount").val(c.toFixed(2))
                        }
                    })
                })), listenClick(".add-medicine-btn-medicine-bill", (function () {
                    e = $("#medicineUniqueId").val();
                    var n = {
                            medicinesCategories: JSON.parse($("#showMedicineCategoriesMedicineBill").val()),
                            medicines: JSON.parse($(".associatePurchaseMedicines").val()),
                            uniqueId: e
                        },
                        r = prepareTemplateRender("#medicineBillTemplate", n);
                    $(".medicine-bill-container").append(r), t(".medicinePurchaseId"), a(".medicinebillCategories"), i(".medicinebillCategories"), $(".purchaseMedicineExpiryDate").flatpickr({
                        minDate: new Date,
                        dateFormat: "Y-m-d"
                    }), e++, $("#medicineUniqueId").val(e)
                }));
                var t = function (e) {
                        $(e).select2({
                            placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                            width: "100%"
                        })
                    },
                    a = function (e) {
                        $(e).select2({
                            placeholder: Lang.get("messages.medicine.select_category"),
                            width: "100%"
                        })
                    },
                    i = function (e) {
                        $(".medicineBillExpiryDate").flatpickr({
                            minDate: new Date,
                            dateFormat: "Y-m-d"
                        })
                    };
                listenKeyup(".medicineBill-quantity,.medicineBill-price,.medicineBill-tax,.medicineBill-discount,.medicineBill-sale-price", (function () {
                    var e = $(this).val();
                    $(this).val(e.replace(/[^0-9\.]/g, ""));
                    var t = $(this).closest("tr"),
                        a = t.find(".medicineBill-quantity").val(),
                        i = t.find(".medicineBill-sale-price").val(),
                        n = parseFloat(i * a);
                    t.find(".medicine-bill-amount").val(n.toFixed(2));
                    for (var r = $(".medicineBill-tax"), s = $(".medicine-bill-amount"), o = 0, d = 0, l = 0, c = 0, u = $(".medicineBill-quantity"), m = $(".previous-quantity"), _ = 0; _ < s.length; _++) {
                        if (o += parseFloat(s[_].value), c = $(".medicineBill-discount").val(), 1 == $("#medicineBillStatus").val() && parseInt(u[_].value) > parseInt(m[_].value)) {
                            var p = u[_].value.slice(0, -1);
                            return t.find(".medicineBill-quantity").val(p), a = t.find(".medicineBill-quantity").val(), i = t.find(".medicineBill-sale-price").val(), n = parseFloat(i * a), t.find(".medicine-bill-amount").val(n.toFixed(2)), displayErrorMessage(Lang.get("messages.medicine_bills.update_quantity")), !1
                        }
                        if (0 != r[_].value && "" != r[_].value) {
                            if (r[_].value > 99) {
                                var h = r[_].value.slice(0, -1);
                                return t.find(".medicineBill-tax").val(h), displayErrorMessage(Lang.get("messages.medicine_bills.validate_tax")), $("#discountAmount").val(c), !1
                            }
                            d += s[_].value * r[_].value / 100
                        } else parseFloat(s[_].value)
                    }
                    if (c = "" == c ? 0 : c, l = parseFloat(o) + parseFloat(d), l = parseFloat(l) - parseFloat(c), c > o && $(this).hasClass("medicineBill-discount")) return c = c.slice(0, -1), displayErrorMessage(Lang.get("messages.medicine_bills.validate_discount")), $("#discountAmount").val(c), !1;
                    c > o && (l = 0), $("#total").val(o.toFixed(2)), $("#medicineTotalTaxId").val(d.toFixed(2)), $("#netAmount").val(l.toFixed(2))
                })), listenSubmit("#CreateMedicineBillForm", (function (e) {
                    e.preventDefault();
                    var t = "#netAmount";
                    return $("#total").val() < $("#discountAmount").val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.validate_discount")), !1) : null == $(t).val() || "" == $(t).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_empty")), !1) : 0 == $(t).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_zero")), !1) : 0 == $(".medicineBill-quantity").val() || null == $(".medicineBill-quantity").val() || "" == $(".medicineBill-quantity").val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.quantity_cannot_be_zero")), !1) : void $(this)[0].submit()
                })), listenClick(".add-patient-modal", (function () {
                    $("#addPatientModal").appendTo("body").modal("show")
                })), listenSubmit("#addPatientForm", (function (e) {
                    e.preventDefault(), processingBtn("#addPatientForm", "#patientBtnSave", "loading"), $("#patientBtnSave").attr("disabled", !0), $.ajax({
                        url: route("store.patient"),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && ($("#prescriptionPatientId").find("option").remove(), $("#prescriptionPatientId").append($("<option></option>").attr("placeholder", "").text(Lang.get("messages.document.select_patient"))), $.each(e.data, (function (e, t) {
                                $("#prescriptionPatientId").append($("<option></option>").attr("value", e).text(t))
                            })), displaySuccessMessage(e.message), $("#addPatientModal").modal("hide"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        },
                        complete: function () {
                            $("#patientBtnSave").attr("disabled", !1), processingBtn("#addPatientForm", "#patientBtnSave")
                        }
                    })
                })), listenHiddenBsModal("#addPatientModal", (function () {
                    resetModalForm("#addPatientForm", "#patientErrorsBox")
                })), listenClick(".medicine-bill-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem(route("medicine-bills.destroy", t), "", Lang.get("messages.medicine_bills.medicine_bill"))
                })), listenSubmit("#MedicinebillForm", (function (e) {
                    e.preventDefault();
                    var t = "#netAmount";
                    return parseFloat($("#total").val()) < parseFloat($("#discountAmount").val()) ? (displayErrorMessage(Lang.get("messages.medicine_bills.validate_discount")), !1) : null == $(t).val() || "" == $(t).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_empty")), !1) : 0 == $(t).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_zero")), !1) : 0 == $(".medicineBill-quantity").val() || null == $(".medicineBill-quantity").val() || "" == $(".medicineBill-quantity").val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.quantity_cannot_be_zero")), !1) : ($medicineBillId = $("#medicineBillId").val(), void $.ajax({
                        url: route("medicine-bills.update", $medicineBillId),
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), setTimeout((function () {
                                Turbo.visit(route("medicine-bills.index"))
                            }), 2e3))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    }))
                })), listenClick(".delete-medicine-bill-item", (function () {
                    var e = $(this).closest("tr"),
                        t = e.find(".medicine-bill-amount").val(),
                        a = e.find(".medicineBill-tax").val(),
                        i = parseFloat(t) * parseFloat(a / 100),
                        n = parseFloat($("#medicineTotalTaxId").val()) - parseFloat(i);
                    $("#medicineTotalTaxId").val(n.toFixed(2));
                    var r = parseFloat($("#total").val()) - parseFloat(t);
                    $("#total").val(r.toFixed(2));
                    var s = parseFloat(i) + parseFloat(t),
                        o = parseFloat($("#netAmount").val()) - parseFloat(s);
                    $("#netAmount").val(o.toFixed(2)), $(this).parents("tr").remove()
                }))
            },
            4117: () => {
                function loadMedicineCreateData() {
                    listenClick(".showMedicineBtn", (function (e) {
                        e.preventDefault();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#medicinesShowModal").val() + "/" + t,
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    $("#showMedicineName").text(e.data.name), $("#showMedicineBrand").text(e.data.brand_name), $("#showMedicineCategory").text(e.data.category_name), $("#showMedicineSaltComposition").text(e.data.salt_composition), $("#showMedicineSellingPrice").text(e.data.selling_price), $("#showMedicineBuyingPrice").text(e.data.buying_price), $("#showMedicineQuanity").text(addCommas(e.data.quantity)), $("#showMedicineAvailableQuanity").text(addCommas(e.data.available_quantity)), $("#showMedicineSideEffects").text(e.data.side_effects), moment.locale($("#medicineLanguage").val());
                                    var t = moment(e.data.created_at);
                                    $("#showMedicineCreatedOn").text(t.fromNow()), $("#showMedicineUpdatedOn").text(moment(e.data.updated_at).fromNow()), $("#showMedicineDescription").text(e.data.description), setValueOfEmptySpan(), $("#showMedicine").appendTo("body").modal("show")
                                }
                            },
                            error: function (e) {
                                displayErrorMessage(e.responseJSON.message)
                            }
                        })
                    }))
                }

                function deleteMedicineAjax(url) {
                    var tableId = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        header = arguments.length > 2 ? arguments[2] : void 0,
                        callFunction = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    $.ajax({
                        url,
                        type: "DELETE",
                        dataType: "json",
                        success: function success(obj) {
                            obj.success && obj.data && swal({
                                title: obj.message,
                                text: $(".confirmVariable").val() + header + "?",
                                icon: sweetAlertIcon,
                                timer: 3e3,
                                buttons: {
                                    confirm: $(".yesVariable").val() + "," + $(".deleteVariable").val(),
                                    cancel: $(".noVariable").val() + "," + $(".cancelVariable").val()
                                }
                            }).then((function (e) {
                                e && $.ajax({
                                    url,
                                    type: "DELETE",
                                    dataType: "json",
                                    data: {
                                        canDeleteCheck: "yes"
                                    },
                                    success: function (e) {},
                                    error: function (e) {
                                        swal({
                                            title: "",
                                            text: e.responseJSON.message,
                                            confirmButtonColor: "#009ef7",
                                            icon: "error",
                                            timer: 5e3,
                                            buttons: {
                                                confirm: $(".okVariable").val()
                                            }
                                        })
                                    }
                                })
                            })), obj.success && !obj.data && (Livewire.emit("resetPage"), swal({
                                icon: "success",
                                title: $(".deletedVariable").val(),
                                confirmButtonColor: "#f62947",
                                text: header + " " + $(".hasBeenDeletedVariable").val(),
                                timer: 2e3,
                                buttons: {
                                    confirm: $(".okVariable").val()
                                }
                            }), callFunction && eval(callFunction))
                        },
                        error: function (e) {
                            swal({
                                title: "",
                                text: e.responseJSON.message,
                                confirmButtonColor: "#009ef7",
                                icon: "error",
                                timer: 5e3,
                                buttons: {
                                    confirm: $(".okVariable").val()
                                }
                            })
                        }
                    })
                }
                document.addEventListener("turbo:load", loadMedicineCreateData), listenClick(".deleteMedicineBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    medicineDeleteItem(route("check.use.medicine", t), "", $("#Medicine").val())
                })), window.medicineDeleteItem = function (e) {
                    var t = arguments.length > 2 ? arguments[2] : void 0;
                    $.ajax({
                        url: e,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var a = 1 == e.data.result ? Lang.get("messages.medicine.delete_medicine") : $(".confirmVariable").val() + t + "?";
                                swal({
                                    title: $(".deleteVariable").val() + "!",
                                    text: a,
                                    icon: $(".sweetAlertIcon").val(),
                                    buttons: {
                                        confirm: $(".yesVariable").val() + "," + $(".deleteVariable").val(),
                                        cancel: $(".noVariable").val() + "," + $(".cancelVariable").val()
                                    }
                                }).then((function (a) {
                                    a && deleteMedicineAjax($("#indexMedicineUrl").val() + "/" + e.data.id, null, t, null)
                                }))
                            }
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }
            },
            4163: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createMedicine").length && !$("#editMedicine").length) return;
                    var e = $("#qty");
                    e.blur((function () {
                        e.val() < 0 && e.val(0)
                    })), $("#medicineBrandId,#medicineCategoryId").select2({
                        width: "100%"
                    }), $("#medicineNameId").focus()
                })), listenSubmit("#createMedicine, #editMedicine", (function () {
                    $("#medicineSave").attr("disabled", !0)
                }))
            },
            2252: () => {
                "use strict";
                listenClick(".editNoticeboardBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderNoticeBoardDetailData(t)
                    }
                })), window.renderNoticeBoardDetailData = function (e) {
                    $.ajax({
                        url: $("#showNoticeBoardUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#noticeBoardId").val(e.data.id), $("#editNoticeBoardTitle").val(e.data.title), $("#editNoticeBoardDescription").val(e.data.description), $("#edit_notice_boards_modal").modal("show"), ajaxCallCompleted())
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editNoticeBoardForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editNoticeBoardSave");
                    t.button("loading");
                    var a = $("#noticeBoardId").val();
                    $.ajax({
                        url: $("#showNoticeBoardUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_notice_boards_modal").modal("hide"), setTimeout((function () {
                                window.location.reload()
                            }), 3e3))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }))
            },
            8180: () => {
                "use strict";
                listenSubmit("#addNoticeBoardForm", (function (e) {
                    e.preventDefault(), $("#noticeBoardSave").attr("disabled", !0), $.ajax({
                        url: $("#indexNoticeBoardCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_notice_boards_modal").modal("hide"), livewire.emit("refresh"), $("#noticeBoardSave").attr("disabled", !1))
                        },
                        error: function (e) {
                            printErrorMessage("#noticeBoardErrorsBox", e), $("#noticeBoardSave").attr("disabled", !1)
                        }
                    })
                })), listen("click", ".notice-edit-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexNoticeBoardUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#noticeBoardId").val(e.data.id), $("#editNoticeBoardTitle").val(e.data.title), $("#editNoticeBoardDescription").val(e.data.description), $("#edit_notice_boards_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listen("click", ".notice-view-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = e.currentTarget.dataset.id;
                        $.ajax({
                            url: $("#indexNoticeBoardUrl").val() + "/" + t,
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#showNoticeBoardTitle").html(""), $("#showNoticeBoardDescription").html(""), $("#showNoticeBoardTitle").append(e.data.title), $("#showNoticeBoardDescription").append(e.data.description), $("#show_notice_boards_modal").appendTo("body").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editNoticeBoardsForm", (function (e) {
                    e.preventDefault(), $("#noticeBoardSave").attr("disabled", !0);
                    var t = $("#noticeBoardId").val();
                    $.ajax({
                        url: $("#indexNoticeBoardUrl").val() + "/" + t,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_notice_boards_modal").modal("hide"), livewire.emit("refresh"), $("#noticeBoardSave").attr("disabled", !1))
                        },
                        error: function (e) {
                            manageAjaxErrors(e), $("#noticeBoardSave").attr("disabled", !1)
                        }
                    })
                })), listenHiddenBsModal("#add_notice_boards_modal", (function () {
                    resetModalForm("#addNoticeBoardForm", "#noticeBoardErrorsBox"), $("#noticeBoardSave").attr("disabled", !1)
                })), listenHiddenBsModal("#edit_notice_boards_modal", (function () {
                    resetModalForm("#editNoticeBoardsForm", "#editNoticeBoardErrorsBox")
                }))
            },
            3177: () => {
                listen("click", ".notice-board-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexNoticeBoardUrl").val() + "/" + t, "", $("#noticeBoard").val())
                }))
            },
            1915: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createNurseForm").length && !$("#editNurseForm").length) return;
                    $("#nurseBloodGroup").select2({
                        width: "100%"
                    }), $("#editNurseBloodGroup").select2({
                        width: "100%"
                    }), $(".nurseBirthDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    }), $("#departmentId").select2({
                        width: "100%"
                    }), $("#createNurseForm, #editNurseForm").find("input:text:visible:first").focus()
                })), listenSubmit("#createNurseForm, #editNurseForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenChange(".nurseProfileImage", (function () {
                    var e = isValidOpdTimelineDocument($(this), "#nurseErrorsBox");
                    isEmpty(e) || 0 == e ? ($(this).val(""), $("#nurseErrorsBox").removeClass("d-none hide"), $("#nurseErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=nurseErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($(".alert").html("").hide(), displayDocument(this, ".nursePreviewImage", e))
                })), listenChange(".nurseProfileImage", (function () {
                    var e = isValidOpdTimelineDocument($(this), "#editNurseErrorsBox");
                    isEmpty(e) || 0 == e ? ($(this).val(""), $("#editNurseErrorsBox").removeClass("d-none hide"), $("#editNurseErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editNurseErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($(".alert").html("").hide(), displayDocument(this, ".nursePreviewImage", e))
                }))
            },
            9916: () => {
                listen("click", ".deleteNurseBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#nurseURL").val() + "/" + t, "", $("#Nurse").val())
                })), listenChange(".nurseStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updateNurseStatus(t)
                })), listen("click", "#nurseResetFilter", (function () {
                    $("#nurse_filter_status").val(0).trigger("change"), hideDropdownManually($("#nurseFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#nurse_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), window.updateNurseStatus = function (e) {
                    $.ajax({
                        url: $("#nurseURL").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                }
            },
            877: () => {},
            6544: (e, t, a) => {
                "use strict";
                var i = a(381),
                    n = a.n(i);
                document.addEventListener("turbo:load", (function () {
                    if (!$("#opdDiagnosisReportDate").length && !$("#editOpdDiagnosisReportDate").length) return;
                    $("#opdDiagnosisReportDate, #editOpdDiagnosisReportDate").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        useCurrent: !0,
                        sideBySide: !0,
                        minDate: n()($("#showOpdAppointmentDate").val()).format("YYYY-MM-DD"),
                        locale: $(".userCurrentLanguage").val(),
                        widgetPositioning: {
                            horizontal: "left",
                            vertical: "bottom"
                        }
                    })
                })), listenClick(".deleteOpdDiagnosisBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showOpdDiagnosisUrl").val() + "/" + t, null, $("#opdDiagnosisDeleteBtn").val())
                })), listenSubmit("#addOpdDiagnosisForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnOpdDiagnosisSave");
                    t.button("loading");
                    var a = {
                        formSelector: $(this),
                        url: $("#showOpdDiagnosisCreateUrl").val(),
                        type: "POST"
                    };
                    newRecord(a, t, "#add_opd_diagnoses_modal"), t.attr("disabled", !1)
                })), listenClick(".editOpdDiagnosisBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderOpdDiagnosisData(t)
                    }
                })), window.renderOpdDiagnosisData = function (e) {
                    $.ajax({
                        url: $("#showOpdDiagnosisUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data.opd_diagnosis_document_url.split(".").pop().toLowerCase();
                                "pdf" == t ? $("#editOpdDiagnosisPreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editOpdDiagnosisPreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" != e.data.opd_diagnosis_document_url && $("#editOpdDiagnosisPreviewImage").css("background-image", 'url("' + e.data.opd_diagnosis_document_url + '")'), $("#opdDiagnosisId").val(e.data.id), $("#editOpdDiagnosisReportType").val(e.data.report_type), document.querySelector("#editOpdDiagnosisReportDate")._flatpickr.setDate(n()(e.data.report_date).format()), $("#editOpdDiagnosisDescription").val(e.data.description), "" != e.data.opd_diagnosis_document_url ? ($("#opdDiagnosisDocumentUrl").show(), $(".btn-view").show(), $("#opdDiagnosisDocumentUrl").attr("href", e.data.opd_diagnosis_document_url)) : ($("#opdDiagnosisDocumentUrl").hide(), $(".btn-view").hide()), $("#edit_opd_diagnoses_modal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editOpdDiagnosisForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnEditOpdDiagnosisSave");
                    t.button("loading");
                    var a = $("#opdDiagnosisId").val(),
                        i = $("#showOpdDiagnosisUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "POST",
                            tableSelector: null
                        };
                    editRecord(n, t, "#edit_opd_diagnoses_modal")
                })), listenHiddenBsModal("#add_opd_diagnoses_modal", (function () {
                    resetModalForm("#addOpdDiagnosisForm", "#opdDiagnosisErrorsBox"), $("#opdDiagnosisPreviewImage").attr("src", $("#showOpdDefaultDocumentImageUrl").val()), $("#opdDiagnosisPreviewImage").css("background-image", 'url("' + $("#showOpdDefaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#edit_opd_diagnoses_modal", (function () {
                    resetModalForm("#editOpdDiagnosisForm", "#editOpdDiagnosisErrorsBox"), $("#editOpdDiagnosisPreviewImage").attr("src", $("#showOpdDefaultDocumentImageUrl").val()), $("#editOpdDiagnosisPreviewImage").css("background-image", 'url("' + $("#showOpdDefaultDocumentImageUrl").val() + '")')
                })), listenChange("#opdDiagnosisDocumentImage", (function () {
                    var e = isValidDocumentOpdDiagnosis($(this), "#opdDiagnosisErrorsBox");
                    isEmpty(e) || 0 == e || ($("#opdDiagnosisErrorsBox").html("").hide(), displayDocument(this, "#opdDiagnosisPreviewImage", e))
                })), listenChange("#editOpdDiagnosisDocumentImage", (function () {
                    var e = isValidDocumentOpdDiagnosis($(this), "#editOpdDiagnosisErrorsBox");
                    isEmpty(e) || 0 == e || ($("#editOpdDiagnosisErrorsBox").html("").hide(), displayDocument(this, "#editOpdDiagnosisPreviewImage", e))
                })), window.isValidDocumentOpdDiagnosis = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html(Lang.get("messages.expense.document_error")).show(), !1) : a
                }, listenClick(".removeOpdDiagnosisImage", (function () {
                    defaultImagePreview("#opdDiagnosisPreviewImage")
                })), listenClick(".removeOpdDiagnosisImageEdit", (function () {
                    defaultImagePreview("#editOpdDiagnosisPreviewImage")
                }))
            },
            6789: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createOpdPatientForm").length && !$("#editOpdPatientDepartmentForm").length) return;
                    $("#opdPatientId, #opdDoctorId,#opdPaymentMode,#editOpdPatientId, #editOpdDoctorId,#editOpdPaymentMode").select2({
                        width: "100%"
                    }), $("#opdCaseId ,#editOpdCaseId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.case.case")
                    });
                    var e = $("#opdAppointmentDate,#editOpdAppointmentDate ").flatpickr({
                        enableTime: !0,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    });
                    $(".lastVisit").val() && ($("#opdPatientId,#editOpdPatientId").val($(".lastVisit").val()).trigger("change"), $("#opdPatientId,#editOpdPatientId").attr("disabled", !0));
                    $(".isEdit").val() ? ($("#opdPatientId,#editOpdPatientId").attr("disabled", !0), $("#opdPatientId,#editOpdPatientId").trigger("change"), e.set("minDate", $("#opdAppointmentDate,#editOpdAppointmentDate").val())) : (e.setDate(new Date), e.set("minDate", new Date))
                })), listenSubmit("#createOpdPatientForm, #editOpdPatientDepartmentForm", (function () {
                    $("#opdPatientId,#editOpdPatientId").attr("disabled", !1), $("#btnOpdSave,#btnEditOpdSave").attr("disabled", !0)
                })), listenChange("#opdPatientId,#editOpdPatientId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $(".opdPatientCasesUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? ($("#opdCaseId,#editOpdCaseId").empty(), $("#opdCaseId,#editOpdCaseId").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $(".patientCaseId").val() == t ? $("#editOpdCaseId").append($("<option></option>").attr("value", e).attr("selected", !0).text(t)) : $("#opdCaseId,#editOpdCaseId").append($("<option></option>").attr("value", e).text(t))
                            }))) : $("#opdCaseId,#editOpdCaseId").prop("disabled", !0)
                        }
                    }), $("#opdCaseId,#editOpdCaseId").empty(), $("#opdCaseId,#editOpdCaseId").prop("disabled", !0), $("#opdCaseId ,#editOpdCaseId").select2({
                        width: "100%",
                        placeholder: Lang.get("messages.common.choose") + " " + Lang.get("messages.case.case")
                    })
                })), listenChange("#opdDoctorId,#editOpdDoctorId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $(".doctorOpdChargeUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            0 !== e.data.length ? $("#opdStandardCharge,#editOpdStandardCharge").val(e.data[0].standard_charge) : $("#opdStandardCharge,#editOpdStandardCharge").val(0)
                        }
                    })
                }))
            },
            566: () => {
                listen("click", ".deleteOpdPatientBtn", (function (e) {
                    var t = $(".deleteOpdPatientBtn").attr("data-id");
                    deleteItem($("#indexOpdPatientUrl").val() + "/" + t, null, $("#Receptionist").val())
                }))
            },
            8681: () => {
                listen("click", ".delete-visit-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showOpdPatientUrl").val() + "/" + t, "", $("#opdPatients").val())
                }))
            },
            3592: () => {},
            3445: () => {},
            7465: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#showOpdListPatientDepartmentId").length) return;
                    e = $("#showOpdListPatientDepartmentId").val(), $.ajax({
                        url: $("#showOpdListTimelinesUrl").val(),
                        type: "get",
                        data: {
                            id: e
                        },
                        success: function (e) {
                            $("#opdTimelines").html(e)
                        }
                    });
                    var e
                }))
            },
            794: () => {},
            766: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#OPDtab").length) return;
                    var e = window.location.hash;
                    $('#OPDtab a[href="' + e + '"]').tab("show")
                })), listenClick("#OPDtab a", (function (e) {
                    e.preventDefault(), $(this).tab("show")
                })), $("ul.nav-tabs > li > a").on("shown.bs.tab", (function (e) {
                    var t = $(e.target).attr("href").substr(1);
                    window.location.hash = t
                }))
            },
            6315: () => {
                function e(e) {
                    $.ajax({
                        url: $("#showOpdTimelinesUrl").val(),
                        type: "get",
                        data: {
                            id: e
                        },
                        success: function (e) {
                            $("#opdPatientTimelines").html(e)
                        }
                    })
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#opdTimelineDate").length && !$("#editOpdTimelineDate").length) return;
                    e($("#opdPatientDepartmentId").val()), $("#opdTimelineDate, #editOPdTimelineDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val(),
                        minDate: moment($("#showOpdAppointmentDate").val()).format("YYYY-MM-DD")
                    })
                })), listenSubmit("#addOpdTimelineNewForm", (function (t) {
                    t.preventDefault();
                    var a = jQuery(this).find("#btnOpdTimelineSave");
                    a.button("loading");
                    var i = {
                        formSelector: $(this),
                        url: $("#showOpdTimelineCreateUrl").val(),
                        type: "POST",
                        tableSelector: "#tbl"
                    };
                    newRecord(i, a, "#addOpdTimelineModal"), a.attr("disabled", !1), $("#addOpdTimelineNewForm")[0].reset(), setTimeout((function () {
                        e($("#opdPatientDepartmentId").val())
                    }), 500)
                })), listenClick(".edit-OpdTimeline-btn", (function () {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var e = $(this).data("timeline-id");
                        renderOpdTimelineData(e)
                    }
                })), window.renderOpdTimelineData = function (e) {
                    $.ajax({
                        url: $("#showOpdTimelinesUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                if ("" != e.data.opd_timeline_document_url) {
                                    var t = e.data.opd_timeline_document_url.split(".").pop().toLowerCase();
                                    "pdf" == t ? $("#editOpdPreviewTimelineImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" == t || "doc" == t ? $("#editOpdPreviewTimelineImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : $("#editOpdPreviewTimelineImage").css("background-image", 'url("' + e.data.opd_timeline_document_url + '")'), $("#editOpdTimeDocumentUrl").show(), $(".btn-view").show()
                                } else $("#editOpdTimeDocumentUrl").hide(), $(".btn-view").hide(), $("#editOpdPreviewTimelineImage").css("background-image", 'url("' + $("#showOpdDefaultDocumentImageUrl").val() + '")');
                                $("#opdTimelineId").val(e.data.id), $("#editOPdTimelineTitle").val(e.data.title), document.querySelector("#editOPdTimelineDate")._flatpickr.setDate(moment(e.data.date).format()), $("#editOpdTimelineDescription").val(e.data.description), $("#editOpdTimeDocumentUrl").attr("href", e.data.opd_timeline_document_url), 1 == e.data.visible_to_person ? $("#editOpdTimelineVisibleToPerson").prop("checked", !0) : $("#editOpdTimelineVisibleToPerson").prop("checked", !1), $("#editOpdTimelineModal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editOpdTimelineForm", (function (t) {
                    t.preventDefault();
                    var a = jQuery(this).find("#btnOpdTimelineEdit");
                    a.button("loading");
                    var i = $("#opdTimelineId").val(),
                        n = $("#showOpdTimelinesUrl").val() + "/" + i,
                        r = {
                            formSelector: $(this),
                            url: n,
                            type: "POST",
                            tableSelector: "#tbl"
                        };
                    editRecord(r, a, "#editOpdTimelineModal"), setTimeout((function () {
                        e($("#opdPatientDepartmentId").val())
                    }), 500)
                })), listenClick(".delete-OpdTimeline-btn", (function () {
                    var t = $(this).data("timeline-id");
                    swal({
                        title: $(".deleteVariable").val(),
                        text: $(".confirmVariable").val() + $("#opdTimeline").val() + "?",
                        type: "warning",
                        icon: "warning",
                        showCancelButton: !0,
                        closeOnConfirm: !1,
                        confirmButtonColor: "#50cd89",
                        showLoaderOnConfirm: !0,
                        buttons: {
                            confirm: Lang.get("messages.common.yes"),
                            cancel: Lang.get("messages.common.no")
                        }
                    }).then((function (a) {
                        a && $.ajax({
                            url: $("#showOpdTimelinesUrl").val() + "/" + t,
                            type: "DELETE",
                            dataType: "json",
                            success: function (t) {
                                t.success && setTimeout((function () {
                                    e($("#opdPatientDepartmentId").val())
                                }), 500), swal({
                                    title: $(".deletedVariable").val(),
                                    text: $("#opdTimeline").val() + $(".hasBeenDeletedVariable").val(),
                                    icon: "success",
                                    confirmButtonColor: "#50cd89",
                                    timer: 2e3,
                                    buttons: {
                                        confirm: Lang.get("messages.common.ok")
                                    }
                                }), livewire.emit("refresh")
                            }
                        })
                    }))
                })), listenHiddenBsModal("#addOpdTimelineModal", (function () {
                    resetModalForm("#addOpdTimelineNewForm", "#timeLinevalidationErrorsBox"), $("#opdPreviewTimelineImage").attr("src", $(".defaultDocumentImageUrl").val()), $("#opdPreviewTimelineImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#editOpdTimelineModal", (function () {
                    resetModalForm("#editOpdTimelineForm", "#editTimelineValidationErrorsBox")
                })), window.isValidOpdTimelineDocument = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) ? ($(e).val(""), $(t).html(Lang.get("messages.expense.document_error")).show(), !1) : a
                }, listenClick(".removeOpdTimelineImage", (function () {
                    defaultImagePreview("#opdPreviewTimelineImage")
                })), listenClick(".removeOpdTimelineImageEdit", (function () {
                    defaultImagePreview("#editOpdPreviewTimelineImage")
                }))
            },
            6884: () => {
                "use strict";
                listenSubmit("#addOperationCatForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#operationCatSave");
                    t.button("loading"), $.ajax({
                        url: $("#operationCategoryCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_operation_categories_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#operationCatErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".operation-category-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#operationCategoryUrl").val() + "/" + t, "", $("#operationCategory").val())
                })), listenClick(".operation-category-edit-btn", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#operationCategoryUrl").val() + "/" + t + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#editOperationCategoryIdText").val(e.data.id), $("#editOperationCatName").val(e.data.name), $("#edit_operation_categories_modal").modal("show"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                })), listenSubmit("#editOperationCatForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editOperationCatSave");
                    t.button("loading");
                    var a = $("#editOperationCategoryIdText").val();
                    $.ajax({
                        url: $("#operationCategoryUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_operation_categories_modal").modal("hide"), $("#operationCategoryShowUrl").length ? window.location.href = $("#operationCategoryShowUrl").val() : livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_operation_categories_modal", (function () {
                    resetModalForm("#addOperationCatForm", "#operationCatErrorsBox"), $("#operationCategoryId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_operation_categories_modal", (function () {
                    resetModalForm("#editOperationCatForm", "#editOperationCatErrorsBox")
                }))
            },
            8284: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#editOperationReportForm").length) return;
                    $("#editOperationDoctorId, #editOperationCaseId").select2({
                        width: "100%"
                    }), $("#editOperationDate").flatpickr({
                        format: "YYYY-MM-DD HH:mm:ss",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenClick(".editOperationReportBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexOperationReportUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#operationReportId").val(e.data.id), $("#editOperationCaseId").val(e.data.case_id).trigger("change.select2"), $("#editOperationDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editOperationDescription").val(e.data.description), $("#editOperationDate").val(format(e.data.date, "YYYY-MM-DD HH:mm:ss")), $("#edit_operations_reports_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editOperationReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editOperationReportSave");
                    t.button("loading");
                    var a = $("#operationReportId").val();
                    $.ajax({
                        url: $("#indexOperationReportUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_operations_reports_modal").modal("hide"), setTimeout((function () {
                                window.location.reload()
                            }), 3e3))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                }))
            },
            9920: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#addOperationReportForm").length && !$("#editOperationReportForm").length) return;
                    $("#operationDoctorId, #operationCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#add_operations_reports_modal")
                    }), $("#editOperationDoctorId, #editOperationCaseId").select2({
                        width: "100%",
                        dropdownParent: $("#edit_operations_reports_modal")
                    }), $("#operationDate, #editOperationDate").flatpickr({
                        dateFormat: "Y-m-d h:i K",
                        useCurrent: !0,
                        sideBySide: !0,
                        enableTime: !0,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenSubmit("#addOperationReportForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#operationReportSave");
                    t.button("loading"), $.ajax({
                        url: $("#operationReportCreateUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_operations_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#operationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".editOperationReportsBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#operationReportUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#operationReportId").val(e.data.id), $("#editOperationCaseId").val(e.data.case_id).trigger("change.select2"), $("#editOperationDoctorId").val(e.data.doctor_id).trigger("change.select2"), $("#editOperationDescription").val(e.data.description), document.querySelector("#editOperationDate")._flatpickr.setDate(moment(e.data.date).format()), $("#edit_operations_reports_modal").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#editOperationReportsForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editOperationSave");
                    t.button("loading");
                    var a = $("#operationReportId").val();
                    $.ajax({
                        url: $("#operationReportUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_operations_reports_modal").modal("hide"), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_operations_reports_modal", (function () {
                    resetModalForm("#addOperationReportForm", "#OperationErrorsBox"), $("#operationCaseId, #operationDoctorId").val("").trigger("change.select2")
                })), listenHiddenBsModal("#edit_operations_reports_modal", (function () {
                    resetModalForm("#editOperationReportsForm", "#editOperationErrorsBox")
                }))
            },
            8369: () => {
                listenClick(".deleteOperationReportsBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#operationReportUrl").val() + "/" + t, "", $("#operationReport").val())
                }))
            },
            7439: () => {
                window.addEventListener("turbo:load", (function () {
                    if (!$("#operationCategoryId").length && !$("#editOperationCategoryId").length) return;
                    $("#operationCategoryId").select2({
                        dropdownParent: $("#add_operations_modal")
                    }), $("#editOperationCategoryId").select2({
                        dropdownParent: $("#edit_operations_modal")
                    })
                })), listenSubmit("#addOperationForm", (function (e) {
                    e.preventDefault();
                    var t = $(this).serialize();
                    $.ajax({
                        url: route("operations.store"),
                        type: "POST",
                        data: t,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#addOperationForm")[0].reset(), $("#add_operations_modal").modal("hide"), window.livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenHiddenBsModal("#add_operations_modal", (function () {
                    resetModalForm("#addOperationForm", "#operationErrorsBox"), $("#operationCategoryId").val("").trigger("change.select2")
                })), listenClick(".updateOperationBtn", (function () {
                    var e = $(this).data("id");
                    $.ajax({
                        url: $(".editOperationURL").val() + "/" + e,
                        type: "GET",
                        success: function (e) {
                            $("#editOperationID").val(e.data.id), $("#editOperationName").val(e.data.name), $("#editOperationCategoryId").val(e.data.operation_category_id).trigger("change.select2")
                        }
                    })
                })), listenSubmit("#editOperationForm", (function (e) {
                    e.preventDefault();
                    var t = $(this).serialize(),
                        a = $("#editOperationID").val();
                    $.ajax({
                        url: $(".editOperationURL").val() + "/" + a + "/update",
                        type: "POST",
                        data: t,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_operations_modal").modal("hide"), window.livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenClick(".deleteOperationBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".editOperationURL").val() + "/" + t, "", $(".operation").val())
                }))
            },
            7610: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".packageForm").length) return;
                    $(".packageForm").find("input:text:visible:first").focus();
                    var e = function (e) {
                            return e.replace(/,/g, "")
                        },
                        i = function (e, t) {
                            return e > 0 && t > 0 ? e * t : 0
                        };
                    a(".serviceId"), window.isNumberKey = function (e, t) {
                        var a = e.which ? e.which : event.keyCode;
                        return !((46 !== a || -1 !== $(t).val().indexOf(".")) && (a < 48 || a > 57))
                    }, listenKeyup(".packageQty", (function () {
                        var a = parseInt($(this).val()),
                            n = $(this).parent().siblings().find(".price").val();
                        n = parseInt(e(n));
                        var r = i(a, n);
                        $(this).parent().siblings(".amount").text(addCommas(r.toString())), t()
                    })), listenKeyup(".price", (function () {
                        var a = $(this).val();
                        a = parseInt(e(a));
                        var n = parseInt($(this).parent().siblings().find(".qty").val()),
                            r = i(n, a);
                        $(this).parent().siblings(".amount").text(addCommas(r.toString())), t()
                    })), listenKeyup("#packageDiscountId", (function () {
                        t()
                    }))
                })), uniquePackageId = $(".packageUniqueId").val(), listenClick("#addPackageItem", (function () {
                    var t = {
                            services: JSON.parse($(".associateServices").val()),
                            uniqueId: uniquePackageId
                        },
                        i = prepareTemplateRender("#packageServiceTemplate", t);
                    $(".package-service-item-container").append(i), a(".serviceId"), uniquePackageId++, e()
                })), listenClick(".delete-service-package-item", (function () {
                    $(this).parents("tr").remove(), e(), t()
                }));
                var e = function () {
                        var e = 1;
                        if ($(".package-service-item-container>tr").each((function () {
                                $(this).find(".item-number").text(e), e++
                            })), e - 1 == 0) {
                            var t = {
                                    services: JSON.parse($(".associateServices").val()),
                                    uniqueId: uniquePackageId
                                },
                                i = prepareTemplateRender("#packageServiceTemplate", t);
                            $(".package-service-item-container").append(i), a(".serviceId"), uniquePackageId++
                        }
                    },
                    t = function () {
                        var e = 0,
                            t = parseFloat("" !== $("#packageDiscountId").val() ? $("#packageDiscountId").val() : 0);
                        $(".package-service-item-container>tr").each((function () {
                            var t = $(this).find(".item-total").text();
                            t = removeCommas(t), t = isEmpty($.trim(t)) ? 0 : parseInt(t), e += t
                        })), e = parseFloat(e), e -= e * t / 100, $("#packageTotal").text($(".currentCurrency").val() + addCommas(e.toFixed(2))), $("#packageTotal_amount").val(e)
                    },
                    a = function (e) {
                        $(e).select2({
                            placeholder: "Select Service",
                            width: "100%"
                        })
                    };
                listenSubmit(".packageForm", (function (e) {
                    e.preventDefault(), $("#packageSaveBtn").attr("disabled", !0), jQuery(this).find("#packageSaveBtn").button("loading");
                    var t = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".packageSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: t,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), window.location.href = $(".packageUrl").val(), $("#packageSaveBtn").attr("disabled", !1)
                        },
                        error: function (e) {
                            printErrorMessage("#packageValidationErrorsBox", e), $("#packageSaveBtn").attr("disabled", !1)
                        }
                    })
                }))
            },
            2512: () => {
                "use strict";
                listenClick(".deletePackageBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showPackageReportUrl").val() + "/" + t, "", $("#Packages").val())
                }))
            },
            2280: () => {
                "use strict";
                listenSubmit("#addPathologyCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#pathologyCategorySave");
                    t.button("loading"), $.ajax({
                        url: $("#createPathologyCategoryURL").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_pathology_categories_modal").modal("hide"), window.livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#pCategoryErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editPathologyCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editPathologyCategorySave");
                    t.button("loading");
                    var a = $("#pathologyCategoryId").val();
                    $.ajax({
                        url: $("#pathologyCategoryURL").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_pathology_categories_modal").modal("hide"), window.livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_pathology_categories_modal", (function () {
                    resetModalForm("#addPathologyCategoryForm", "#pCategoryErrorsBox")
                })), listenHiddenBsModal("#edit_pathology_categories_modal", (function () {
                    resetModalForm("#editPathologyCategoryForm", "#editPCategoryErrorsBox")
                })), window.renderPathologyCategoriesData = function (e) {
                    $.ajax({
                        url: $("#pathologyCategoryURL").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#pathologyCategoryId").val(t.id), $("#editPathologyCategoryName").val(t.name), $("#edit_pathology_categories_modal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenClick(".editPathologyCategoryBtn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderPathologyCategoriesData(t)
                    }
                })), listenClick(".deletePathologyCategoryBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#pathologyCategoryURL").val() + "/" + t, "", $("#pathologyCategory").val())
                }))
            },
            7011: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPathologyTest").length && !$("#editPathologyTest").length) return;
                    $(".price-input").trigger("input"), $(".pathologyCategories,.pChargeCategories").select2({
                        width: "100%"
                    }), $("#createPathologyTest, #editPathologyTest").find("input:text:visible:first").focus()
                })), listenChange(".pChargeCategories", (function (e) {
                    var t, a = $(this).val();
                    "" !== a ? (t = a, $.ajax({
                        url: $(".pathologyTestActionURL").val() + "/get-standard-charge/" + t,
                        method: "get",
                        cache: !1,
                        success: function (e) {
                            "" !== e && ($(".pathologyStandardCharge").val(e.data), $(".price-input").trigger("input"))
                        }
                    })) : $(".pathologyStandardCharge").val("")
                }))
            },
            2745: () => {
                "use strict";
                listenClick(".deletePathologyTestBtn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#pathologyTestURL").val() + "/" + t, "", $("#pathologyTest").val())
                })), listenClick(".showPathologyTestBtn", (function (e) {
                    e.preventDefault();
                    var t = $(e.currentTarget).attr("data-id");
                    renderPathologyTestData(t)
                })), window.renderPathologyTestData = function (e) {
                    $.ajax({
                        url: $("#pathologyTestShowUrl").val() + "/" + e,
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#showPathologyTestName").text(e.data.test_name), $("#showPathologyTestShortName").text(e.data.short_name), $("#showPathologyTestType").text(e.data.test_type), $("#showPathologyCategories").text(e.data.pathology_category_name), $("#showPathologyTestUnit").text(e.data.unit), $("#showPathologyTestSubcategory").text(e.data.subcategory), $("#showPathologyTestMethod").text(e.data.method), $("#showPathologyTestReportDays").text(e.data.report_days), $("#showPathologyChargeCategories").text(e.data.charge_category_name), $("#showPTestStandardCharge").text(e.data.standard_charge), moment.locale($("#pathologyTestLanguage").val()), $("#showPathologyTestCreatedOn").text(moment(e.data.created_at).fromNow()), $("#showPathologyTestUpdatedOn").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showPathologyTest").appendTo("body").modal("show"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }
            },
            3906: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPatientAdmission").length && !$("#editPatientAdmission").length) return;
                    if ($("#admissionPatientId, #admissionDoctorId, #admissionPackageId, #admissionInsuranceId, #admissionBedId").select2({
                            width: "100%"
                        }), e = $("#admissionDate").flatpickr({
                            dateFormat: "Y-m-d H:i",
                            sideBySide: !0,
                            enableTime: !0,
                            locale: $(".userCurrentLanguage").val()
                        }), $("#admissionPatientId").focus(), $(".isEdit").val()) {
                        setTimeout((function () {
                            $("#admissionDate").trigger("dp.change")
                        }), 300);
                        var t = void 0,
                            a = $("#admissionPatientBirthDate").val();
                        $("#admissionDate").flatpickr({
                            dateFormat: "Y-m-d H:i",
                            sideBySide: !0,
                            enableTime: !0,
                            minDate: a,
                            locale: $(".userCurrentLanguage").val(),
                            onChange: function (e, a, i) {
                                var n = moment($("#admissionDate").val()).add(1, "days").format();
                                void 0 !== t && t.set("minDate", n)
                            }
                        }), t = $("#admissionDischargeDate").flatpickr({
                            dateFormat: "Y-m-d H:i",
                            sideBySide: !0,
                            minDate: i,
                            useCurrent: !1,
                            enableTime: !0,
                            locale: $(".userCurrentLanguage").val()
                        });
                        var i = moment($("#admissionDate").val()).add(1, "days").format();
                        t.set("minDate", i)
                    }
                }));
                var e = void 0;
                listenSubmit("#createPatientAdmission, #editPatientAdmission", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenChange("#admissionPatientId", (function (e) {
                    var t = $(this).val();
                    getPatientAdmissionDate(t)
                })), window.getPatientAdmissionDate = function (t) {
                    $.ajax({
                        url: $("#admissionPatientBirthUrl").val() + "/" + t,
                        method: "get",
                        cache: !1,
                        success: function (t) {
                            e.set("minDate", t.user.dob)
                        }
                    })
                }
            },
            5903: () => {
                listen("click", ".delete-patient-admission-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPatientAdmissionsUrl").val() + "/" + t, "", $("#patientAdmission").val())
                })), listenChange(".patientAdmissionStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updatePatientAdmissionStatus(t)
                })), listen("click", ".show-patient-admission-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    renderPatientAdmissionData(t)
                })), window.renderPatientAdmissionData = function (e) {
                    $.ajax({
                        url: $("#patientAdmissionsShowModal").val() + "/" + e,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                $("#showAdmissionPatient_name").text(e.data.patient.patient_user.full_name), $("#showAdmissionDoctor_name").text(e.data.doctor.doctor_user.full_name), $("#showAdmission_id").text(e.data.patient_admission_id), moment.locale($("#patientAdmissionDate").val()), $("#showAdmission_date").text(moment(e.data.admission_date).format("Do MMM, Y h:mm A")), null == e.data.discharge_date ? $("#showAdmissionDischarge_date").text(Lang.get("messages.common.n/a")) : $("#showAdmissionDischarge_date").text(moment(e.data.discharge_date).format("Do MMM, Y h:mm A")), $("#showAdmissionPackage").text(e.data.package ? e.data.package.name : Lang.get("messages.common.n/a")), $("#showAdmissionInsurance").text(e.data.insurance ? e.data.insurance.name : Lang.get("messages.common.n/a")), $("#showAdmission_bed").text(e.data.bed ? e.data.bed.name : Lang.get("messages.common.n/a")), $("#showAdmissionPolicy_no").text(e.data.policy_no), $("#showAdmissionAgent_name").text(e.data.agent_name), $("#showAdmissionGuardian_name").text(e.data.guardian_name), $("#showAdmissionGuardian_relation").text(e.data.guardian_relation), $("#showAdmissionGuardian_contact").text(e.data.guardian_contact), $("#showAdmissionGuardian_address").text(e.data.guardian_address), $("#showAdmissionPatient_status").empty();
                                var t = $("#patientAdmissionActive").val(),
                                    a = $("#patientAdmissionDeActive").val();
                                1 == e.data.status ? $("#showAdmissionPatient_status").append('<span class="badge bg-light-success">' + t + "</span>") : $("#showAdmissionPatient_status").append('<span class="badge bg-light-danger">' + a + "</span>"), $("#showAdmissionCreated_on").text(moment(e.data.created_at).fromNow()), $("#showAdmissionUpdated_on").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showPatientAdmission").appendTo("body").modal("show")
                            }
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }, listenChange("#patient_admission_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#patientAdmissionFilterBtn"), $(".dropdown-menu"))
                })), listenClick("#admissionResetFilter", (function () {
                    $("#patient_admission_filter_status").val(0).trigger("change"), hideDropdownManually($("#patientAdmissionFilterBtn"), $(".dropdown-menu"))
                })), window.updatePatientAdmissionStatus = function (e) {
                    $.ajax({
                        url: $("#indexPatientAdmissionsUrl").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }
            },
            5321: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPatientCaseForm").length && !$("#editPatientCaseForm").length) return;
                    $("#casePatientId, #caseDoctorId").select2({
                        width: "100%"
                    }), $("#caseDate").flatpickr({
                        enableTime: !0,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    }), $(".price-input").trigger("input")
                })), listenSubmit("#createPatientCaseForm, #editPatientCaseForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                }))
            },
            7336: () => {
                "use strict";
                listenClick(".delete-patient-case-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPatientCaseUrl").val() + "/" + t, "", Lang.get("messages.case.case"))
                })), listenClick("#caseResetFilter", (function () {
                    $("#caseHead").val(0).trigger("change"), hideDropdownManually($("#caseFilterBtn"), $(".dropdown-menu"))
                })), listenChange(".patientCaseStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    caseActiveDeActiveStatus(t)
                })), window.caseActiveDeActiveStatus = function (e) {
                    $.ajax({
                        url: $("#indexPatientCaseUrl").val() + "/" + e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), Livewire.emit("refresh"))
                        }
                    })
                }, listenClick(".show-patient-case-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    renderPatientCaseData(t)
                })), window.renderPatientCaseData = function (e) {
                    $.ajax({
                        url: $("#patientCaseShowModal").val() + "/" + e,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                console.log(e.data), $("#case_id").text(e.data.case_id), $("#patient_name").text(e.data.patient_name), $("#patient_phone").text(e.data.phone), $("#patient_doctor").text(e.data.doctor_name), moment.locale($("#caseLanguage").val()), $("#case_date").text(moment(e.data.date).format("Do MMM, Y h:mm A")), $("#case_fee").text(e.data.fee), $("#description").text(e.data.description), $("#patientStatus").empty();
                                var t = $("#patientCaseActive").val(),
                                    a = $("#patientCaseDeActive").val();
                                1 == e.data.status ? $("#patientStatus").append('<span class="badge bg-light-success">' + t + "</span>") : $("#patientStatus").append('<span class="badge bg-light-danger">' + a + "</span>"), $("#created_on").text(moment(e.data.created_at).fromNow()), $("#updated_on").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showPatientCase").appendTo("body").modal("show")
                            }
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }, listenChange("#caseHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            7495: () => {},
            9110: () => {
                function e() {
                    var e = 1;
                    $(".diagnosis-item-container>tr").each((function () {
                        $(this).find(".item-number").text(e), e++
                    }))
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#diagnosisTestPatientId").length && !$("#editDiagnosisTestPatientId").length) return;
                    $("#diagnosisTestPatientId,#diagnosisTestDoctorId,#diagnosisTestCategoryId").select2(), $("#editDiagnosisTestPatientId,#editDiagnosisTestDoctorId,#editDiagnosisTestCategoryId").select2()
                })), listenClick("#addDiagnosisTestItem,#addEditDiagnosisTestItem", (function () {
                    var t = $(".uniqueId").val(),
                        a = prepareTemplateRender("#patientDiagnosisTestTemplate", {
                            uniqueId: t
                        });
                    $(".diagnosis-item-container").append(a), t++, e()
                })), listenClick(".delete-diagnosis", (function () {
                    $(this).parents("tr").remove(), e()
                })), listenSubmit(".patientDiagnosisTestForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find(".saveBtn");
                    t.attr("disabled", !0);
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".patientDiagnosisTestSaveUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: a,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), setTimeout((function () {
                                window.location.href = $(".patientDiagnosisTest").val()
                            }), 2e3), t.attr("disabled", !1)
                        },
                        error: function (e) {
                            printErrorMessage("#diagnosisTestErrorsBox", e), t.attr("disabled", !1)
                        }
                    })
                }))
            },
            8343: () => {
                listenClick(".patient-diagnosys-test-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#patientDiagnosisTestUrl").val() + "/" + t, "", $("#patientDiagnosisTest").val())
                }))
            },
            1632: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#indexPatientPrescriptionId").length) return;
                    $("#patient_id,#filter_status").select2({
                        width: "100%"
                    })
                }))
            },
            6535: () => {
                "use strict";
                listenChange("#patients_prescription_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#patientPrescriptionResetFilter", (function () {
                    $("#patients_prescription_filter_status").val(2).trigger("change"), hideDropdownManually($("#patientsPrescriptionFilterBtn"), $(".dropdown-menu"))
                }))
            },
            7138: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPatientForm").length && !$("#editPatientForm").length) return;
                    $(".patientBirthDate").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listenKeyup(".patientFacebookUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup(".patientTwitterUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup(".patientInstagramUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup(".patientLinkedInUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenSubmit("#createPatientForm, #editPatientForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1;
                    var e = $(".patientFacebookUrl").val(),
                        t = $(".patientTwitterUrl").val(),
                        a = $(".patientInstagramUrl").val(),
                        i = $(".patientLinkedInUrl").val(),
                        n = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i),
                        r = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i),
                        s = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i),
                        o = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i);
                    return "" != e && !e.match(n) ? (displayErrorMessage(Lang.get("messages.user.validate_facebook_url")), !1) : "" != t && !t.match(r) ? (displayErrorMessage(Lang.get("messages.user.validate_twitter_url")), !1) : "" != a && !a.match(s) ? (displayErrorMessage(Lang.get("messages.user.validate_instagram_url")), !1) : "" == i || !!i.match(o) ? void 0 : (displayErrorMessage(Lang.get("messages.user.validate_linkedin_url")), !1)
                })), $("#createPatientForm, #editPatientForm").find("input:text:visible:first").focus(), listenClick(".remove-patient-image", (function () {
                    defaultImagePreview(".previewImage", 1)
                })), listenChange(".patientProfileImage", (function () {
                    var t = e($(this), "#patientErrorBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#patientErrorBox").removeClass("d-none hide"), $("#patientErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=patientErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#patientErrorBox").html("").hide(), displayDocument(this, "#patientErrorBox", t))
                })), listenChange(".editPatientImage", (function () {
                    var t = e($(this), "#editPatientErrorsBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#editPatientErrorsBox").removeClass("d-none hide"), $("#editPatientErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editPatientErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editPatientErrorsBox").html("").hide(), displayDocument(this, "#patientErrorBox", t))
                }))
            },
            6117: () => {
                listen("click", ".delete-patient-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPatientUrl").val() + "/" + t, "", $("#Patients").val())
                })), listenChange(".patientStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updatePatientStatus(t)
                })), window.updatePatientStatus = function (e) {
                    $.ajax({
                        url: $("#indexPatientUrl").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                }, listenChange("#patient_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenClick("#patientResetFilter", (function () {
                    $("#patient_filter_status").val(0).trigger("change"), hideDropdownManually($("#patientFilterBtn"), $(".dropdown-menu"))
                }))
            },
            364: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#showPatientUrl").length) return;
                    $("#editPatientPaymentDate").flatpickr({
                            dateFormat: "Y-m-d",
                            locale: $(".userCurrentLanguage").val()
                        }), $("#editAdvancedPaymentModal").on("shown.bs.modal", (function () {
                            $("#editPatientId:first").focus()
                        })), $("#editVaccinationDoesGivenDate").flatpickr({
                            enableTime: !0,
                            defaultDate: new Date,
                            locale: $(".userCurrentLanguage").val(),
                            dateFormat: "Y-m-d H:i"
                        }), listenShownBsModal("#editVaccinationModal", (function () {
                            $("#editPatientVaccinationName, #editVaccinationPatientName").select2({
                                width: "100%",
                                dropdownParent: $("#editVaccinationModal")
                            })
                        })),
                        function () {
                            if (!$("#showPatientUrl").length) return;
                            listen("click", ".layout-delete-btn", (function (e) {
                                $(this);
                                var t = $(e.currentTarget).attr("data-id"),
                                    a = $(this).data("url"),
                                    i = $(this).data("message");
                                deleteItem(a + "/" + t, "", i)
                            }))
                        }()
                })), listen("click", ".edit-advancedPayment-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderPatientListingData(t)
                    }
                })), window.renderPatientListingData = function (e) {
                    $.ajax({
                        url: $("#showPatientAdvancedPaymentUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#patientAdvancePaymentId").val(e.data.id), $("#editPatientPaymentId").val(e.data.patient_id).trigger("change.select2"), $("#editPatientPaymentReceiptNo").val(e.data.receipt_no), $("#editPatientPaymentAmount").val(e.data.amount), $(".price-input").trigger("input"), document.querySelector("#editPatientPaymentDate")._flatpickr.setDate(moment(e.data.date).format()), $("#editAdvancedPaymentModal").modal("show"), ajaxCallCompleted())
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editAdvancedPaymentForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editPatientPaymentSave");
                    t.button("loading");
                    var a = $("#patientAdvancePaymentId").val();
                    $.ajax({
                        url: $("#showPatientAdvancedPaymentUrl").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#editAdvancedPaymentModal").modal("hide"), location.reload())
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#editAdvancedPaymentModal", (function () {
                    resetModalForm("#editAdvancedPaymentForm", "#editPatientPaymentErrorsBox")
                })), listen("click", ".edit-vaccination-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderVaccinationData(t)
                    }
                })), window.renderVaccinationData = function (e) {
                    $.ajax({
                        url: $("#showVaccinatedPatientUrl").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#vaccinatedPatientId").val(t.id), $("#editVaccinationPatientName").val(t.patient_id).trigger("change.select2"), $("#editPatientVaccinationName").val(t.vaccination_id).trigger("change.select2"), $("#editVaccinationSerialNo").val(t.vaccination_serial_number), $("#editVaccinationDoseNumber").val(t.dose_number), document.querySelector("#editVaccinationDoesGivenDate")._flatpickr.setDate(moment(t.dose_given_date).format()), $("#editVaccinationDescription").val(t.description), $("#editVaccinationModal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#editVaccinationForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editVaccinationSave");
                    t.button("loading");
                    var a = $("#vaccinatedPatientId").val();
                    $.ajax({
                        url: $("#showVaccinatedPatientUrl").val() + "/" + a + "/update",
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#editVaccinationModal").modal("hide"), location.reload())
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#editVaccinationModal", (function () {
                    resetModalForm("#editVaccinationForm", "#editPatientVaccinationErrorsBox1")
                }))
            },
            2899: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#filterPaymentAccount").length) return;
                    $("#filterPaymentAccount").select2({
                        width: "100%"
                    })
                })), listenChange("#filterPaymentReport", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listen("click", "#paymentReportResetFilter", (function () {
                    $("#filterPaymentReport").val(0).trigger("change"), hideDropdownManually($("#paymentReportFilterBtn"), $(".dropdown-menu"))
                }))
            },
            1667: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#paymentDate").length) return;
                    $("#paymentDate").flatpickr({
                        dateFormat: "Y-m-d",
                        locale: $(".userCurrentLanguage").val()
                    }), $(".price-input").trigger("input")
                }))
            },
            2841: () => {
                listen("click", ".delete-payment-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPaymentUrl").val() + "/" + t, "", $("#Payment").val())
                })), listen("click", ".show-payment-btn", (function (e) {
                    e.preventDefault();
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#paymentShowModal").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#payment_account").text(e.data.account.name), $("#payment_date").text(moment(e.data.payment_date).format("Do MMM, YYYY")), $("#pay_to").text(e.data.pay_to), $("#payment_amount").text(e.data.amount), $("#created_on").text(moment(e.data.created_at).fromNow()), $("#updated_on").text(moment(e.data.updated_at).fromNow()), $("#description").text(e.data.description), $("#description").css("overflow-wrap", "break-word"), setValueOfEmptySpan(), $("#showPayment").appendTo("body").modal("show"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }))
            },
            3314: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createPharmacistForm").length && !$("#editPharmacistForm").length) return;
                    $(".pharmacistBloodGroup").select2({
                        width: "100%"
                    }), $(".pharmacistBirthDate").flatpickr({
                        dateFormat: "Y-m-d",
                        useCurrent: false,
                        locale: $(".userCurrentLanguage").val()
                    }).set("maxDate", new Date), $(".departmentId").length && $(".departmentId").select2({
                        width: "100%"
                    });
                    $("#createPharmacistForm, #editPharmacistForm").find("input:text:visible:first").focus()
                })), listenSubmit("#createPharmacistForm, #editPharmacistForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenClick(".remove-pharmacist-image", (function () {
                    defaultImagePreview(".previewImage", 1)
                })), listenChange(".pharmacistProfileImage", (function () {
                    var t = e($(this), "#pharmacistsErrorBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#pharmacistsErrorBox").removeClass("d-none hide"), $("#pharmacistsErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=pharmacistsErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#pharmacistsErrorBox").html("").hide(), displayDocument(this, "#pharmacistsErrorBox", t))
                })), listenChange(".editPharmacistProfileImage", (function () {
                    var t = e($(this), "#editPharmacistErrorBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#editPharmacistErrorBox").removeClass("d-none hide"), $("#editPharmacistErrorBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editPharmacistErrorBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editPharmacistErrorBox").html("").hide(), displayDocument(this, "#pharmacistsErrorBox", t))
                }))
            },
            6935: () => {
                listen("click", ".delete-pharmacist-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPharmacistUrl").val() + "/" + t, "", $("#Pharmacist").val())
                })), listen("change", ".pharmacistStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updatePharmacistsStatus(t)
                })), listen("click", "#pharmacistResetFilter", (function () {
                    $("#pharmacist_filter_status").val(0).trigger("change"), hideDropdownManually($("#pharmacistFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#pharmacist_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), window.updatePharmacistsStatus = function (e) {
                    $.ajax({
                        url: $("#indexPharmacistUrl").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                }
            },
            9886: () => {},
            8433: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".editPostalDate").length) return;
                    $(".date, .editPostalDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !0,
                        sideBySide: !0,
                        locale: $(".userCurrentLanguage").val()
                    }), e = $(".editPostalDate").flatpickr({
                        format: "YYYY-MM-DD",
                        useCurrent: !1,
                        sideBySide: !1,
                        locale: $(".userCurrentLanguage").val()
                    })
                }));
                var e;
                $(".add_modal").val(), $(".edit_modal").val();
                listenSubmit(".addPostalForm", (function (e) {
                    e.preventDefault(), $(".btnPostalSave").attr("disabled", !0);
                    var t = jQuery(this).find(".btnPostalSave");
                    t.button("loading");
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $(".postalCreateUrl").val(),
                        type: "POST",
                        data: a,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), ($("#add_postal_receives_modal").length || $("#edit_postal_receives_modal").length) && $("#add_postal_receives_modal,#edit_postal_receives_modal").modal("hide"), ($("#add_postal_dispatch_modal").length || $("#edit_postal_dispatch_modal").length) && $("#add_postal_dispatch_modal,#edit_postal_dispatch_modal").modal("hide"), Livewire.emit("refresh"), setTimeout((function () {
                                $(".btnPostalSave").attr("disabled", !1), t.button("reset")
                            }), 1e3))
                        },
                        error: function (e) {
                            printErrorMessage(".validationErrorsBox", e), setTimeout((function () {
                                $(".btnPostalSave").attr("disabled", !1), t.button("reset")
                            }), 1e3)
                        }
                    })
                })), listenClick(".delete-postal-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".postalUrl").val() + "/" + t, "", $(".name").val())
                })), listenClick(".edit-postal-btn", (function (t) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var a, i = t.currentTarget.dataset.id;
                        a = i, $.ajax({
                            url: $(".postalUrl").val() + "/" + a + "/edit",
                            type: "GET",
                            success: function (t) {
                                if (t.success) {
                                    if ("" != t.data.document_url) {
                                        var a = t.data.document_url.split(".").pop().toLowerCase();
                                        "pdf" === a ? $(".editPreviewImage").css("background-image", 'url("' + $(".pdfDocumentImageUrl").val() + '")') : "docx" === a || "doc" === a ? $(".editPreviewImage").css("background-image", 'url("' + $(".docxDocumentImageUrl").val() + '")') : "" === a ? $(".editPreviewImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")') : $(".editPreviewImage").css("background-image", 'url("' + t.data.document_url + '")')
                                    }
                                    $($(".hiddenId").val()).val(t.data.id), $(".editFromTitle").val(t.data.from_title), e.setDate(format(t.data.date, "YYYY-MM-DD")), $(".editReferenceNumber").val(t.data.reference_no), $(".editToTitle").val(t.data.to_title), $(".editAddress").val(t.data.address), isEmpty(t.data.document_url) ? $(".edit-attachment").addClass("d-none") : $(".documentUrl").attr("href", t.data.document_url), $("#edit_postal_receives_modal").length && $("#edit_postal_receives_modal").modal("show"), $("#edit_postal_dispatch_modal").length && $("#edit_postal_dispatch_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit(".editPostalForm", (function (e) {
                    e.preventDefault(), $(".btnEditSave").attr("disabled", !0);
                    var t = jQuery(this).find(".btnEditSave");
                    if (t.button("loading"), 1 == $(".isPostal").val() && 0 === $(".editFromTitle").val().trim().length) return displayErrorMessage(Lang.get("messages.postal.validate_from_title")), $(".btnEditSave").attr("disabled", !1), !1;
                    if (2 == $(".isPostal").val() && 0 === $(".editToTitle").val().trim().length) return displayErrorMessage(Lang.get("messages.postal.validate_to_title")), $(".btnEditSave").attr("disabled", !1), !1;
                    var a = $($(".hiddenId").val()).val(),
                        i = $(".postalUrl").val() + "/" + a,
                        n = {
                            formSelector: $(this),
                            url: i,
                            type: "post",
                            tableSelector: $(".tableName").val()
                        };
                    editRecord(n, t), $("#edit_postal_receives_modal").length && $("#edit_postal_receives_modal").modal("hide"), $("#edit_postal_dispatch_modal").length && $("#edit_postal_dispatch_modal").modal("hide"), $(".btnEditSave").attr("disabled", !1)
                })), listenChange(".postalAttachment", (function () {
                    var e = function (e, t) {
                        var a = $(e).val().split(".").pop().toLowerCase();
                        if (-1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])) return $(e).val(""), $(t).html($(".documentError").val()).removeClass("hide"), $(t).removeAttr("style"), !1;
                        return $(t).html($(".documentError").val()).addClass("hide"), a
                    }($(this), ".validationErrorsBox");
                    isEmpty(e) || 0 == e || ($(".validationErrorsBox").html("").hide(), displayDocument(this, ".previewImage", e))
                })), listenClick(".remove-postal-image", (function () {
                    defaultImagePreview(".previewImage")
                })), listenClick(".remove-postal-image-edit", (function () {
                    defaultImagePreview(".editPreviewImage")
                })), listenHiddenBsModal("#add_postal_dispatch_modal", (function () {
                    resetModalForm("#addDispatchForm", ".validationErrorsBox"), $(".previewImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#edit_postal_dispatch_modal", (function () {
                    resetModalForm("#editDispatchForm", ".editValidationErrorsBox1"), $(".editPreviewImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#add_postal_receives_modal", (function () {
                    resetModalForm("#addReceiveForm", ".validationErrorsBox"), $(".previewImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                })), listenHiddenBsModal("#edit_postal_receives_modal", (function () {
                    resetModalForm("#editReceiveForm", ".editValidationErrorsBox1"), $(".editPreviewImage").css("background-image", 'url("' + $(".defaultDocumentImageUrl").val() + '")')
                }))
            },
            9425: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#prescriptionPatientId").length && !$("#editPrescriptionPatientId").length) return;
                    $("#prescriptionPatientId,#editPrescriptionPatientId,#filter_status,#prescriptionDoctorId,#editPrescriptionDoctorId,#prescriptionTime,#prescriptionMedicineCategoryId,#prescriptionMedicineBrandId,.prescriptionMedicineId,.prescriptionMedicineMealId,#editPrescriptionTime,.prescriptionMedicineDurationId,.prescriptionMedicineIntervalId").select2({
                        width: "100%"
                    }), $("#prescriptionMedicineBrandId, #prescriptionMedicineBrandId").select2({
                        width: "100%",
                        dropdownParent: $("#add_new_medicine")
                    }), $("#prescriptionPatientId").first().focus()
                })), uniquePrescriptionId = $("#prescriptionUniqueId").val(), listenSubmit("#createPrescription, #editPrescription", (function () {
                    $(".btnPrescriptionSave").attr("disabled", !0)
                })), listenSubmit("#createMedicineFromPrescription", (function (e) {
                    e.preventDefault(), $.ajax({
                        url: $("#createMedicineFromPrescriptionPost").val(),
                        method: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            $(".medicineTable").load(location.href + " .medicineTable", (function () {
                                $(".prescriptionMedicineId").select2()
                            })), displaySuccessMessage(e.message), $("#add_new_medicine").modal("hide")
                        },
                        error: function (e) {
                            printErrorMessage("#medicinePrescriptionErrorBox", e)
                        }
                    })
                }));
                var e = function (e) {
                    $(e).select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%"
                    })
                };
                listenHiddenBsModal("#add_new_medicine", (function () {
                    resetModalForm("#createMedicineFromPrescription", "#medicinePrescriptionErrorBox")
                })), listenClick(".delete-prescription-medicine-item", (function () {
                    $(this).parents("tr").remove()
                })), listenClick(".add-medicine-btn", (function () {
                    var t = {
                            medicines: JSON.parse($(".associatePrescriptionMedicines").val()),
                            meals: JSON.parse($(".associatePrescriptionMeals").val()),
                            doseDuration: JSON.parse($(".associatePrescriptionDurations").val()),
                            doseInterval: JSON.parse($(".associatePrescriptionIntervals").val()),
                            uniqueId: uniquePrescriptionId
                        },
                        a = prepareTemplateRender("#prescriptionMedicineTemplate", t);
                    $(".prescription-medicine-container").append(a), e(".prescriptionMedicineId"), e(".prescriptionMedicineMealId"), e(".prescriptionMedicineDurationId"), e(".prescriptionMedicineIntervalId"), uniquePrescriptionId++, $("#prescriptionUniqueId").val(uniquePrescriptionId)
                }))
            },
            5462: () => {
                listenClick(".delete-prescription-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexPrescriptionUrl").val() + "/" + t, "", $("#Prescription").val())
                })), listenChange(".prescriptionStatus", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexPrescriptionUrl").val() + "/" + +t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), hideDropdownManually($("#prescriptionFilterBtn"), $("#prescriptionFilter")))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listenClick("#prescriptionResetFilter", (function () {
                    $("#prescriptionHead").val("2").trigger("change"), hideDropdownManually($("#prescriptionFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#prescriptionHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            5919: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#purchaseUniqueId").length) return;
                    $(".purchaseMedicineExpiryDate").flatpickr({
                        minDate: new Date,
                        dateFormat: "Y-m-d"
                    }), $("#paymentMode").select2({
                        width: "100%"
                    })
                }));
                var e = "";
                listenClick(".add-medicine-btn-purchase", (function () {
                    e = $("#purchaseUniqueId").val();
                    var a = {
                            medicines: JSON.parse($(".associatePurchaseMedicines").val()),
                            uniqueId: e
                        },
                        i = prepareTemplateRender("#purchaseMedicineTemplate", a);
                    $(".prescription-medicine-container").append(i), t(".purchaseMedicineId"), $(".purchaseMedicineExpiryDate").flatpickr({
                        minDate: new Date,
                        dateFormat: "Y-m-d"
                    }), e++, $("#purchaseUniqueId").val(e)
                }));
                var t = function (e) {
                    $(e).select2({
                        placeholder: Lang.get("messages.medicine_bills.select_medicine"),
                        width: "100%"
                    })
                };
                listenChange(".purchaseMedicineId", (function () {
                    var e = $(this).val(),
                        t = $(this).attr("data-id"),
                        a = "#sale_price" + t,
                        i = "#purchase_price" + t;
                    if ("" == e) return $(a).val("0.00"), $(i).val("0.00"), !1;
                    $.ajax({
                        type: "get",
                        url: route("get-medicine", e),
                        success: function (e) {
                            $(a).val(e.data.selling_price.toFixed(2)), $(i).val(e.data.buying_price.toFixed(2))
                        }
                    })
                })), listenKeyup(".purchase-quantity,.purchase-price,purchase-quantity,.purchase-tax,.purchase-discount", (function () {
                    var e = $(this).val();
                    $(this).val(e.replace(/[^0-9\.]/g, ""));
                    var t = $(this).closest("tr"),
                        a = t.find(".purchase-quantity").val(),
                        i = t.find(".purchase-price").val(),
                        n = parseFloat(i * a);
                    t.find(".purchase-amount").val(n.toFixed(2));
                    for (var r = $(".purchase-tax"), s = $(".purchase-amount"), o = 0, d = 0, l = 0, c = 0, u = 0; u < s.length; u++)
                        if (o += parseFloat(s[u].value), c = $(".purchase-discount").val(), 0 != r[u].value && "" != r[u].value) {
                            if (r[u].value > 99) {
                                var m = r[u].value.slice(0, -1);
                                return t.find(".purchase-tax").val(m), displayErrorMessage(Lang.get("messages.medicine_bills.validate_tax")), $("#discountAmount").val(c), !1
                            }
                            d += s[u].value * r[u].value / 100
                        } else parseFloat(s[u].value);
                    if (c = "" == c ? 0 : c, l = parseFloat(o) + parseFloat(d), l = parseFloat(l) - parseFloat(c), c > o && $(this).hasClass("purchase-discount")) return c = c.slice(0, -1), displayErrorMessage(Lang.get("messages.medicine_bills.validate_discount")), $("#discountAmount").val(c), !1;
                    c > o && (l = 0), $("#total").val(o.toFixed(2)), $("#purchaseTaxId").val(d.toFixed(2)), $("#netAmount").val(l.toFixed(2))
                })), listenClick(".delete-purchase-medicine-item", (function () {
                    var e = $(this).closest("tr"),
                        t = e.find(".purchase-amount").val(),
                        a = e.find(".purchase-tax").val(),
                        i = parseFloat(t) * parseFloat(a / 100),
                        n = parseFloat($("#purchaseTaxId").val()) - parseFloat(i);
                    $("#purchaseTaxId").val(n.toFixed(2));
                    var r = parseFloat($("#total").val()) - parseFloat(t);
                    $("#total").val(r.toFixed(2));
                    var s = parseFloat(i) + parseFloat(t),
                        o = parseFloat($("#netAmount").val()) - parseFloat(s);
                    $("#netAmount").val(o.toFixed(2)), $(this).parents("tr").remove()
                })), listenSubmit("#purchaseMedicineFormId", (function (e) {
                    e.preventDefault();
                    for (var t = $("#purchaseUniqueId").val() - 1, a = 1, i = 1; i <= t; i++) {
                        var n = "#medicineChooseId" + i,
                            r = "tax" + i;
                        if (void 0 !== $(r).val() && (null != $(r).val() && "" != $(r).val() || (a = 0)), void 0 !== $(n).val() && (null == $(n).val() || "" == $(n).val())) return displayErrorMessage(Lang.get("messages.medicine_bills.select_medicine")), !1;
                        var s = "#lot_no" + i;
                        if (void 0 !== $(s).val() && (null == $(s).val() || "" == $(s).val())) return displayErrorMessage(Lang.get("messages.medicine_bills.lot_number")), !1;
                        var o = "#sale_price" + i;
                        if (void 0 !== $(o).val() && (null == $(o).val() || "" == $(o).val())) return displayErrorMessage(Lang.get("messages.medicine_bills.sale_price")), !1;
                        var d = "#purchase_price" + i;
                        if (void 0 !== $(d).val()) {
                            if (null == $(d).val() || "" == $(d).val()) return displayErrorMessage(Lang.get("messages.medicine_bills.purchase_price")), !1;
                            if (0 == $(d).val()) return displayErrorMessage(Lang.get("messages.medicine_bills.validate_quantity")), !1
                        }
                        var l = "#quantity" + i;
                        if (void 0 !== $(l).val()) {
                            if (null == $(l).val() || "" == $(l).val()) return displayErrorMessage(Lang.get("messages.medicine_bills.quantity_required")), !1;
                            if (0 == $(l).val()) return displayErrorMessage(Lang.get("messages.medicine_bills.validate_quantity")), !1
                        }
                    }
                    var c = "#netAmount";
                    return null == $(c).val() || "" == $(c).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_empty")), !1) : 0 == $(c).val() ? (displayErrorMessage(Lang.get("messages.medicine_bills.net_amount_not_zero")), !1) : 0 != a || null != $("#purchaseTaxId").val() && "" != $("#purchaseTaxId").val() ? void $(this)[0].submit() : (displayErrorMessage(Lang.get("messages.medicine_bills.tax_amount_not_zero_or_empty")), !1)
                })), listenClick(".purchaseMedicineDelete", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem(route("medicine-purchase.destroy", t), "", Lang.get("messages.purchase_medicine.purchase_medicine"))
                }))
            },
            7448: () => {
                listenSubmit("#addRadiologyCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnRadiologyCategorySave");
                    t.button("loading"), $.ajax({
                        url: $("#createRadiologyCategoryURL").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_radiology_categories_modal").modal("hide"), $("#radiologyCategoryTable").DataTable().ajax.reload(null, !0), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#rcvalidationErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editRadiologyCategoryForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnRadiologyCategoryEditSave");
                    t.button("loading");
                    var a = $("#radiologyCategoryId").val();
                    $.ajax({
                        url: $("#radiologyCategoryURL").val() + "/" + a,
                        type: "patch",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_radiology_categories_modal").modal("hide"), $("#radiologyCategoryTable").DataTable().ajax.reload(null, !0), Livewire.emit("refresh"))
                        },
                        error: function (e) {
                            UnprocessableInputError(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_radiology_categories_modal", (function () {
                    resetModalForm("#addRadiologyCategoryForm", "#rcvalidationErrorsBox")
                })), listenHiddenBsModal("#edit_radiology_categories_modal", (function () {
                    resetModalForm("#editRadiologyCategoryForm", "#editRCValidationErrorsBox")
                })), listenClick(".edit-radiology-category-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#radiologyCategoryURL").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#radiologyCategoryId").val(t.id), $("#editRadiologyCategoryName").val(t.name), $("#edit_radiology_categories_modal").modal("show"), ajaxCallCompleted(), Livewire.emit("refresh")
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenClick(".delete-radiology-category-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#radiologyCategoryURL").val() + "/" + t, "", $("#radiologyCategory").val())
                }))
            },
            6219: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".radiologyTestActionURL").length) return;
                    $(".price-input").trigger("input"), $(".radiologyCategories,.chargeCategories,#editChargeCategories").select2({
                        width: "100%"
                    }), $("#createRadiologyTest, #editRadiologyTest").find("input:text:visible:first").focus()
                })), window.radiologyTestGetStandardCharge = function (e) {
                    $.ajax({
                        url: route("radiology.test.charge", e),
                        method: "get",
                        cache: !1,
                        success: function (e) {
                            console.log(e.data), "" !== e.data && ("" !== e.data ? ($("#chargeCode").empty(), $("#chargeCode").removeAttr("disabled"), $("#chargeCode").append($("<option></option>").text(Lang.get("messages.common.choose") + " " + Lang.get("messages.bed.charge"))), $.each(e.data, (function (e, t) {
                                $("#chargeCode").append($("<option></option>").attr("value", e).text(t))
                            }))) : $("#chargeCode").append($("<option></option>").text(Lang.get("messages.common.choose") + " " + Lang.get("messages.bed.charge"))))
                        }
                    })
                }, listenChange(".chargeCategories", (function (e) {
                    var t = $(this).val();
                    "" !== t ? radiologyTestGetStandardCharge(t) : $(".rtStandardCharge").val("")
                })), $("#createRadiologyTest, #editRadiologyTest").find("input:text:visible:first").focus(), listen("change", ".charge-category", (function (e) {
                    var t = $(this).val();
                    "" !== t ? getRadiologyChargeCode(t) : $("#chargeCode").empty(), $("#chargeCode").attr("disabled", !0), $("#chargeCode").append($("<option></option>").text(Lang.get("messages.common.choose") + " " + Lang.get("messages.bed.charge"))), $(".rtStandardCharge").val("")
                })), window.getRadiologyChargeCode = function (e) {
                    $.ajax({
                        url: route("radiology.test.charge", e),
                        method: "get",
                        cache: !1,
                        success: function (e) {
                            "" !== e.data ? ($("#chargeCode").empty(), $("#chargeCode").removeAttr("disabled"), $("#chargeCode").append($("<option></option>").text(Lang.get("messages.common.choose") + " " + Lang.get("messages.bed.charge"))), $.each(e.data, (function (e, t) {
                                $("#chargeCode").append($("<option></option>").attr("value", e).text(t))
                            }))) : $("#chargeCode").append($("<option></option>").text(Lang.get("messages.common.choose") + " " + Lang.get("messages.bed.charge")))
                        }
                    })
                }, listen("change", ".charge-code", (function (e) {
                    var t = $(this).val();
                    "" !== t ? getRadiologyStandardCharge(t) : $(".rd-test-standard-charge").val("")
                })), window.getRadiologyStandardCharge = function (e) {
                    $.ajax({
                        url: route("radiology.test.charge.code", e),
                        method: "get",
                        cache: !1,
                        success: function (e) {
                            "" !== e && $(".rtStandardCharge").val(e.data)
                        }
                    })
                }
            },
            3390: () => {
                listenClick(".delete-radiology-test-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#radiologyTestURL").val() + "/" + t, "", $("#radiologyTest").val())
                })), listenClick(".show-radiology-test-btn", (function (e) {
                    e.preventDefault();
                    var t = $(this).attr("data-id");
                    radiologyTestRenderData(t)
                })), window.radiologyTestRenderData = function (e) {
                    $.ajax({
                        url: $("#radiologyTestShowModal").val() + "/" + e,
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#showRtTest_name").text(e.data.test_name), $("#showRtShort_name").text(e.data.short_name), $("#showRtTest_type").text(e.data.test_type), $("#showRadiologyCategories").text(e.data.radiology_category_name), $("#showRtSubcategory").text(e.data.subcategory), $("#showRtReport_days").text(e.data.report_days), $("#showCharge_categories").text(e.data.charge_category_name), $("#showRtStandard_charge").text(e.data.standard_charge), moment.locale($("#radiologyTestLanguage").val()), $("#showRtCreated_on").text(moment(e.data.created_at).fromNow()), $("#showRtUpdated_on").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showRadiologyTest").appendTo("body").modal("show"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                }
            },
            3184: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    (function () {
                        if (!$("#receptionistBirthDate").length) return;
                        $("#receptionistBirthDate").flatpickr({
                            format: "YYYY-MM-DD",
                            useCurrent: !0,
                            sideBySide: !0,
                            maxDate: new Date,
                            locale: $(".userCurrentLanguage").val()
                        }), $("#receptionistBloodGroup").select2({
                            width: "100%"
                        }), $("#receptionistDepartmentId").select2({
                            width: "100%"
                        }), $("#createReceptionForm").find("input:text:visible:first").focus()
                    })(),
                    function () {
                        if (!$("#editReceptionistBirthDate").length) return;
                        $("#editReceptionistBirthDate").flatpickr({
                            format: "YYYY-MM-DD",
                            useCurrent: !0,
                            sideBySide: !0,
                            maxDate: new Date,
                            locale: $(".userCurrentLanguage").val()
                        }), $("#editReceptionistBloodGroup").select2({
                            width: "100%"
                        }), $("#editReceptionForm").find("input:text:visible:first").focus()
                    }()
                })), listenSubmit("#createReceptionForm, #editReceptionForm", (function () {
                    if ("" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1
                })), listenClick(".remove-receptionist-image", (function () {
                    defaultImagePreview("#receptionistPreviewImage", 1)
                })), listenChange(".receptionistProfileImage", (function () {
                    var t = e($(this), "#receptionistErrorsBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#receptionistErrorsBox").removeClass("d-none hide"), $("#receptionistErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=receptionistErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#receptionistErrorsBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                })), listenChange(".editReceptionistProfileImage", (function () {
                    var t = e($(this), "#editReceptionistErrorsBox");
                    console.log(t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#editReceptionistErrorsBox").removeClass("d-none hide"), $("#editReceptionistErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=editReceptionistErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#editReceptionistErrorsBox").html("").hide(), displayDocument(this, "#customValidationErrorsBox", t))
                }))
            },
            7201: () => {
                "use strict";
                window.updateReceptionistStatus = function (e) {
                    $.ajax({
                        url: $("#receptionistUrl").val() + "/" + +e + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && displaySuccessMessage(e.message)
                        }
                    })
                }, listenClick(".delete-receptionist-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#receptionistUrl").val() + "/" + t, "#receptionistsTbl", $("#Receptionist").val())
                })), listenChange(".receptionistStatus", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    updateReceptionistStatus(t)
                })), listenChange("#receptionist_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listen("click", "#receptionistResetFilter", (function () {
                    $("#receptionist_filter_status").val(0).trigger("change"), hideDropdownManually($("#receptionistsFilterBtn"), $(".dropdown-menu"))
                }))
            },
            6224: () => {},
            383: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".scheduleForm").length) return;
                    $("#doctorId, #serialVisibilityId").select2({
                        width: "100%"
                    }), $(".perPatientTime").flatpickr({
                        enableTime: !0,
                        noCalendar: !0,
                        enableSeconds: !0,
                        dateFormat: "H:i:S",
                        time_24hr: !0,
                        locale: $(".userCurrentLanguage").val()
                    });
                    var e = [],
                        t = [];
                    $.each(JSON.parse($(".hospitalSchedule").val()), (function (a, i) {
                        e[a] = parseInt(i.day_of_week), t[i.day_of_week] = [i.start_time, i.end_time]
                    }));
                    var a = 0;
                    $(".perPatientTime").val();
                    for (; a <= 7; a++) - 1 !== $.inArray(a, e) ? (e.sort(), $(".cpy-btn" + (e[0] - 1)).hide(), $(".hospitalScheduleFrom-" + a).flatpickr({
                        enableTime: !0,
                        noCalendar: !0,
                        enableSeconds: !0,
                        dateFormat: "H:i:S",
                        time_24hr: !0,
                        minTime: t[a][0]
                    }), hospitalToSchedule = $(".hospitalScheduleTo-" + a).flatpickr({
                        enableTime: !0,
                        noCalendar: !0,
                        enableSeconds: !0,
                        dateFormat: "H:i:S",
                        time_24hr: !0,
                        minTime: t[a][0].split(":")[0] + ":" + parseInt(t[a][0].split(":")[1]) + 5,
                        maxTime: t[a][1]
                    })) : $(".hospitalScheduleFrom-" + a).parent().parent().hide();

                    function i(e) {
                        if (e.prev().length > 0) return "none" == e.prev().css("display") ? i(e.prev()) : e.prev()
                    }
                    listenClick(".copy-btn", (function (e) {
                        e.preventDefault();
                        var t = i($(this).parent().parent()),
                            a = $(e.currentTarget).attr("data-id"),
                            n = a - 1,
                            r = $("#availableFrom-".concat(n)).val(),
                            s = $("#availableTo-".concat(n)).val();
                        r = t.find("td .availableFrom").val(), s = t.find("td .availableTo").val();
                        var o, d;
                        o = r, $("#availableFrom-".concat(a)).val(r), d = s, $("#availableTo-".concat(a)).val(s);
                        var l = a + 1;
                        $(".hospitalScheduleFrom-" + l).flatpickr({
                            enableTime: !0,
                            noCalendar: !0,
                            enableSeconds: !0,
                            dateFormat: "H:i:S",
                            time_24hr: !0,
                            minTime: o
                        }), $(".hospitalScheduleTo-" + l).flatpickr({
                            enableTime: !0,
                            noCalendar: !0,
                            enableSeconds: !0,
                            dateFormat: "H:i:S",
                            time_24hr: !0,
                            maxTime: d
                        })
                    })), listenSubmit(".scheduleForm", (function (e) {
                        if (e.preventDefault(), "00:00:00" == $(".perPatientTime").val()) return $("#scheduleErrorsBox").html(Lang.get("messages.schedule.schedule_time_select")).show(), $(".perPatientTime").focus(), !1;
                        for (var a = 0, i = !0; a <= 6; a++)
                            if ("00:00:00" != $("#availableFrom-" + a).val() && (i = !1, "undefined" !== t[a + 1] && $("#availableFrom-" + a).val() < t[a + 1][0])) return $("#availableFrom-" + a).focus(), $("#scheduleErrorsBox").show().html(Lang.get("messages.schedule.schedule_time")).show(), $("#scheduleErrorsBox").delay(5e3).fadeOut(), !1;
                        if (i) return $("#scheduleErrorsBox").show().html(Lang.get("messages.schedule.available_time_greater_than_zero")), $("#scheduleErrorsBox").delay(5e3).fadeOut(), !1;
                        for (var n = 0, r = !0; n <= 6; n++)
                            if ("00:00:00" != $("#availableTo-" + n).val() && (r = !1, "undefined" !== t[n + 1] && $("#availableTo-" + n).val() > t[n + 1][1] + ":00")) return $("#availableTo-" + n).focus(), $("#scheduleErrorsBox").show().html(Lang.get("messages.schedule.available_time_less_than_hospital_schedule_time")).show(), $("#scheduleErrorsBox").delay(5e3).fadeOut(), !1;
                        if (r) return $("#scheduleErrorsBox").show().html(Lang.get("messages.schedule.available_to_time_greater_than_zero")), $("#scheduleErrorsBox").delay(5e3).fadeOut(), !1;
                        $(this)[0].submit()
                    }))
                }))
            },
            5416: () => {
                listenClick(".delete-schedule-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexScheduleUrl").val() + "/" + t, "", $("#Schedule").val())
                }))
            },
            3950: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#createServiceForm").length && !$("#editServiceForm").length) return;
                    $("#serviceStatus").select2({
                        width: "100%"
                    }), $(".price-input").trigger("input"), $(window).on("beforeunload", (function () {
                        $("input[type=submit]").prop("disabled", "disabled")
                    })), $("#createServiceForm, #editServiceForm").find("input:text:visible:first").focus()
                })), listenSubmit("#createServiceForm, #editServiceForm", (function () {
                    $("#serviceBtnSave").attr("disabled", !0)
                }))
            },
            9946: () => {
                "use strict";
                listenClick(".delete-service-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#showServiceReportUrl").val() + "/" + t, "", $("#Service").val())
                })), listenChange(".serviceStatus", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#showServiceReportUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && displaySuccessMessage(e.message)
                        }
                    })
                })), listenChange("#service_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#incomeFilterBtn"), $("#incomeFilter"))
                })), listenClick("#serviceResetFilter", (function () {
                    $("#service_filter_status").val(0).trigger("change"), hideDropdownManually($("#serviceFilterBtn"), $(".dropdown-menu"))
                }))
            },
            4810: () => {
                function e(e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#generalCurrencyType").length) return;
                    $("#generalCurrencyType").select2({
                            width: "100%"
                        }),
                        function () {
                            if (!$("#countryPhone").length) return !1;
                            var e = document.querySelector("#countryPhone");
                            errorMsg = document.querySelector(".error-msg"), validMsg = document.querySelector(".valid-msg");
                            Lang.get("messages.common.invalid_number"), Lang.get("messages.common.invalid_country_code"), Lang.get("messages.common.too_short"), Lang.get("messages.common.too_long");
                            var t = window.intlTelInput(e, {
                                    initialCountry: "IN",
                                    separateDialCode: !0,
                                    geoIpLookup: function (e, t) {
                                        $.get("https://ipinfo.io", (function () {}), "jsonp").always((function (t) {
                                            var a = t && t.country ? t.country : "";
                                            e(a)
                                        }))
                                    },
                                    utilsScript: "../../public/assets/js/inttel/js/utils.min.js"
                                }),
                                a = t.selectedCountryData.name + " +" + t.selectedCountryData.dialCode;
                            $("#countryPhone").val(a);
                            var i = function () {
                                e.classList.remove("error")
                            };
                            e.addEventListener("blur", (function () {
                                if (i(), e.value.trim())
                                    if (t.isValidNumber()) validMsg.classList.remove("d-none");
                                    else {
                                        e.classList.add("error");
                                        t.getValidationError();
                                        errorMsg.classList.remove("d-none")
                                    }
                            })), e.addEventListener("change", i), e.addEventListener("keyup", i), $(document).on("blur keyup change countrychange", "#countryPhone", (function () {
                                var e = t.selectedCountryData.dialCode,
                                    a = t.selectedCountryData.iso2;
                                $("#countryCode").val(e), $("#countryName").val(a)
                            }))
                        }()
                })), listenChange(".generalAppLogo", (function () {
                    var t = e($(this), "#generalValidationErrorsBox");
                    isEmpty(t) || 0 == t ? ($(this).val(""), $("#generalValidationErrorsBox").removeClass("d-none hide"), $("#generalValidationErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=generalValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#generalValidationErrorsBox").html("").hide(), displayDocument(this, "#generalPreviewImage", t))
                })), listenChange(".generalFavicon", (function () {
                    var t = e($(this), "#settingValidationErrorsBox");
                    console.log(!isEmpty(t) && 0 != t), isEmpty(t) || 0 == t ? ($(this).val(""), $("#generalValidationErrorsBox").removeClass("d-none hide"), $("#generalValidationErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=generalValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#generalValidationErrorsBox").html("").hide(), displayDocument(this, "#generalPreviewImage", t))
                })), listenKeyup("#generalFacebookUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#generalTwitterUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#generalInstagramUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#generalLinkedInUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenSubmit("#createSetting", (function (e) {
                    if ("" !== $(".error-msg").text()) return $("#generalPhoneNumber").focus(), !1;
                    var t = $("#generalFacebookUrl").val(),
                        a = $("#generalTwitterUrl").val(),
                        i = $("#generalInstagramUrl").val(),
                        n = $("#generalLinkedInUrl").val(),
                        r = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i),
                        s = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i),
                        o = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i),
                        d = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i);
                    return "" != t && !t.match(r) ? (displayErrorMessage(Lang.get("messages.user.validate_facebook_url")), !1) : "" != a && !a.match(s) ? (displayErrorMessage(Lang.get("messages.user.validate_twitter_url")), !1) : "" != i && !i.match(o) ? (displayErrorMessage(Lang.get("messages.user.validate_instagram_url")), !1) : !("" != n && !n.match(d)) || (displayErrorMessage(Lang.get("messages.user.validate_linkedin_url")), !1)
                })), listenChange(".settingStatus", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#sideBarModuleUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (setTimeout((function () {
                                window.location.reload()
                            }), 5e3), displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listenChange("#module_filter_status", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val()), hideDropdownManually($("#moduleFilterBtn"), $("#moduleFilter"))
                })), listenClick("#settingResetFilter", (function () {
                    $("#module_filter_status").val(0).trigger("change"), hideDropdownManually($("#moduleFilterBtn"), $(".dropdown-menu"))
                }))
            },
            2716: () => {
                "use strict";
                $(document).ready((function () {
                    listenKeyup("#menuSearch", (function () {
                        var e = $(this).val().toLowerCase();
                        $(".nav-item").filter((function () {
                            $(".no-record").addClass("d-none"), $(this).toggle($(this).text().toLowerCase().indexOf(e) > -1), 0 == $(".nav-item:visible").last().length && $(".no-record").removeClass("d-none")
                        }))
                    })), listenClick(".sidebar-aside-toggle", (function () {
                        !0 === $(this).hasClass("active") ? $(".sidebar-search-box").addClass("d-none") : $(".sidebar-search-box").removeClass("d-none")
                    }))
                }))
            },
            3382: () => {
                function e() {
                    $(".mySmsClass").hide(), $(".role").show(), $(".send").show()
                }
                document.addEventListener("turbo:load", (function () {
                    if (!$("#smsUrl").length) return;
                    $("#smsMessageId").keypress((function (e) {
                        var t = $("#smsMessageId").val(),
                            a = t.length;
                        parseInt(160 - a) <= 0 && 0 !== e.which && 0 !== e.charCode && ($("#smsMessageId").val(t.substring(0, a - 1)), displayErrorMessage(Lang.get("messages.sms.message_not_greater_than_160_characters")))
                    })), $(".mySmsClass").hide(), $("#smsPhoneNumber").prop("required", !1)
                })), listenClick(".smsNumber", (function () {
                    $(".smsNumber").is(":checked") ? ($(".mySmsClass").show(), $(".smsNumber").attr("value", 1), $(".role").hide(), $("#smsRoleId").prop("required", !1), $(".send").hide(), $("#smsUserId").prop("required", !1), $("#smsPhoneNumber").attr("required"), $("#smsPhoneNumber").prop("required", !0)) : ($("#smsPhoneNumber").prop("required", !1), e())
                })), listenHiddenBsModal("#AddSmsModal", (function () {
                    resetModalForm("#addSmsForm", "#smsValidationErrorsBox"), $("#smsUserId").val("").trigger("change.select2"), $("#smsRoleId").val("").trigger("change.select2"), $(".valid-msg").addClass("hide"), e()
                })), listenShownBsModal("#AddSmsModal", (function () {
                    $("#smsUserId,#smsRoleId").select2({
                        width: "100%",
                        dropdownParent: $("#AddSmsModal")
                    })
                })), listenChange("#smsRoleId", (function () {
                    "" !== $(this).val() && $.ajax({
                        url: $("#getUsersListUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: {
                            id: $(this).val()
                        },
                        success: function (e) {
                            $("#smsUserId").empty(), $("#smsUserId").removeAttr("disabled"), $.each(e.data, (function (e, t) {
                                $("#smsUserId").append($("<option></option>").attr("value", e).text(t))
                            }))
                        }
                    }), $("#smsUserId").empty(), $("#smsUserId").prop("disabled", !0)
                })), listen("click", ".show-sms-btn", (function (e) {
                    e.preventDefault();
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#SMSShowModal").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            e.success && ($("#showSmsSend_to").text(e.data.user ? e.data.user.full_name : Lang.get("messages.common.n/a")), $("#showSmsUser_role").text(e.data.user ? e.data.user.roles[0].name : Lang.get("messages.common.n/a")), $("#showSms_phone").text(e.data.phone_number), $("#showSmsSend_by").text(e.data.send_by ? e.data.send_by.full_name : Lang.get("messages.common.n/a")), $("#showSms_message").text(e.data.message), moment.locale($("#smsLanguage").val()), $("#showSms_date").text(moment(e.data.created_at).fromNow()), $("#showSmsUpdated_on").text(moment(e.data.updated_at).fromNow()), setValueOfEmptySpan(), $("#showSms").appendTo("body").modal("show"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listen("submit", "#addSmsForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#smsBtnSave");
                    t.button("loading"), $("#smsNumber").is(":checked") && ($("#smsRoleId").remove(), $("#smsUserId").remove()), $.ajax({
                        url: $("#createSmsUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#AddSmsModal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message), $("#AddSmsModal").modal("hide")
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listen("click", ".delete-sms-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#smsUrl").val() + "/" + t, "", $("#SMS").val())
                }))
            },
            8418: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#indexTestimonialUrl").length) return;
                    $(".testimonialDescription").attr("maxlength", 150)
                })), listenSubmit("#addTestimonialForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#testimonialSave");
                    t.button("loading");
                    var a = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#indexTestimonialCreateUrl").val(),
                        type: "POST",
                        dataType: "json",
                        data: a,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_testimonials").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            printErrorMessage("#testimonialErrorsBox", e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listen("click", ".edit-testimonial-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#indexTestimonialUrl").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                e.success && (e.data.document_url.split(".").pop().toLowerCase(), $("#editTestimonialPreviewImage").css("background-image", 'url("' + e.data.document_url + '")'), $("#testimonialId").val(e.data.id), $("#editTestimonialName").val(e.data.name), $("#editTestimonialDescription").val(e.data.description), isEmpty(e.data.document_url) ? ($("#testimonialDocumentUrl").hide(), $(".btn-view").hide()) : ($("#testimonialDocumentUrl").show(), $(".btn-view").show(), $("#testimonialDocumentUrl").attr("href", e.data.document_url)), $("#edit_testimonials").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenKeyup(".testimonialDescription", (function () {
                    $(".description").attr("maxlength", 150)
                })), listenSubmit("#editTestimonialForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editTestimonialSave");
                    t.button("loading");
                    var a = $("#testimonialId").val(),
                        i = new FormData($(this)[0]);
                    $.ajax({
                        url: $("#indexTestimonialUrl").val() + "/" + a,
                        type: "post",
                        data: i,
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_testimonials").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#add_testimonials", (function () {
                    resetModalForm("#addTestimonialForm", "#add_testimonials #testimonialErrorsBox"), $("#testimonialPreviewImage").attr("src", $("#indexTestimonialDefaultDocumentImageUrl").val()).css("background-image", "url(".concat($("#indexTestimonialDefaultDocumentImageUrl").val(), ")"))
                })), listenShownBsModal("#add_testimonials", (function () {
                    $("#add_testimonials #testimonialErrorsBox").show(), $("#add_testimonials #testimonialErrorsBox").addClass("d-none")
                })), listenHiddenBsModal("#edit_testimonials", (function () {
                    resetModalForm("#editTestimonialForm", "#edit_testimonials #editTestimonialErrorsBox"), $(".editTestimonialPreviewImage").attr("src", $("#indexTestimonialDefaultDocumentImageUrl").val()).css("background-image", "url(".concat($("#indexTestimonialDefaultDocumentImageUrl").val(), ")"))
                })), listenShownBsModal("#edit_testimonials", (function () {
                    $("#edit_testimonials #editTestimonialErrorsBox").show(), $("#edit_testimonials #editTestimonialErrorsBox").addClass("d-none")
                })), listen("click", ".delete-testimonial-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexTestimonialUrl").val() + "/" + t, "", $("#Testimonial").val())
                })), listen("click", ".view-testimonial-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        $.ajax({
                            url: $("#indexTestimonialUrl").val() + "/" + t,
                            type: "GET",
                            success: function (e) {
                                e.success && ($("#showTestimonialName").html(""), $("#showTestimonialDescription").html(""), $("#showTestimonialName").append(e.data.name), $("#showTestimonialDescription").append(e.data.description), $("#userProfilePicture").attr("src", e.data.document_url), $("#show_testimonials").appendTo("body").modal("show"), ajaxCallCompleted())
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                }))
            },
            3878: (e, t, a) => {
                "use strict";
                var i = {};
                a.r(i), a.d(i, {
                        PageRenderer: () => ce,
                        PageSnapshot: () => z,
                        clearCache: () => be,
                        connectStreamSource: () => $e,
                        disconnectStreamSource: () => Me,
                        navigator: () => ge,
                        registerAdapter: () => ve,
                        renderStreamMessage: () => we,
                        session: () => he,
                        setConfirmMethod: () => De,
                        setProgressBarDelay: () => Le,
                        start: () => fe,
                        visit: () => ye
                    }),
                    function () {
                        if (void 0 === window.Reflect || void 0 === window.customElements || window.customElements.polyfillWrapFlushCallback) return;
                        const e = HTMLElement,
                            t = function () {
                                return Reflect.construct(e, [], this.constructor)
                            };
                        window.HTMLElement = t, HTMLElement.prototype = e.prototype, HTMLElement.prototype.constructor = HTMLElement, Object.setPrototypeOf(HTMLElement, e)
                    }(),
                    function (e) {
                        function t(e, t, a) {
                            throw new e("Failed to execute 'requestSubmit' on 'HTMLFormElement': " + t + ".", a)
                        }
                        "function" != typeof e.requestSubmit && (e.requestSubmit = function (e) {
                            e ? (! function (e, a) {
                                e instanceof HTMLElement || t(TypeError, "parameter 1 is not of type 'HTMLElement'"), "submit" == e.type || t(TypeError, "The specified element is not a submit button"), e.form == a || t(DOMException, "The specified element is not owned by this form element", "NotFoundError")
                            }(e, this), e.click()) : ((e = document.createElement("input")).type = "submit", e.hidden = !0, this.appendChild(e), e.click(), this.removeChild(e))
                        })
                    }(HTMLFormElement.prototype);
                const n = new WeakMap;

                function r(e) {
                    const t = function (e) {
                        const t = e instanceof Element ? e : e instanceof Node ? e.parentElement : null,
                            a = t ? t.closest("input, button") : null;
                        return "submit" == (null == a ? void 0 : a.type) ? a : null
                    }(e.target);
                    t && t.form && n.set(t.form, t)
                }
                var s, o, d, l, c, u;
                ! function () {
                    if ("submitter" in Event.prototype) return;
                    let e;
                    if ("SubmitEvent" in window && /Apple Computer/.test(navigator.vendor)) e = window.SubmitEvent.prototype;
                    else {
                        if ("SubmitEvent" in window) return;
                        e = window.Event.prototype
                    }
                    addEventListener("click", r, !0), Object.defineProperty(e, "submitter", {
                        get() {
                            if ("submit" == this.type && this.target instanceof HTMLFormElement) return n.get(this.target)
                        }
                    })
                }(),
                function (e) {
                    e.eager = "eager", e.lazy = "lazy"
                }(s || (s = {}));
                class m extends HTMLElement {
                    constructor() {
                        super(), this.loaded = Promise.resolve(), this.delegate = new m.delegateConstructor(this)
                    }
                    static get observedAttributes() {
                        return ["disabled", "loading", "src"]
                    }
                    connectedCallback() {
                        this.delegate.connect()
                    }
                    disconnectedCallback() {
                        this.delegate.disconnect()
                    }
                    reload() {
                        const {
                            src: e
                        } = this;
                        this.src = null, this.src = e
                    }
                    attributeChangedCallback(e) {
                        "loading" == e ? this.delegate.loadingStyleChanged() : "src" == e ? this.delegate.sourceURLChanged() : this.delegate.disabledChanged()
                    }
                    get src() {
                        return this.getAttribute("src")
                    }
                    set src(e) {
                        e ? this.setAttribute("src", e) : this.removeAttribute("src")
                    }
                    get loading() {
                        return function (e) {
                            switch (e.toLowerCase()) {
                                case "lazy":
                                    return s.lazy;
                                default:
                                    return s.eager
                            }
                        }(this.getAttribute("loading") || "")
                    }
                    set loading(e) {
                        e ? this.setAttribute("loading", e) : this.removeAttribute("loading")
                    }
                    get disabled() {
                        return this.hasAttribute("disabled")
                    }
                    set disabled(e) {
                        e ? this.setAttribute("disabled", "") : this.removeAttribute("disabled")
                    }
                    get autoscroll() {
                        return this.hasAttribute("autoscroll")
                    }
                    set autoscroll(e) {
                        e ? this.setAttribute("autoscroll", "") : this.removeAttribute("autoscroll")
                    }
                    get complete() {
                        return !this.delegate.isLoading
                    }
                    get isActive() {
                        return this.ownerDocument === document && !this.isPreview
                    }
                    get isPreview() {
                        var e, t;
                        return null === (t = null === (e = this.ownerDocument) || void 0 === e ? void 0 : e.documentElement) || void 0 === t ? void 0 : t.hasAttribute("data-turbo-preview")
                    }
                }

                function _(e) {
                    return new URL(e.toString(), document.baseURI)
                }

                function p(e) {
                    let t;
                    return e.hash ? e.hash.slice(1) : (t = e.href.match(/#(.*)$/)) ? t[1] : void 0
                }

                function h(e, t) {
                    return _((null == t ? void 0 : t.getAttribute("formaction")) || e.getAttribute("action") || e.action)
                }

                function g(e) {
                    return (function (e) {
                        return function (e) {
                            return e.pathname.split("/").slice(1)
                        }(e).slice(-1)[0]
                    }(e).match(/\.[^.]*$/) || [])[0] || ""
                }

                function f(e, t) {
                    const a = function (e) {
                        return t = e.origin + e.pathname, t.endsWith("/") ? t : t + "/";
                        var t
                    }(t);
                    return e.href === _(a).href || e.href.startsWith(a)
                }

                function v(e, t) {
                    return f(e, t) && !!g(e).match(/^(?:|\.(?:htm|html|xhtml))$/)
                }

                function y(e) {
                    const t = p(e);
                    return null != t ? e.href.slice(0, -(t.length + 1)) : e.href
                }

                function $(e) {
                    return y(e)
                }
                class M {
                    constructor(e) {
                        this.response = e
                    }
                    get succeeded() {
                        return this.response.ok
                    }
                    get failed() {
                        return !this.succeeded
                    }
                    get clientError() {
                        return this.statusCode >= 400 && this.statusCode <= 499
                    }
                    get serverError() {
                        return this.statusCode >= 500 && this.statusCode <= 599
                    }
                    get redirected() {
                        return this.response.redirected
                    }
                    get location() {
                        return _(this.response.url)
                    }
                    get isHTML() {
                        return this.contentType && this.contentType.match(/^(?:text\/([^\s;,]+\b)?html|application\/xhtml\+xml)\b/)
                    }
                    get statusCode() {
                        return this.response.status
                    }
                    get contentType() {
                        return this.header("Content-Type")
                    }
                    get responseText() {
                        return this.response.clone().text()
                    }
                    get responseHTML() {
                        return this.isHTML ? this.response.clone().text() : Promise.resolve(void 0)
                    }
                    header(e) {
                        return this.response.headers.get(e)
                    }
                }

                function w(e, {
                    target: t,
                    cancelable: a,
                    detail: i
                } = {}) {
                    const n = new CustomEvent(e, {
                        cancelable: a,
                        bubbles: !0,
                        detail: i
                    });
                    return t && t.isConnected ? t.dispatchEvent(n) : document.documentElement.dispatchEvent(n), n
                }

                function b() {
                    return new Promise((e => requestAnimationFrame((() => e()))))
                }

                function L(e = "") {
                    return (new DOMParser).parseFromString(e, "text/html")
                }

                function D(e, ...t) {
                    const a = function (e, t) {
                            return e.reduce(((e, a, i) => e + a + (null == t[i] ? "" : t[i])), "")
                        }(e, t).replace(/^\n/, "").split("\n"),
                        i = a[0].match(/^\s+/),
                        n = i ? i[0].length : 0;
                    return a.map((e => e.slice(n))).join("\n")
                }

                function k() {
                    return Array.apply(null, {
                        length: 36
                    }).map(((e, t) => 8 == t || 13 == t || 18 == t || 23 == t ? "-" : 14 == t ? "4" : 19 == t ? (Math.floor(4 * Math.random()) + 8).toString(16) : Math.floor(15 * Math.random()).toString(16))).join("")
                }

                function Y(e, ...t) {
                    for (const a of t.map((t => null == t ? void 0 : t.getAttribute(e))))
                        if ("string" == typeof a) return a;
                    return null
                }

                function T(...e) {
                    for (const t of e) "turbo-frame" == t.localName && t.setAttribute("busy", ""), t.setAttribute("aria-busy", "true")
                }

                function S(...e) {
                    for (const t of e) "turbo-frame" == t.localName && t.removeAttribute("busy"), t.removeAttribute("aria-busy")
                }! function (e) {
                    e[e.get = 0] = "get", e[e.post = 1] = "post", e[e.put = 2] = "put", e[e.patch = 3] = "patch", e[e.delete = 4] = "delete"
                }(o || (o = {}));
                class x {
                    constructor(e, t, a, i = new URLSearchParams, n = null) {
                        this.abortController = new AbortController, this.resolveRequestPromise = e => {}, this.delegate = e, this.method = t, this.headers = this.defaultHeaders, this.body = i, this.url = a, this.target = n
                    }
                    get location() {
                        return this.url
                    }
                    get params() {
                        return this.url.searchParams
                    }
                    get entries() {
                        return this.body ? Array.from(this.body.entries()) : []
                    }
                    cancel() {
                        this.abortController.abort()
                    }
                    async perform() {
                        var e, t;
                        const {
                            fetchOptions: a
                        } = this;
                        null === (t = (e = this.delegate).prepareHeadersForRequest) || void 0 === t || t.call(e, this.headers, this), await this.allowRequestToBeIntercepted(a);
                        try {
                            this.delegate.requestStarted(this);
                            const e = await fetch(this.url.href, a);
                            return await this.receive(e)
                        } catch (e) {
                            if ("AbortError" !== e.name) throw this.delegate.requestErrored(this, e), e
                        } finally {
                            this.delegate.requestFinished(this)
                        }
                    }
                    async receive(e) {
                        const t = new M(e);
                        return w("turbo:before-fetch-response", {
                            cancelable: !0,
                            detail: {
                                fetchResponse: t
                            },
                            target: this.target
                        }).defaultPrevented ? this.delegate.requestPreventedHandlingResponse(this, t) : t.succeeded ? this.delegate.requestSucceededWithResponse(this, t) : this.delegate.requestFailedWithResponse(this, t), t
                    }
                    get fetchOptions() {
                        var e;
                        return {
                            method: o[this.method].toUpperCase(),
                            credentials: "same-origin",
                            headers: this.headers,
                            redirect: "follow",
                            body: this.isIdempotent ? null : this.body,
                            signal: this.abortSignal,
                            referrer: null === (e = this.delegate.referrer) || void 0 === e ? void 0 : e.href
                        }
                    }
                    get defaultHeaders() {
                        return {
                            Accept: "text/html, application/xhtml+xml"
                        }
                    }
                    get isIdempotent() {
                        return this.method == o.get
                    }
                    get abortSignal() {
                        return this.abortController.signal
                    }
                    async allowRequestToBeIntercepted(e) {
                        const t = new Promise((e => this.resolveRequestPromise = e));
                        w("turbo:before-fetch-request", {
                            cancelable: !0,
                            detail: {
                                fetchOptions: e,
                                url: this.url,
                                resume: this.resolveRequestPromise
                            },
                            target: this.target
                        }).defaultPrevented && await t
                    }
                }
                class C {
                    constructor(e, t) {
                        this.started = !1, this.intersect = e => {
                            const t = e.slice(-1)[0];
                            (null == t ? void 0 : t.isIntersecting) && this.delegate.elementAppearedInViewport(this.element)
                        }, this.delegate = e, this.element = t, this.intersectionObserver = new IntersectionObserver(this.intersect)
                    }
                    start() {
                        this.started || (this.started = !0, this.intersectionObserver.observe(this.element))
                    }
                    stop() {
                        this.started && (this.started = !1, this.intersectionObserver.unobserve(this.element))
                    }
                }
                class I {
                    constructor(e) {
                        this.templateElement = document.createElement("template"), this.templateElement.innerHTML = e
                    }
                    static wrap(e) {
                        return "string" == typeof e ? new this(e) : e
                    }
                    get fragment() {
                        const e = document.createDocumentFragment();
                        for (const t of this.foreignElements) e.appendChild(document.importNode(t, !0));
                        return e
                    }
                    get foreignElements() {
                        return this.templateChildren.reduce(((e, t) => "turbo-stream" == t.tagName.toLowerCase() ? [...e, t] : e), [])
                    }
                    get templateChildren() {
                        return Array.from(this.templateElement.content.children)
                    }
                }
                I.contentType = "text/vnd.turbo-stream.html",
                    function (e) {
                        e[e.initialized = 0] = "initialized", e[e.requesting = 1] = "requesting", e[e.waiting = 2] = "waiting", e[e.receiving = 3] = "receiving", e[e.stopping = 4] = "stopping", e[e.stopped = 5] = "stopped"
                    }(d || (d = {})),
                    function (e) {
                        e.urlEncoded = "application/x-www-form-urlencoded", e.multipart = "multipart/form-data", e.plain = "text/plain"
                    }(l || (l = {}));
                class P {
                    constructor(e, t, a, i = !1) {
                        this.state = d.initialized, this.delegate = e, this.formElement = t, this.submitter = a, this.formData = function (e, t) {
                            const a = new FormData(e),
                                i = null == t ? void 0 : t.getAttribute("name"),
                                n = null == t ? void 0 : t.getAttribute("value");
                            i && null != n && a.get(i) != n && a.append(i, n);
                            return a
                        }(t, a), this.location = _(this.action), this.method == o.get && function (e, t) {
                            const a = new URLSearchParams;
                            for (const [e, i] of t) i instanceof File || a.append(e, i);
                            e.search = a.toString()
                        }(this.location, [...this.body.entries()]), this.fetchRequest = new x(this, this.method, this.location, this.body, this.formElement), this.mustRedirect = i
                    }
                    static confirmMethod(e, t) {
                        return confirm(e)
                    }
                    get method() {
                        var e;
                        return function (e) {
                            switch (e.toLowerCase()) {
                                case "get":
                                    return o.get;
                                case "post":
                                    return o.post;
                                case "put":
                                    return o.put;
                                case "patch":
                                    return o.patch;
                                case "delete":
                                    return o.delete
                            }
                        }(((null === (e = this.submitter) || void 0 === e ? void 0 : e.getAttribute("formmethod")) || this.formElement.getAttribute("method") || "").toLowerCase()) || o.get
                    }
                    get action() {
                        var e;
                        const t = "string" == typeof this.formElement.action ? this.formElement.action : null;
                        return (null === (e = this.submitter) || void 0 === e ? void 0 : e.getAttribute("formaction")) || this.formElement.getAttribute("action") || t || ""
                    }
                    get body() {
                        return this.enctype == l.urlEncoded || this.method == o.get ? new URLSearchParams(this.stringFormData) : this.formData
                    }
                    get enctype() {
                        var e;
                        return function (e) {
                            switch (e.toLowerCase()) {
                                case l.multipart:
                                    return l.multipart;
                                case l.plain:
                                    return l.plain;
                                default:
                                    return l.urlEncoded
                            }
                        }((null === (e = this.submitter) || void 0 === e ? void 0 : e.getAttribute("formenctype")) || this.formElement.enctype)
                    }
                    get isIdempotent() {
                        return this.fetchRequest.isIdempotent
                    }
                    get stringFormData() {
                        return [...this.formData].reduce(((e, [t, a]) => e.concat("string" == typeof a ? [
                            [t, a]
                        ] : [])), [])
                    }
                    get confirmationMessage() {
                        return this.formElement.getAttribute("data-turbo-confirm")
                    }
                    get needsConfirmation() {
                        return null !== this.confirmationMessage
                    }
                    async start() {
                        const {
                            initialized: e,
                            requesting: t
                        } = d;
                        if (this.needsConfirmation) {
                            if (!P.confirmMethod(this.confirmationMessage, this.formElement)) return
                        }
                        if (this.state == e) return this.state = t, this.fetchRequest.perform()
                    }
                    stop() {
                        const {
                            stopping: e,
                            stopped: t
                        } = d;
                        if (this.state != e && this.state != t) return this.state = e, this.fetchRequest.cancel(), !0
                    }
                    prepareHeadersForRequest(e, t) {
                        if (!t.isIdempotent) {
                            const t = function (e) {
                                if (null != e) {
                                    const t = (document.cookie ? document.cookie.split("; ") : []).find((t => t.startsWith(e)));
                                    if (t) {
                                        const e = t.split("=").slice(1).join("=");
                                        return e ? decodeURIComponent(e) : void 0
                                    }
                                }
                            }(E("csrf-param")) || E("csrf-token");
                            t && (e["X-CSRF-Token"] = t), e.Accept = [I.contentType, e.Accept].join(", ")
                        }
                    }
                    requestStarted(e) {
                        var t;
                        this.state = d.waiting, null === (t = this.submitter) || void 0 === t || t.setAttribute("disabled", ""), w("turbo:submit-start", {
                            target: this.formElement,
                            detail: {
                                formSubmission: this
                            }
                        }), this.delegate.formSubmissionStarted(this)
                    }
                    requestPreventedHandlingResponse(e, t) {
                        this.result = {
                            success: t.succeeded,
                            fetchResponse: t
                        }
                    }
                    requestSucceededWithResponse(e, t) {
                        if (t.clientError || t.serverError) this.delegate.formSubmissionFailedWithResponse(this, t);
                        else if (this.requestMustRedirect(e) && function (e) {
                                return 200 == e.statusCode && !e.redirected
                            }(t)) {
                            const e = new Error("Form responses must redirect to another location");
                            this.delegate.formSubmissionErrored(this, e)
                        } else this.state = d.receiving, this.result = {
                            success: !0,
                            fetchResponse: t
                        }, this.delegate.formSubmissionSucceededWithResponse(this, t)
                    }
                    requestFailedWithResponse(e, t) {
                        this.result = {
                            success: !1,
                            fetchResponse: t
                        }, this.delegate.formSubmissionFailedWithResponse(this, t)
                    }
                    requestErrored(e, t) {
                        this.result = {
                            success: !1,
                            error: t
                        }, this.delegate.formSubmissionErrored(this, t)
                    }
                    requestFinished(e) {
                        var t;
                        this.state = d.stopped, null === (t = this.submitter) || void 0 === t || t.removeAttribute("disabled"), w("turbo:submit-end", {
                            target: this.formElement,
                            detail: Object.assign({
                                formSubmission: this
                            }, this.result)
                        }), this.delegate.formSubmissionFinished(this)
                    }
                    requestMustRedirect(e) {
                        return !e.isIdempotent && this.mustRedirect
                    }
                }

                function E(e) {
                    const t = document.querySelector(`meta[name="${e}"]`);
                    return t && t.content
                }
                class j {
                    constructor(e) {
                        this.element = e
                    }
                    get children() {
                        return [...this.element.children]
                    }
                    hasAnchor(e) {
                        return null != this.getElementForAnchor(e)
                    }
                    getElementForAnchor(e) {
                        return e ? this.element.querySelector(`[id='${e}'], a[name='${e}']`) : null
                    }
                    get isConnected() {
                        return this.element.isConnected
                    }
                    get firstAutofocusableElement() {
                        return this.element.querySelector("[autofocus]")
                    }
                    get permanentElements() {
                        return [...this.element.querySelectorAll("[id][data-turbo-permanent]")]
                    }
                    getPermanentElementById(e) {
                        return this.element.querySelector(`#${e}[data-turbo-permanent]`)
                    }
                    getPermanentElementMapForSnapshot(e) {
                        const t = {};
                        for (const a of this.permanentElements) {
                            const {
                                id: i
                            } = a, n = e.getPermanentElementById(i);
                            n && (t[i] = [a, n])
                        }
                        return t
                    }
                }
                class F {
                    constructor(e, t) {
                        this.submitBubbled = e => {
                            const t = e.target;
                            if (!e.defaultPrevented && t instanceof HTMLFormElement && t.closest("turbo-frame, html") == this.element) {
                                const a = e.submitter || void 0;
                                "dialog" != ((null == a ? void 0 : a.getAttribute("formmethod")) || t.method) && this.delegate.shouldInterceptFormSubmission(t, a) && (e.preventDefault(), e.stopImmediatePropagation(), this.delegate.formSubmissionIntercepted(t, a))
                            }
                        }, this.delegate = e, this.element = t
                    }
                    start() {
                        this.element.addEventListener("submit", this.submitBubbled)
                    }
                    stop() {
                        this.element.removeEventListener("submit", this.submitBubbled)
                    }
                }
                class H {
                    constructor(e, t) {
                        this.resolveRenderPromise = e => {}, this.resolveInterceptionPromise = e => {}, this.delegate = e, this.element = t
                    }
                    scrollToAnchor(e) {
                        const t = this.snapshot.getElementForAnchor(e);
                        t ? (this.scrollToElement(t), this.focusElement(t)) : this.scrollToPosition({
                            x: 0,
                            y: 0
                        })
                    }
                    scrollToAnchorFromLocation(e) {
                        this.scrollToAnchor(p(e))
                    }
                    scrollToElement(e) {
                        e.scrollIntoView()
                    }
                    focusElement(e) {
                        e instanceof HTMLElement && (e.hasAttribute("tabindex") ? e.focus() : (e.setAttribute("tabindex", "-1"), e.focus(), e.removeAttribute("tabindex")))
                    }
                    scrollToPosition({
                        x: e,
                        y: t
                    }) {
                        this.scrollRoot.scrollTo(e, t)
                    }
                    scrollToTop() {
                        this.scrollToPosition({
                            x: 0,
                            y: 0
                        })
                    }
                    get scrollRoot() {
                        return window
                    }
                    async render(e) {
                        const {
                            isPreview: t,
                            shouldRender: a,
                            newSnapshot: i
                        } = e;
                        if (a) try {
                            this.renderPromise = new Promise((e => this.resolveRenderPromise = e)), this.renderer = e, this.prepareToRenderSnapshot(e);
                            const a = new Promise((e => this.resolveInterceptionPromise = e));
                            this.delegate.allowsImmediateRender(i, this.resolveInterceptionPromise) || await a, await this.renderSnapshot(e), this.delegate.viewRenderedSnapshot(i, t), this.finishRenderingSnapshot(e)
                        } finally {
                            delete this.renderer, this.resolveRenderPromise(void 0), delete this.renderPromise
                        } else this.invalidate()
                    }
                    invalidate() {
                        this.delegate.viewInvalidated()
                    }
                    prepareToRenderSnapshot(e) {
                        this.markAsPreview(e.isPreview), e.prepareToRender()
                    }
                    markAsPreview(e) {
                        e ? this.element.setAttribute("data-turbo-preview", "") : this.element.removeAttribute("data-turbo-preview")
                    }
                    async renderSnapshot(e) {
                        await e.render()
                    }
                    finishRenderingSnapshot(e) {
                        e.finishRendering()
                    }
                }
                class O extends H {
                    invalidate() {
                        this.element.innerHTML = ""
                    }
                    get snapshot() {
                        return new j(this.element)
                    }
                }
                class B {
                    constructor(e, t) {
                        this.clickBubbled = e => {
                            this.respondsToEventTarget(e.target) ? this.clickEvent = e : delete this.clickEvent
                        }, this.linkClicked = e => {
                            this.clickEvent && this.respondsToEventTarget(e.target) && e.target instanceof Element && this.delegate.shouldInterceptLinkClick(e.target, e.detail.url) && (this.clickEvent.preventDefault(), e.preventDefault(), this.delegate.linkClickIntercepted(e.target, e.detail.url)), delete this.clickEvent
                        }, this.willVisit = () => {
                            delete this.clickEvent
                        }, this.delegate = e, this.element = t
                    }
                    start() {
                        this.element.addEventListener("click", this.clickBubbled), document.addEventListener("turbo:click", this.linkClicked), document.addEventListener("turbo:before-visit", this.willVisit)
                    }
                    stop() {
                        this.element.removeEventListener("click", this.clickBubbled), document.removeEventListener("turbo:click", this.linkClicked), document.removeEventListener("turbo:before-visit", this.willVisit)
                    }
                    respondsToEventTarget(e) {
                        const t = e instanceof Element ? e : e instanceof Node ? e.parentElement : null;
                        return t && t.closest("turbo-frame, html") == this.element
                    }
                }
                class A {
                    constructor(e, t, a, i = !0) {
                        this.currentSnapshot = e, this.newSnapshot = t, this.isPreview = a, this.willRender = i, this.promise = new Promise(((e, t) => this.resolvingFunctions = {
                            resolve: e,
                            reject: t
                        }))
                    }
                    get shouldRender() {
                        return !0
                    }
                    prepareToRender() {}
                    finishRendering() {
                        this.resolvingFunctions && (this.resolvingFunctions.resolve(), delete this.resolvingFunctions)
                    }
                    createScriptElement(e) {
                        if ("false" == e.getAttribute("data-turbo-eval")) return e; {
                            const t = document.createElement("script");
                            return this.cspNonce && (t.nonce = this.cspNonce), t.textContent = e.textContent, t.async = !1,
                                function (e, t) {
                                    for (const {
                                            name: a,
                                            value: i
                                        } of [...t.attributes]) e.setAttribute(a, i)
                                }(t, e), t
                        }
                    }
                    preservingPermanentElements(e) {
                        (class {
                            constructor(e) {
                                this.permanentElementMap = e
                            }
                            static preservingPermanentElements(e, t) {
                                const a = new this(e);
                                a.enter(), t(), a.leave()
                            }
                            enter() {
                                for (const e in this.permanentElementMap) {
                                    const [, t] = this.permanentElementMap[e];
                                    this.replaceNewPermanentElementWithPlaceholder(t)
                                }
                            }
                            leave() {
                                for (const e in this.permanentElementMap) {
                                    const [t] = this.permanentElementMap[e];
                                    this.replaceCurrentPermanentElementWithClone(t), this.replacePlaceholderWithPermanentElement(t)
                                }
                            }
                            replaceNewPermanentElementWithPlaceholder(e) {
                                const t = function (e) {
                                    const t = document.createElement("meta");
                                    return t.setAttribute("name", "turbo-permanent-placeholder"), t.setAttribute("content", e.id), t
                                }(e);
                                e.replaceWith(t)
                            }
                            replaceCurrentPermanentElementWithClone(e) {
                                const t = e.cloneNode(!0);
                                e.replaceWith(t)
                            }
                            replacePlaceholderWithPermanentElement(e) {
                                const t = this.getPlaceholderById(e.id);
                                null == t || t.replaceWith(e)
                            }
                            getPlaceholderById(e) {
                                return this.placeholders.find((t => t.content == e))
                            }
                            get placeholders() {
                                return [...document.querySelectorAll("meta[name=turbo-permanent-placeholder][content]")]
                            }
                        }).preservingPermanentElements(this.permanentElementMap, e)
                    }
                    focusFirstAutofocusableElement() {
                        const e = this.connectedSnapshot.firstAutofocusableElement;
                        (function (e) {
                            return e && "function" == typeof e.focus
                        })(e) && e.focus()
                    }
                    get connectedSnapshot() {
                        return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot
                    }
                    get currentElement() {
                        return this.currentSnapshot.element
                    }
                    get newElement() {
                        return this.newSnapshot.element
                    }
                    get permanentElementMap() {
                        return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot)
                    }
                    get cspNonce() {
                        var e;
                        return null === (e = document.head.querySelector('meta[name="csp-nonce"]')) || void 0 === e ? void 0 : e.getAttribute("content")
                    }
                }
                class R extends A {
                    get shouldRender() {
                        return !0
                    }
                    async render() {
                        await b(), this.preservingPermanentElements((() => {
                            this.loadFrameElement()
                        })), this.scrollFrameIntoView(), await b(), this.focusFirstAutofocusableElement(), await b(), this.activateScriptElements()
                    }
                    loadFrameElement() {
                        var e;
                        const t = document.createRange();
                        t.selectNodeContents(this.currentElement), t.deleteContents();
                        const a = this.newElement,
                            i = null === (e = a.ownerDocument) || void 0 === e ? void 0 : e.createRange();
                        i && (i.selectNodeContents(a), this.currentElement.appendChild(i.extractContents()))
                    }
                    scrollFrameIntoView() {
                        if (this.currentElement.autoscroll || this.newElement.autoscroll) {
                            const a = this.currentElement.firstElementChild,
                                i = (e = this.currentElement.getAttribute("data-autoscroll-block"), t = "end", "end" == e || "start" == e || "center" == e || "nearest" == e ? e : t);
                            if (a) return a.scrollIntoView({
                                block: i
                            }), !0
                        }
                        var e, t;
                        return !1
                    }
                    activateScriptElements() {
                        for (const e of this.newScriptElements) {
                            const t = this.createScriptElement(e);
                            e.replaceWith(t)
                        }
                    }
                    get newScriptElements() {
                        return this.currentElement.querySelectorAll("script")
                    }
                }
                class q {
                    constructor() {
                        this.hiding = !1, this.value = 0, this.visible = !1, this.trickle = () => {
                            this.setValue(this.value + Math.random() / 100)
                        }, this.stylesheetElement = this.createStylesheetElement(), this.progressElement = this.createProgressElement(), this.installStylesheetElement(), this.setValue(0)
                    }
                    static get defaultCSS() {
                        return D `
      .turbo-progress-bar {
        position: fixed;
        display: block;
        top: 0;
        left: 0;
        height: 3px;
        background: #0076ff;
        z-index: 9999;
        transition:
          width ${q.animationDuration}ms ease-out,
          opacity ${q.animationDuration/2}ms ${q.animationDuration/2}ms ease-in;
        transform: translate3d(0, 0, 0);
      }
    `
                    }
                    show() {
                        this.visible || (this.visible = !0, this.installProgressElement(), this.startTrickling())
                    }
                    hide() {
                        this.visible && !this.hiding && (this.hiding = !0, this.fadeProgressElement((() => {
                            this.uninstallProgressElement(), this.stopTrickling(), this.visible = !1, this.hiding = !1
                        })))
                    }
                    setValue(e) {
                        this.value = e, this.refresh()
                    }
                    installStylesheetElement() {
                        document.head.insertBefore(this.stylesheetElement, document.head.firstChild)
                    }
                    installProgressElement() {
                        this.progressElement.style.width = "0", this.progressElement.style.opacity = "1", document.documentElement.insertBefore(this.progressElement, document.body), this.refresh()
                    }
                    fadeProgressElement(e) {
                        this.progressElement.style.opacity = "0", setTimeout(e, 1.5 * q.animationDuration)
                    }
                    uninstallProgressElement() {
                        this.progressElement.parentNode && document.documentElement.removeChild(this.progressElement)
                    }
                    startTrickling() {
                        this.trickleInterval || (this.trickleInterval = window.setInterval(this.trickle, q.animationDuration))
                    }
                    stopTrickling() {
                        window.clearInterval(this.trickleInterval), delete this.trickleInterval
                    }
                    refresh() {
                        requestAnimationFrame((() => {
                            this.progressElement.style.width = 10 + 90 * this.value + "%"
                        }))
                    }
                    createStylesheetElement() {
                        const e = document.createElement("style");
                        return e.type = "text/css", e.textContent = q.defaultCSS, e
                    }
                    createProgressElement() {
                        const e = document.createElement("div");
                        return e.className = "turbo-progress-bar", e
                    }
                }
                q.animationDuration = 300;
                class U extends j {
                    constructor() {
                        super(...arguments), this.detailsByOuterHTML = this.children.filter((e => ! function (e) {
                            return "noscript" == e.tagName.toLowerCase()
                        }(e))).map((e => function (e) {
                            e.hasAttribute("nonce") && e.setAttribute("nonce", "");
                            return e
                        }(e))).reduce(((e, t) => {
                            const {
                                outerHTML: a
                            } = t, i = a in e ? e[a] : {
                                type: N(t),
                                tracked: W(t),
                                elements: []
                            };
                            return Object.assign(Object.assign({}, e), {
                                [a]: Object.assign(Object.assign({}, i), {
                                    elements: [...i.elements, t]
                                })
                            })
                        }), {})
                    }
                    get trackedElementSignature() {
                        return Object.keys(this.detailsByOuterHTML).filter((e => this.detailsByOuterHTML[e].tracked)).join("")
                    }
                    getScriptElementsNotInSnapshot(e) {
                        return this.getElementsMatchingTypeNotInSnapshot("script", e)
                    }
                    getStylesheetElementsNotInSnapshot(e) {
                        return this.getElementsMatchingTypeNotInSnapshot("stylesheet", e)
                    }
                    getElementsMatchingTypeNotInSnapshot(e, t) {
                        return Object.keys(this.detailsByOuterHTML).filter((e => !(e in t.detailsByOuterHTML))).map((e => this.detailsByOuterHTML[e])).filter((({
                            type: t
                        }) => t == e)).map((({
                            elements: [e]
                        }) => e))
                    }
                    get provisionalElements() {
                        return Object.keys(this.detailsByOuterHTML).reduce(((e, t) => {
                            const {
                                type: a,
                                tracked: i,
                                elements: n
                            } = this.detailsByOuterHTML[t];
                            return null != a || i ? n.length > 1 ? [...e, ...n.slice(1)] : e : [...e, ...n]
                        }), [])
                    }
                    getMetaValue(e) {
                        const t = this.findMetaElementByName(e);
                        return t ? t.getAttribute("content") : null
                    }
                    findMetaElementByName(e) {
                        return Object.keys(this.detailsByOuterHTML).reduce(((t, a) => {
                            const {
                                elements: [i]
                            } = this.detailsByOuterHTML[a];
                            return function (e, t) {
                                return "meta" == e.tagName.toLowerCase() && e.getAttribute("name") == t
                            }(i, e) ? i : t
                        }), void 0)
                    }
                }

                function N(e) {
                    return function (e) {
                        return "script" == e.tagName.toLowerCase()
                    }(e) ? "script" : function (e) {
                        const t = e.tagName.toLowerCase();
                        return "style" == t || "link" == t && "stylesheet" == e.getAttribute("rel")
                    }(e) ? "stylesheet" : void 0
                }

                function W(e) {
                    return "reload" == e.getAttribute("data-turbo-track")
                }
                class z extends j {
                    constructor(e, t) {
                        super(e), this.headSnapshot = t
                    }
                    static fromHTMLString(e = "") {
                        return this.fromDocument(L(e))
                    }
                    static fromElement(e) {
                        return this.fromDocument(e.ownerDocument)
                    }
                    static fromDocument({
                        head: e,
                        body: t
                    }) {
                        return new this(t, new U(e))
                    }
                    clone() {
                        return new z(this.element.cloneNode(!0), this.headSnapshot)
                    }
                    get headElement() {
                        return this.headSnapshot.element
                    }
                    get rootLocation() {
                        var e;
                        return _(null !== (e = this.getSetting("root")) && void 0 !== e ? e : "/")
                    }
                    get cacheControlValue() {
                        return this.getSetting("cache-control")
                    }
                    get isPreviewable() {
                        return "no-preview" != this.cacheControlValue
                    }
                    get isCacheable() {
                        return "no-cache" != this.cacheControlValue
                    }
                    get isVisitable() {
                        return "reload" != this.getSetting("visit-control")
                    }
                    getSetting(e) {
                        return this.headSnapshot.getMetaValue(`turbo-${e}`)
                    }
                }! function (e) {
                    e.visitStart = "visitStart", e.requestStart = "requestStart", e.requestEnd = "requestEnd", e.visitEnd = "visitEnd"
                }(c || (c = {})),
                function (e) {
                    e.initialized = "initialized", e.started = "started", e.canceled = "canceled", e.failed = "failed", e.completed = "completed"
                }(u || (u = {}));
                const V = {
                    action: "advance",
                    historyChanged: !1,
                    visitCachedSnapshot: () => {},
                    willRender: !0
                };
                var J, G;
                ! function (e) {
                    e[e.networkFailure = 0] = "networkFailure", e[e.timeoutFailure = -1] = "timeoutFailure", e[e.contentTypeMismatch = -2] = "contentTypeMismatch"
                }(J || (J = {}));
                class Q {
                    constructor(e, t, a, i = {}) {
                        this.identifier = k(), this.timingMetrics = {}, this.followedRedirect = !1, this.historyChanged = !1, this.scrolled = !1, this.snapshotCached = !1, this.state = u.initialized, this.delegate = e, this.location = t, this.restorationIdentifier = a || k();
                        const {
                            action: n,
                            historyChanged: r,
                            referrer: s,
                            snapshotHTML: o,
                            response: d,
                            visitCachedSnapshot: l,
                            willRender: c
                        } = Object.assign(Object.assign({}, V), i);
                        this.action = n, this.historyChanged = r, this.referrer = s, this.snapshotHTML = o, this.response = d, this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action), this.visitCachedSnapshot = l, this.willRender = c, this.scrolled = !c
                    }
                    get adapter() {
                        return this.delegate.adapter
                    }
                    get view() {
                        return this.delegate.view
                    }
                    get history() {
                        return this.delegate.history
                    }
                    get restorationData() {
                        return this.history.getRestorationDataForIdentifier(this.restorationIdentifier)
                    }
                    get silent() {
                        return this.isSamePage
                    }
                    start() {
                        this.state == u.initialized && (this.recordTimingMetric(c.visitStart), this.state = u.started, this.adapter.visitStarted(this), this.delegate.visitStarted(this))
                    }
                    cancel() {
                        this.state == u.started && (this.request && this.request.cancel(), this.cancelRender(), this.state = u.canceled)
                    }
                    complete() {
                        this.state == u.started && (this.recordTimingMetric(c.visitEnd), this.state = u.completed, this.adapter.visitCompleted(this), this.delegate.visitCompleted(this), this.followRedirect())
                    }
                    fail() {
                        this.state == u.started && (this.state = u.failed, this.adapter.visitFailed(this))
                    }
                    changeHistory() {
                        var e;
                        if (!this.historyChanged) {
                            const t = this.location.href === (null === (e = this.referrer) || void 0 === e ? void 0 : e.href) ? "replace" : this.action,
                                a = this.getHistoryMethodForAction(t);
                            this.history.update(a, this.location, this.restorationIdentifier), this.historyChanged = !0
                        }
                    }
                    issueRequest() {
                        this.hasPreloadedResponse() ? this.simulateRequest() : this.shouldIssueRequest() && !this.request && (this.request = new x(this, o.get, this.location), this.request.perform())
                    }
                    simulateRequest() {
                        this.response && (this.startRequest(), this.recordResponse(), this.finishRequest())
                    }
                    startRequest() {
                        this.recordTimingMetric(c.requestStart), this.adapter.visitRequestStarted(this)
                    }
                    recordResponse(e = this.response) {
                        if (this.response = e, e) {
                            const {
                                statusCode: t
                            } = e;
                            K(t) ? this.adapter.visitRequestCompleted(this) : this.adapter.visitRequestFailedWithStatusCode(this, t)
                        }
                    }
                    finishRequest() {
                        this.recordTimingMetric(c.requestEnd), this.adapter.visitRequestFinished(this)
                    }
                    loadResponse() {
                        if (this.response) {
                            const {
                                statusCode: e,
                                responseHTML: t
                            } = this.response;
                            this.render((async () => {
                                this.cacheSnapshot(), this.view.renderPromise && await this.view.renderPromise, K(e) && null != t ? (await this.view.renderPage(z.fromHTMLString(t), !1, this.willRender), this.adapter.visitRendered(this), this.complete()) : (await this.view.renderError(z.fromHTMLString(t)), this.adapter.visitRendered(this), this.fail())
                            }))
                        }
                    }
                    getCachedSnapshot() {
                        const e = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();
                        if (e && (!p(this.location) || e.hasAnchor(p(this.location))) && ("restore" == this.action || e.isPreviewable)) return e
                    }
                    getPreloadedSnapshot() {
                        if (this.snapshotHTML) return z.fromHTMLString(this.snapshotHTML)
                    }
                    hasCachedSnapshot() {
                        return null != this.getCachedSnapshot()
                    }
                    loadCachedSnapshot() {
                        const e = this.getCachedSnapshot();
                        if (e) {
                            const t = this.shouldIssueRequest();
                            this.render((async () => {
                                this.cacheSnapshot(), this.isSamePage ? this.adapter.visitRendered(this) : (this.view.renderPromise && await this.view.renderPromise, await this.view.renderPage(e, t, this.willRender), this.adapter.visitRendered(this), t || this.complete())
                            }))
                        }
                    }
                    followRedirect() {
                        var e;
                        this.redirectedToLocation && !this.followedRedirect && (null === (e = this.response) || void 0 === e ? void 0 : e.redirected) && (this.adapter.visitProposedToLocation(this.redirectedToLocation, {
                            action: "replace",
                            response: this.response
                        }), this.followedRedirect = !0)
                    }
                    goToSamePageAnchor() {
                        this.isSamePage && this.render((async () => {
                            this.cacheSnapshot(), this.adapter.visitRendered(this)
                        }))
                    }
                    requestStarted() {
                        this.startRequest()
                    }
                    requestPreventedHandlingResponse(e, t) {}
                    async requestSucceededWithResponse(e, t) {
                        const a = await t.responseHTML,
                            {
                                redirected: i,
                                statusCode: n
                            } = t;
                        null == a ? this.recordResponse({
                            statusCode: J.contentTypeMismatch,
                            redirected: i
                        }) : (this.redirectedToLocation = t.redirected ? t.location : void 0, this.recordResponse({
                            statusCode: n,
                            responseHTML: a,
                            redirected: i
                        }))
                    }
                    async requestFailedWithResponse(e, t) {
                        const a = await t.responseHTML,
                            {
                                redirected: i,
                                statusCode: n
                            } = t;
                        null == a ? this.recordResponse({
                            statusCode: J.contentTypeMismatch,
                            redirected: i
                        }) : this.recordResponse({
                            statusCode: n,
                            responseHTML: a,
                            redirected: i
                        })
                    }
                    requestErrored(e, t) {
                        this.recordResponse({
                            statusCode: J.networkFailure,
                            redirected: !1
                        })
                    }
                    requestFinished() {
                        this.finishRequest()
                    }
                    performScroll() {
                        this.scrolled || ("restore" == this.action ? this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop() : this.scrollToAnchor() || this.view.scrollToTop(), this.isSamePage && this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location), this.scrolled = !0)
                    }
                    scrollToRestoredPosition() {
                        const {
                            scrollPosition: e
                        } = this.restorationData;
                        if (e) return this.view.scrollToPosition(e), !0
                    }
                    scrollToAnchor() {
                        const e = p(this.location);
                        if (null != e) return this.view.scrollToAnchor(e), !0
                    }
                    recordTimingMetric(e) {
                        this.timingMetrics[e] = (new Date).getTime()
                    }
                    getTimingMetrics() {
                        return Object.assign({}, this.timingMetrics)
                    }
                    getHistoryMethodForAction(e) {
                        switch (e) {
                            case "replace":
                                return history.replaceState;
                            case "advance":
                            case "restore":
                                return history.pushState
                        }
                    }
                    hasPreloadedResponse() {
                        return "object" == typeof this.response
                    }
                    shouldIssueRequest() {
                        return !this.isSamePage && ("restore" == this.action ? !this.hasCachedSnapshot() : this.willRender)
                    }
                    cacheSnapshot() {
                        this.snapshotCached || (this.view.cacheSnapshot().then((e => e && this.visitCachedSnapshot(e))), this.snapshotCached = !0)
                    }
                    async render(e) {
                        this.cancelRender(), await new Promise((e => {
                            this.frame = requestAnimationFrame((() => e()))
                        })), await e(), delete this.frame, this.performScroll()
                    }
                    cancelRender() {
                        this.frame && (cancelAnimationFrame(this.frame), delete this.frame)
                    }
                }

                function K(e) {
                    return e >= 200 && e < 300
                }
                class Z {
                    constructor(e) {
                        this.progressBar = new q, this.showProgressBar = () => {
                            this.progressBar.show()
                        }, this.session = e
                    }
                    visitProposedToLocation(e, t) {
                        this.navigator.startVisit(e, k(), t)
                    }
                    visitStarted(e) {
                        e.loadCachedSnapshot(), e.issueRequest(), e.changeHistory(), e.goToSamePageAnchor()
                    }
                    visitRequestStarted(e) {
                        this.progressBar.setValue(0), e.hasCachedSnapshot() || "restore" != e.action ? this.showVisitProgressBarAfterDelay() : this.showProgressBar()
                    }
                    visitRequestCompleted(e) {
                        e.loadResponse()
                    }
                    visitRequestFailedWithStatusCode(e, t) {
                        switch (t) {
                            case J.networkFailure:
                            case J.timeoutFailure:
                            case J.contentTypeMismatch:
                                return this.reload();
                            default:
                                return e.loadResponse()
                        }
                    }
                    visitRequestFinished(e) {
                        this.progressBar.setValue(1), this.hideVisitProgressBar()
                    }
                    visitCompleted(e) {}
                    pageInvalidated() {
                        this.reload()
                    }
                    visitFailed(e) {}
                    visitRendered(e) {}
                    formSubmissionStarted(e) {
                        this.progressBar.setValue(0), this.showFormProgressBarAfterDelay()
                    }
                    formSubmissionFinished(e) {
                        this.progressBar.setValue(1), this.hideFormProgressBar()
                    }
                    showVisitProgressBarAfterDelay() {
                        this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay)
                    }
                    hideVisitProgressBar() {
                        this.progressBar.hide(), null != this.visitProgressBarTimeout && (window.clearTimeout(this.visitProgressBarTimeout), delete this.visitProgressBarTimeout)
                    }
                    showFormProgressBarAfterDelay() {
                        null == this.formProgressBarTimeout && (this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay))
                    }
                    hideFormProgressBar() {
                        this.progressBar.hide(), null != this.formProgressBarTimeout && (window.clearTimeout(this.formProgressBarTimeout), delete this.formProgressBarTimeout)
                    }
                    reload() {
                        window.location.reload()
                    }
                    get navigator() {
                        return this.session.navigator
                    }
                }
                class X {
                    constructor() {
                        this.started = !1
                    }
                    start() {
                        this.started || (this.started = !0, addEventListener("turbo:before-cache", this.removeStaleElements, !1))
                    }
                    stop() {
                        this.started && (this.started = !1, removeEventListener("turbo:before-cache", this.removeStaleElements, !1))
                    }
                    removeStaleElements() {
                        const e = [...document.querySelectorAll('[data-turbo-cache="false"]')];
                        for (const t of e) t.remove()
                    }
                }
                class ee {
                    constructor(e) {
                        this.started = !1, this.submitCaptured = () => {
                            removeEventListener("submit", this.submitBubbled, !1), addEventListener("submit", this.submitBubbled, !1)
                        }, this.submitBubbled = e => {
                            if (!e.defaultPrevented) {
                                const t = e.target instanceof HTMLFormElement ? e.target : void 0,
                                    a = e.submitter || void 0;
                                if (t) {
                                    "dialog" != ((null == a ? void 0 : a.getAttribute("formmethod")) || t.getAttribute("method")) && this.delegate.willSubmitForm(t, a) && (e.preventDefault(), this.delegate.formSubmitted(t, a))
                                }
                            }
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (addEventListener("submit", this.submitCaptured, !0), this.started = !0)
                    }
                    stop() {
                        this.started && (removeEventListener("submit", this.submitCaptured, !0), this.started = !1)
                    }
                }
                class te {
                    constructor(e) {
                        this.element = e, this.linkInterceptor = new B(this, e), this.formInterceptor = new F(this, e)
                    }
                    start() {
                        this.linkInterceptor.start(), this.formInterceptor.start()
                    }
                    stop() {
                        this.linkInterceptor.stop(), this.formInterceptor.stop()
                    }
                    shouldInterceptLinkClick(e, t) {
                        return this.shouldRedirect(e)
                    }
                    linkClickIntercepted(e, t) {
                        const a = this.findFrameElement(e);
                        a && a.delegate.linkClickIntercepted(e, t)
                    }
                    shouldInterceptFormSubmission(e, t) {
                        return this.shouldSubmit(e, t)
                    }
                    formSubmissionIntercepted(e, t) {
                        const a = this.findFrameElement(e, t);
                        a && (a.removeAttribute("reloadable"), a.delegate.formSubmissionIntercepted(e, t))
                    }
                    shouldSubmit(e, t) {
                        var a;
                        const i = h(e, t),
                            n = this.element.ownerDocument.querySelector('meta[name="turbo-root"]'),
                            r = _(null !== (a = null == n ? void 0 : n.content) && void 0 !== a ? a : "/");
                        return this.shouldRedirect(e, t) && v(i, r)
                    }
                    shouldRedirect(e, t) {
                        const a = this.findFrameElement(e, t);
                        return !!a && a != e.closest("turbo-frame")
                    }
                    findFrameElement(e, t) {
                        const a = (null == t ? void 0 : t.getAttribute("data-turbo-frame")) || e.getAttribute("data-turbo-frame");
                        if (a && "_top" != a) {
                            const e = this.element.querySelector(`#${a}:not([disabled])`);
                            if (e instanceof m) return e
                        }
                    }
                }
                class ae {
                    constructor(e) {
                        this.restorationIdentifier = k(), this.restorationData = {}, this.started = !1, this.pageLoaded = !1, this.onPopState = e => {
                            if (this.shouldHandlePopState()) {
                                const {
                                    turbo: t
                                } = e.state || {};
                                if (t) {
                                    this.location = new URL(window.location.href);
                                    const {
                                        restorationIdentifier: e
                                    } = t;
                                    this.restorationIdentifier = e, this.delegate.historyPoppedToLocationWithRestorationIdentifier(this.location, e)
                                }
                            }
                        }, this.onPageLoad = async e => {
                            await Promise.resolve(), this.pageLoaded = !0
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (addEventListener("popstate", this.onPopState, !1), addEventListener("load", this.onPageLoad, !1), this.started = !0, this.replace(new URL(window.location.href)))
                    }
                    stop() {
                        this.started && (removeEventListener("popstate", this.onPopState, !1), removeEventListener("load", this.onPageLoad, !1), this.started = !1)
                    }
                    push(e, t) {
                        this.update(history.pushState, e, t)
                    }
                    replace(e, t) {
                        this.update(history.replaceState, e, t)
                    }
                    update(e, t, a = k()) {
                        const i = {
                            turbo: {
                                restorationIdentifier: a
                            }
                        };
                        e.call(history, i, "", t.href), this.location = t, this.restorationIdentifier = a
                    }
                    getRestorationDataForIdentifier(e) {
                        return this.restorationData[e] || {}
                    }
                    updateRestorationData(e) {
                        const {
                            restorationIdentifier: t
                        } = this, a = this.restorationData[t];
                        this.restorationData[t] = Object.assign(Object.assign({}, a), e)
                    }
                    assumeControlOfScrollRestoration() {
                        var e;
                        this.previousScrollRestoration || (this.previousScrollRestoration = null !== (e = history.scrollRestoration) && void 0 !== e ? e : "auto", history.scrollRestoration = "manual")
                    }
                    relinquishControlOfScrollRestoration() {
                        this.previousScrollRestoration && (history.scrollRestoration = this.previousScrollRestoration, delete this.previousScrollRestoration)
                    }
                    shouldHandlePopState() {
                        return this.pageIsLoaded()
                    }
                    pageIsLoaded() {
                        return this.pageLoaded || "complete" == document.readyState
                    }
                }
                class ie {
                    constructor(e) {
                        this.started = !1, this.clickCaptured = () => {
                            removeEventListener("click", this.clickBubbled, !1), addEventListener("click", this.clickBubbled, !1)
                        }, this.clickBubbled = e => {
                            if (this.clickEventIsSignificant(e)) {
                                const t = e.composedPath && e.composedPath()[0] || e.target,
                                    a = this.findLinkFromClickTarget(t);
                                if (a) {
                                    const t = this.getLocationForLink(a);
                                    this.delegate.willFollowLinkToLocation(a, t) && (e.preventDefault(), this.delegate.followedLinkToLocation(a, t))
                                }
                            }
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (addEventListener("click", this.clickCaptured, !0), this.started = !0)
                    }
                    stop() {
                        this.started && (removeEventListener("click", this.clickCaptured, !0), this.started = !1)
                    }
                    clickEventIsSignificant(e) {
                        return !(e.target && e.target.isContentEditable || e.defaultPrevented || e.which > 1 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey)
                    }
                    findLinkFromClickTarget(e) {
                        if (e instanceof Element) return e.closest("a[href]:not([target^=_]):not([download])")
                    }
                    getLocationForLink(e) {
                        return _(e.getAttribute("href") || "")
                    }
                }

                function ne(e) {
                    return "advance" == e || "replace" == e || "restore" == e
                }
                class re {
                    constructor(e) {
                        this.delegate = e
                    }
                    proposeVisit(e, t = {}) {
                        this.delegate.allowsVisitingLocationWithAction(e, t.action) && (v(e, this.view.snapshot.rootLocation) ? this.delegate.visitProposedToLocation(e, t) : window.location.href = e.toString())
                    }
                    startVisit(e, t, a = {}) {
                        this.stop(), this.currentVisit = new Q(this, _(e), t, Object.assign({
                            referrer: this.location
                        }, a)), this.currentVisit.start()
                    }
                    submitForm(e, t) {
                        this.stop(), this.formSubmission = new P(this, e, t, !0), this.formSubmission.start()
                    }
                    stop() {
                        this.formSubmission && (this.formSubmission.stop(), delete this.formSubmission), this.currentVisit && (this.currentVisit.cancel(), delete this.currentVisit)
                    }
                    get adapter() {
                        return this.delegate.adapter
                    }
                    get view() {
                        return this.delegate.view
                    }
                    get history() {
                        return this.delegate.history
                    }
                    formSubmissionStarted(e) {
                        "function" == typeof this.adapter.formSubmissionStarted && this.adapter.formSubmissionStarted(e)
                    }
                    async formSubmissionSucceededWithResponse(e, t) {
                        if (e == this.formSubmission) {
                            const a = await t.responseHTML;
                            if (a) {
                                e.method != o.get && this.view.clearSnapshotCache();
                                const {
                                    statusCode: i,
                                    redirected: n
                                } = t, r = {
                                    action: this.getActionForFormSubmission(e),
                                    response: {
                                        statusCode: i,
                                        responseHTML: a,
                                        redirected: n
                                    }
                                };
                                this.proposeVisit(t.location, r)
                            }
                        }
                    }
                    async formSubmissionFailedWithResponse(e, t) {
                        const a = await t.responseHTML;
                        if (a) {
                            const e = z.fromHTMLString(a);
                            t.serverError ? await this.view.renderError(e) : await this.view.renderPage(e), this.view.scrollToTop(), this.view.clearSnapshotCache()
                        }
                    }
                    formSubmissionErrored(e, t) {
                        console.error(t)
                    }
                    formSubmissionFinished(e) {
                        "function" == typeof this.adapter.formSubmissionFinished && this.adapter.formSubmissionFinished(e)
                    }
                    visitStarted(e) {
                        this.delegate.visitStarted(e)
                    }
                    visitCompleted(e) {
                        this.delegate.visitCompleted(e)
                    }
                    locationWithActionIsSamePage(e, t) {
                        const a = p(e),
                            i = p(this.view.lastRenderedLocation),
                            n = "restore" === t && void 0 === a;
                        return "replace" !== t && y(e) === y(this.view.lastRenderedLocation) && (n || null != a && a !== i)
                    }
                    visitScrolledToSamePageLocation(e, t) {
                        this.delegate.visitScrolledToSamePageLocation(e, t)
                    }
                    get location() {
                        return this.history.location
                    }
                    get restorationIdentifier() {
                        return this.history.restorationIdentifier
                    }
                    getActionForFormSubmission(e) {
                        const {
                            formElement: t,
                            submitter: a
                        } = e, i = Y("data-turbo-action", a, t);
                        return ne(i) ? i : "advance"
                    }
                }! function (e) {
                    e[e.initial = 0] = "initial", e[e.loading = 1] = "loading", e[e.interactive = 2] = "interactive", e[e.complete = 3] = "complete"
                }(G || (G = {}));
                class se {
                    constructor(e) {
                        this.stage = G.initial, this.started = !1, this.interpretReadyState = () => {
                            const {
                                readyState: e
                            } = this;
                            "interactive" == e ? this.pageIsInteractive() : "complete" == e && this.pageIsComplete()
                        }, this.pageWillUnload = () => {
                            this.delegate.pageWillUnload()
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (this.stage == G.initial && (this.stage = G.loading), document.addEventListener("readystatechange", this.interpretReadyState, !1), addEventListener("pagehide", this.pageWillUnload, !1), this.started = !0)
                    }
                    stop() {
                        this.started && (document.removeEventListener("readystatechange", this.interpretReadyState, !1), removeEventListener("pagehide", this.pageWillUnload, !1), this.started = !1)
                    }
                    pageIsInteractive() {
                        this.stage == G.loading && (this.stage = G.interactive, this.delegate.pageBecameInteractive())
                    }
                    pageIsComplete() {
                        this.pageIsInteractive(), this.stage == G.interactive && (this.stage = G.complete, this.delegate.pageLoaded())
                    }
                    get readyState() {
                        return document.readyState
                    }
                }
                class oe {
                    constructor(e) {
                        this.started = !1, this.onScroll = () => {
                            this.updatePosition({
                                x: window.pageXOffset,
                                y: window.pageYOffset
                            })
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (addEventListener("scroll", this.onScroll, !1), this.onScroll(), this.started = !0)
                    }
                    stop() {
                        this.started && (removeEventListener("scroll", this.onScroll, !1), this.started = !1)
                    }
                    updatePosition(e) {
                        this.delegate.scrollPositionChanged(e)
                    }
                }
                class de {
                    constructor(e) {
                        this.sources = new Set, this.started = !1, this.inspectFetchResponse = e => {
                            const t = function (e) {
                                var t;
                                const a = null === (t = e.detail) || void 0 === t ? void 0 : t.fetchResponse;
                                if (a instanceof M) return a
                            }(e);
                            t && function (e) {
                                var t;
                                return (null !== (t = e.contentType) && void 0 !== t ? t : "").startsWith(I.contentType)
                            }(t) && (e.preventDefault(), this.receiveMessageResponse(t))
                        }, this.receiveMessageEvent = e => {
                            this.started && "string" == typeof e.data && this.receiveMessageHTML(e.data)
                        }, this.delegate = e
                    }
                    start() {
                        this.started || (this.started = !0, addEventListener("turbo:before-fetch-response", this.inspectFetchResponse, !1))
                    }
                    stop() {
                        this.started && (this.started = !1, removeEventListener("turbo:before-fetch-response", this.inspectFetchResponse, !1))
                    }
                    connectStreamSource(e) {
                        this.streamSourceIsConnected(e) || (this.sources.add(e), e.addEventListener("message", this.receiveMessageEvent, !1))
                    }
                    disconnectStreamSource(e) {
                        this.streamSourceIsConnected(e) && (this.sources.delete(e), e.removeEventListener("message", this.receiveMessageEvent, !1))
                    }
                    streamSourceIsConnected(e) {
                        return this.sources.has(e)
                    }
                    async receiveMessageResponse(e) {
                        const t = await e.responseHTML;
                        t && this.receiveMessageHTML(t)
                    }
                    receiveMessageHTML(e) {
                        this.delegate.receivedMessageFromStream(new I(e))
                    }
                }
                class le extends A {
                    async render() {
                        this.replaceHeadAndBody(), this.activateScriptElements()
                    }
                    replaceHeadAndBody() {
                        const {
                            documentElement: e,
                            head: t,
                            body: a
                        } = document;
                        e.replaceChild(this.newHead, t), e.replaceChild(this.newElement, a)
                    }
                    activateScriptElements() {
                        for (const e of this.scriptElements) {
                            const t = e.parentNode;
                            if (t) {
                                const a = this.createScriptElement(e);
                                t.replaceChild(a, e)
                            }
                        }
                    }
                    get newHead() {
                        return this.newSnapshot.headSnapshot.element
                    }
                    get scriptElements() {
                        return [...document.documentElement.querySelectorAll("script")]
                    }
                }
                class ce extends A {
                    get shouldRender() {
                        return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical
                    }
                    prepareToRender() {
                        this.mergeHead()
                    }
                    async render() {
                        this.willRender && this.replaceBody()
                    }
                    finishRendering() {
                        super.finishRendering(), this.isPreview || this.focusFirstAutofocusableElement()
                    }
                    get currentHeadSnapshot() {
                        return this.currentSnapshot.headSnapshot
                    }
                    get newHeadSnapshot() {
                        return this.newSnapshot.headSnapshot
                    }
                    get newElement() {
                        return this.newSnapshot.element
                    }
                    mergeHead() {
                        this.copyNewHeadStylesheetElements(), this.copyNewHeadScriptElements(), this.removeCurrentHeadProvisionalElements(), this.copyNewHeadProvisionalElements()
                    }
                    replaceBody() {
                        this.preservingPermanentElements((() => {
                            this.activateNewBody(), this.assignNewBody()
                        }))
                    }
                    get trackedElementsAreIdentical() {
                        return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature
                    }
                    copyNewHeadStylesheetElements() {
                        for (const e of this.newHeadStylesheetElements) document.head.appendChild(e)
                    }
                    copyNewHeadScriptElements() {
                        for (const e of this.newHeadScriptElements) document.head.appendChild(this.createScriptElement(e))
                    }
                    removeCurrentHeadProvisionalElements() {
                        for (const e of this.currentHeadProvisionalElements) document.head.removeChild(e)
                    }
                    copyNewHeadProvisionalElements() {
                        for (const e of this.newHeadProvisionalElements) document.head.appendChild(e)
                    }
                    activateNewBody() {
                        document.adoptNode(this.newElement), this.activateNewBodyScriptElements()
                    }
                    activateNewBodyScriptElements() {
                        for (const e of this.newBodyScriptElements) {
                            const t = this.createScriptElement(e);
                            e.replaceWith(t)
                        }
                    }
                    assignNewBody() {
                        document.body && this.newElement instanceof HTMLBodyElement ? document.body.replaceWith(this.newElement) : document.documentElement.appendChild(this.newElement)
                    }
                    get newHeadStylesheetElements() {
                        return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot)
                    }
                    get newHeadScriptElements() {
                        return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot)
                    }
                    get currentHeadProvisionalElements() {
                        return this.currentHeadSnapshot.provisionalElements
                    }
                    get newHeadProvisionalElements() {
                        return this.newHeadSnapshot.provisionalElements
                    }
                    get newBodyScriptElements() {
                        return this.newElement.querySelectorAll("script")
                    }
                }
                class ue {
                    constructor(e) {
                        this.keys = [], this.snapshots = {}, this.size = e
                    }
                    has(e) {
                        return $(e) in this.snapshots
                    }
                    get(e) {
                        if (this.has(e)) {
                            const t = this.read(e);
                            return this.touch(e), t
                        }
                    }
                    put(e, t) {
                        return this.write(e, t), this.touch(e), t
                    }
                    clear() {
                        this.snapshots = {}
                    }
                    read(e) {
                        return this.snapshots[$(e)]
                    }
                    write(e, t) {
                        this.snapshots[$(e)] = t
                    }
                    touch(e) {
                        const t = $(e),
                            a = this.keys.indexOf(t);
                        a > -1 && this.keys.splice(a, 1), this.keys.unshift(t), this.trim()
                    }
                    trim() {
                        for (const e of this.keys.splice(this.size)) delete this.snapshots[e]
                    }
                }
                class me extends H {
                    constructor() {
                        super(...arguments), this.snapshotCache = new ue(10), this.lastRenderedLocation = new URL(location.href)
                    }
                    renderPage(e, t = !1, a = !0) {
                        const i = new ce(this.snapshot, e, t, a);
                        return this.render(i)
                    }
                    renderError(e) {
                        const t = new le(this.snapshot, e, !1);
                        return this.render(t)
                    }
                    clearSnapshotCache() {
                        this.snapshotCache.clear()
                    }
                    async cacheSnapshot() {
                        if (this.shouldCacheSnapshot) {
                            this.delegate.viewWillCacheSnapshot();
                            const {
                                snapshot: e,
                                lastRenderedLocation: t
                            } = this;
                            await new Promise((e => setTimeout((() => e()), 0)));
                            const a = e.clone();
                            return this.snapshotCache.put(t, a), a
                        }
                    }
                    getCachedSnapshotForLocation(e) {
                        return this.snapshotCache.get(e)
                    }
                    get snapshot() {
                        return z.fromElement(this.element)
                    }
                    get shouldCacheSnapshot() {
                        return this.snapshot.isCacheable
                    }
                }

                function _e(e) {
                    Object.defineProperties(e, pe)
                }
                const pe = {
                        absoluteURL: {
                            get() {
                                return this.toString()
                            }
                        }
                    },
                    he = new class {
                        constructor() {
                            this.navigator = new re(this), this.history = new ae(this), this.view = new me(this, document.documentElement), this.adapter = new Z(this), this.pageObserver = new se(this), this.cacheObserver = new X, this.linkClickObserver = new ie(this), this.formSubmitObserver = new ee(this), this.scrollObserver = new oe(this), this.streamObserver = new de(this), this.frameRedirector = new te(document.documentElement), this.drive = !0, this.enabled = !0, this.progressBarDelay = 500, this.started = !1
                        }
                        start() {
                            this.started || (this.pageObserver.start(), this.cacheObserver.start(), this.linkClickObserver.start(), this.formSubmitObserver.start(), this.scrollObserver.start(), this.streamObserver.start(), this.frameRedirector.start(), this.history.start(), this.started = !0, this.enabled = !0)
                        }
                        disable() {
                            this.enabled = !1
                        }
                        stop() {
                            this.started && (this.pageObserver.stop(), this.cacheObserver.stop(), this.linkClickObserver.stop(), this.formSubmitObserver.stop(), this.scrollObserver.stop(), this.streamObserver.stop(), this.frameRedirector.stop(), this.history.stop(), this.started = !1)
                        }
                        registerAdapter(e) {
                            this.adapter = e
                        }
                        visit(e, t = {}) {
                            this.navigator.proposeVisit(_(e), t)
                        }
                        connectStreamSource(e) {
                            this.streamObserver.connectStreamSource(e)
                        }
                        disconnectStreamSource(e) {
                            this.streamObserver.disconnectStreamSource(e)
                        }
                        renderStreamMessage(e) {
                            document.documentElement.appendChild(I.wrap(e).fragment)
                        }
                        clearCache() {
                            this.view.clearSnapshotCache()
                        }
                        setProgressBarDelay(e) {
                            this.progressBarDelay = e
                        }
                        get location() {
                            return this.history.location
                        }
                        get restorationIdentifier() {
                            return this.history.restorationIdentifier
                        }
                        historyPoppedToLocationWithRestorationIdentifier(e, t) {
                            this.enabled ? this.navigator.startVisit(e, t, {
                                action: "restore",
                                historyChanged: !0
                            }) : this.adapter.pageInvalidated()
                        }
                        scrollPositionChanged(e) {
                            this.history.updateRestorationData({
                                scrollPosition: e
                            })
                        }
                        willFollowLinkToLocation(e, t) {
                            return this.elementDriveEnabled(e) && v(t, this.snapshot.rootLocation) && this.applicationAllowsFollowingLinkToLocation(e, t)
                        }
                        followedLinkToLocation(e, t) {
                            const a = this.getActionForLink(e);
                            this.convertLinkWithMethodClickToFormSubmission(e) || this.visit(t.href, {
                                action: a
                            })
                        }
                        convertLinkWithMethodClickToFormSubmission(e) {
                            const t = e.getAttribute("data-turbo-method");
                            if (t) {
                                const a = document.createElement("form");
                                a.method = t, a.action = e.getAttribute("href") || "undefined", a.hidden = !0, e.hasAttribute("data-turbo-confirm") && a.setAttribute("data-turbo-confirm", e.getAttribute("data-turbo-confirm"));
                                const i = this.getTargetFrameForLink(e);
                                return i ? (a.setAttribute("data-turbo-frame", i), a.addEventListener("turbo:submit-start", (() => a.remove()))) : a.addEventListener("submit", (() => a.remove())), document.body.appendChild(a), w("submit", {
                                    cancelable: !0,
                                    target: a
                                })
                            }
                            return !1
                        }
                        allowsVisitingLocationWithAction(e, t) {
                            return this.locationWithActionIsSamePage(e, t) || this.applicationAllowsVisitingLocation(e)
                        }
                        visitProposedToLocation(e, t) {
                            _e(e), this.adapter.visitProposedToLocation(e, t)
                        }
                        visitStarted(e) {
                            _e(e.location), e.silent || this.notifyApplicationAfterVisitingLocation(e.location, e.action)
                        }
                        visitCompleted(e) {
                            this.notifyApplicationAfterPageLoad(e.getTimingMetrics())
                        }
                        locationWithActionIsSamePage(e, t) {
                            return this.navigator.locationWithActionIsSamePage(e, t)
                        }
                        visitScrolledToSamePageLocation(e, t) {
                            this.notifyApplicationAfterVisitingSamePageLocation(e, t)
                        }
                        willSubmitForm(e, t) {
                            const a = h(e, t);
                            return this.elementDriveEnabled(e) && (!t || this.elementDriveEnabled(t)) && v(_(a), this.snapshot.rootLocation)
                        }
                        formSubmitted(e, t) {
                            this.navigator.submitForm(e, t)
                        }
                        pageBecameInteractive() {
                            this.view.lastRenderedLocation = this.location, this.notifyApplicationAfterPageLoad()
                        }
                        pageLoaded() {
                            this.history.assumeControlOfScrollRestoration()
                        }
                        pageWillUnload() {
                            this.history.relinquishControlOfScrollRestoration()
                        }
                        receivedMessageFromStream(e) {
                            this.renderStreamMessage(e)
                        }
                        viewWillCacheSnapshot() {
                            var e;
                            (null === (e = this.navigator.currentVisit) || void 0 === e ? void 0 : e.silent) || this.notifyApplicationBeforeCachingSnapshot()
                        }
                        allowsImmediateRender({
                            element: e
                        }, t) {
                            return !this.notifyApplicationBeforeRender(e, t).defaultPrevented
                        }
                        viewRenderedSnapshot(e, t) {
                            this.view.lastRenderedLocation = this.history.location, this.notifyApplicationAfterRender()
                        }
                        viewInvalidated() {
                            this.adapter.pageInvalidated()
                        }
                        frameLoaded(e) {
                            this.notifyApplicationAfterFrameLoad(e)
                        }
                        frameRendered(e, t) {
                            this.notifyApplicationAfterFrameRender(e, t)
                        }
                        applicationAllowsFollowingLinkToLocation(e, t) {
                            return !this.notifyApplicationAfterClickingLinkToLocation(e, t).defaultPrevented
                        }
                        applicationAllowsVisitingLocation(e) {
                            return !this.notifyApplicationBeforeVisitingLocation(e).defaultPrevented
                        }
                        notifyApplicationAfterClickingLinkToLocation(e, t) {
                            return w("turbo:click", {
                                target: e,
                                detail: {
                                    url: t.href
                                },
                                cancelable: !0
                            })
                        }
                        notifyApplicationBeforeVisitingLocation(e) {
                            return w("turbo:before-visit", {
                                detail: {
                                    url: e.href
                                },
                                cancelable: !0
                            })
                        }
                        notifyApplicationAfterVisitingLocation(e, t) {
                            return T(document.documentElement), w("turbo:visit", {
                                detail: {
                                    url: e.href,
                                    action: t
                                }
                            })
                        }
                        notifyApplicationBeforeCachingSnapshot() {
                            return w("turbo:before-cache")
                        }
                        notifyApplicationBeforeRender(e, t) {
                            return w("turbo:before-render", {
                                detail: {
                                    newBody: e,
                                    resume: t
                                },
                                cancelable: !0
                            })
                        }
                        notifyApplicationAfterRender() {
                            return w("turbo:render")
                        }
                        notifyApplicationAfterPageLoad(e = {}) {
                            return S(document.documentElement), w("turbo:load", {
                                detail: {
                                    url: this.location.href,
                                    timing: e
                                }
                            })
                        }
                        notifyApplicationAfterVisitingSamePageLocation(e, t) {
                            dispatchEvent(new HashChangeEvent("hashchange", {
                                oldURL: e.toString(),
                                newURL: t.toString()
                            }))
                        }
                        notifyApplicationAfterFrameLoad(e) {
                            return w("turbo:frame-load", {
                                target: e
                            })
                        }
                        notifyApplicationAfterFrameRender(e, t) {
                            return w("turbo:frame-render", {
                                detail: {
                                    fetchResponse: e
                                },
                                target: t,
                                cancelable: !0
                            })
                        }
                        elementDriveEnabled(e) {
                            const t = null == e ? void 0 : e.closest("[data-turbo]");
                            return this.drive ? !t || "false" != t.getAttribute("data-turbo") : !!t && "true" == t.getAttribute("data-turbo")
                        }
                        getActionForLink(e) {
                            const t = e.getAttribute("data-turbo-action");
                            return ne(t) ? t : "advance"
                        }
                        getTargetFrameForLink(e) {
                            const t = e.getAttribute("data-turbo-frame");
                            if (t) return t; {
                                const t = e.closest("turbo-frame");
                                if (t) return t.id
                            }
                        }
                        get snapshot() {
                            return this.view.snapshot
                        }
                    },
                    {
                        navigator: ge
                    } = he;

                function fe() {
                    he.start()
                }

                function ve(e) {
                    he.registerAdapter(e)
                }

                function ye(e, t) {
                    he.visit(e, t)
                }

                function $e(e) {
                    he.connectStreamSource(e)
                }

                function Me(e) {
                    he.disconnectStreamSource(e)
                }

                function we(e) {
                    he.renderStreamMessage(e)
                }

                function be() {
                    he.clearCache()
                }

                function Le(e) {
                    he.setProgressBarDelay(e)
                }

                function De(e) {
                    P.confirmMethod = e
                }
                var ke = Object.freeze({
                    __proto__: null,
                    navigator: ge,
                    session: he,
                    PageRenderer: ce,
                    PageSnapshot: z,
                    start: fe,
                    registerAdapter: ve,
                    visit: ye,
                    connectStreamSource: $e,
                    disconnectStreamSource: Me,
                    renderStreamMessage: we,
                    clearCache: be,
                    setProgressBarDelay: Le,
                    setConfirmMethod: De
                });
                class Ye {
                    constructor(e) {
                        this.visitCachedSnapshot = ({
                            element: e
                        }) => {
                            var t;
                            const {
                                id: a,
                                clone: i
                            } = this;
                            null === (t = e.querySelector("#" + a)) || void 0 === t || t.replaceWith(i)
                        }, this.clone = e.cloneNode(!0), this.id = e.id
                    }
                }

                function Te(e) {
                    if (null != e) {
                        const t = document.getElementById(e);
                        if (t instanceof m) return t
                    }
                }

                function Se(e, t) {
                    if (e) {
                        const i = e.getAttribute("src");
                        if (null != i && null != t && (a = t, _(i).href == _(a).href)) throw new Error(`Matching <turbo-frame id="${e.id}"> element has a source URL which references itself`);
                        if (e.ownerDocument !== document && (e = document.importNode(e, !0)), e instanceof m) return e.connectedCallback(), e.disconnectedCallback(), e
                    }
                    var a
                }
                const xe = {
                    after() {
                        this.targetElements.forEach((e => {
                            var t;
                            return null === (t = e.parentElement) || void 0 === t ? void 0 : t.insertBefore(this.templateContent, e.nextSibling)
                        }))
                    },
                    append() {
                        this.removeDuplicateTargetChildren(), this.targetElements.forEach((e => e.append(this.templateContent)))
                    },
                    before() {
                        this.targetElements.forEach((e => {
                            var t;
                            return null === (t = e.parentElement) || void 0 === t ? void 0 : t.insertBefore(this.templateContent, e)
                        }))
                    },
                    prepend() {
                        this.removeDuplicateTargetChildren(), this.targetElements.forEach((e => e.prepend(this.templateContent)))
                    },
                    remove() {
                        this.targetElements.forEach((e => e.remove()))
                    },
                    replace() {
                        this.targetElements.forEach((e => e.replaceWith(this.templateContent)))
                    },
                    update() {
                        this.targetElements.forEach((e => {
                            e.innerHTML = "", e.append(this.templateContent)
                        }))
                    }
                };
                class Ce extends HTMLElement {
                    async connectedCallback() {
                        try {
                            await this.render()
                        } catch (e) {
                            console.error(e)
                        } finally {
                            this.disconnect()
                        }
                    }
                    async render() {
                        var e;
                        return null !== (e = this.renderPromise) && void 0 !== e ? e : this.renderPromise = (async () => {
                            this.dispatchEvent(this.beforeRenderEvent) && (await b(), this.performAction())
                        })()
                    }
                    disconnect() {
                        try {
                            this.remove()
                        } catch (e) {}
                    }
                    removeDuplicateTargetChildren() {
                        this.duplicateChildren.forEach((e => e.remove()))
                    }
                    get duplicateChildren() {
                        var e;
                        const t = this.targetElements.flatMap((e => [...e.children])).filter((e => !!e.id)),
                            a = [...null === (e = this.templateContent) || void 0 === e ? void 0 : e.children].filter((e => !!e.id)).map((e => e.id));
                        return t.filter((e => a.includes(e.id)))
                    }
                    get performAction() {
                        if (this.action) {
                            const e = xe[this.action];
                            if (e) return e;
                            this.raise("unknown action")
                        }
                        this.raise("action attribute is missing")
                    }
                    get targetElements() {
                        return this.target ? this.targetElementsById : this.targets ? this.targetElementsByQuery : void this.raise("target or targets attribute is missing")
                    }
                    get templateContent() {
                        return this.templateElement.content.cloneNode(!0)
                    }
                    get templateElement() {
                        if (this.firstElementChild instanceof HTMLTemplateElement) return this.firstElementChild;
                        this.raise("first child element must be a <template> element")
                    }
                    get action() {
                        return this.getAttribute("action")
                    }
                    get target() {
                        return this.getAttribute("target")
                    }
                    get targets() {
                        return this.getAttribute("targets")
                    }
                    raise(e) {
                        throw new Error(`${this.description}: ${e}`)
                    }
                    get description() {
                        var e, t;
                        return null !== (t = (null !== (e = this.outerHTML.match(/<[^>]+>/)) && void 0 !== e ? e : [])[0]) && void 0 !== t ? t : "<turbo-stream>"
                    }
                    get beforeRenderEvent() {
                        return new CustomEvent("turbo:before-stream-render", {
                            bubbles: !0,
                            cancelable: !0
                        })
                    }
                    get targetElementsById() {
                        var e;
                        const t = null === (e = this.ownerDocument) || void 0 === e ? void 0 : e.getElementById(this.target);
                        return null !== t ? [t] : []
                    }
                    get targetElementsByQuery() {
                        var e;
                        const t = null === (e = this.ownerDocument) || void 0 === e ? void 0 : e.querySelectorAll(this.targets);
                        return 0 !== t.length ? Array.prototype.slice.call(t) : []
                    }
                }
                m.delegateConstructor = class {
                    constructor(e) {
                        this.fetchResponseLoaded = e => {}, this.currentFetchRequest = null, this.resolveVisitPromise = () => {}, this.connected = !1, this.hasBeenLoaded = !1, this.settingSourceURL = !1, this.element = e, this.view = new O(this, this.element), this.appearanceObserver = new C(this, this.element), this.linkInterceptor = new B(this, this.element), this.formInterceptor = new F(this, this.element)
                    }
                    connect() {
                        this.connected || (this.connected = !0, this.reloadable = !1, this.loadingStyle == s.lazy && this.appearanceObserver.start(), this.linkInterceptor.start(), this.formInterceptor.start(), this.sourceURLChanged())
                    }
                    disconnect() {
                        this.connected && (this.connected = !1, this.appearanceObserver.stop(), this.linkInterceptor.stop(), this.formInterceptor.stop())
                    }
                    disabledChanged() {
                        this.loadingStyle == s.eager && this.loadSourceURL()
                    }
                    sourceURLChanged() {
                        (this.loadingStyle == s.eager || this.hasBeenLoaded) && this.loadSourceURL()
                    }
                    loadingStyleChanged() {
                        this.loadingStyle == s.lazy ? this.appearanceObserver.start() : (this.appearanceObserver.stop(), this.loadSourceURL())
                    }
                    async loadSourceURL() {
                        if (!this.settingSourceURL && this.enabled && this.isActive && (this.reloadable || this.sourceURL != this.currentURL)) {
                            const e = this.currentURL;
                            if (this.currentURL = this.sourceURL, this.sourceURL) try {
                                this.element.loaded = this.visit(_(this.sourceURL)), this.appearanceObserver.stop(), await this.element.loaded, this.hasBeenLoaded = !0
                            } catch (t) {
                                throw this.currentURL = e, t
                            }
                        }
                    }
                    async loadResponse(e) {
                        (e.redirected || e.succeeded && e.isHTML) && (this.sourceURL = e.response.url);
                        try {
                            const t = await e.responseHTML;
                            if (t) {
                                const {
                                    body: a
                                } = L(t), i = new j(await this.extractForeignFrameElement(a)), n = new R(this.view.snapshot, i, !1, !1);
                                this.view.renderPromise && await this.view.renderPromise, await this.view.render(n), he.frameRendered(e, this.element), he.frameLoaded(this.element), this.fetchResponseLoaded(e)
                            }
                        } catch (e) {
                            console.error(e), this.view.invalidate()
                        } finally {
                            this.fetchResponseLoaded = () => {}
                        }
                    }
                    elementAppearedInViewport(e) {
                        this.loadSourceURL()
                    }
                    shouldInterceptLinkClick(e, t) {
                        return !e.hasAttribute("data-turbo-method") && this.shouldInterceptNavigation(e)
                    }
                    linkClickIntercepted(e, t) {
                        this.reloadable = !0, this.navigateFrame(e, t)
                    }
                    shouldInterceptFormSubmission(e, t) {
                        return this.shouldInterceptNavigation(e, t)
                    }
                    formSubmissionIntercepted(e, t) {
                        this.formSubmission && this.formSubmission.stop(), this.reloadable = !1, this.formSubmission = new P(this, e, t);
                        const {
                            fetchRequest: a
                        } = this.formSubmission;
                        this.prepareHeadersForRequest(a.headers, a), this.formSubmission.start()
                    }
                    prepareHeadersForRequest(e, t) {
                        e["Turbo-Frame"] = this.id
                    }
                    requestStarted(e) {
                        T(this.element)
                    }
                    requestPreventedHandlingResponse(e, t) {
                        this.resolveVisitPromise()
                    }
                    async requestSucceededWithResponse(e, t) {
                        await this.loadResponse(t), this.resolveVisitPromise()
                    }
                    requestFailedWithResponse(e, t) {
                        console.error(t), this.resolveVisitPromise()
                    }
                    requestErrored(e, t) {
                        console.error(t), this.resolveVisitPromise()
                    }
                    requestFinished(e) {
                        S(this.element)
                    }
                    formSubmissionStarted({
                        formElement: e
                    }) {
                        T(e, this.findFrameElement(e))
                    }
                    formSubmissionSucceededWithResponse(e, t) {
                        const a = this.findFrameElement(e.formElement, e.submitter);
                        this.proposeVisitIfNavigatedWithAction(a, e.formElement, e.submitter), a.delegate.loadResponse(t)
                    }
                    formSubmissionFailedWithResponse(e, t) {
                        this.element.delegate.loadResponse(t)
                    }
                    formSubmissionErrored(e, t) {
                        console.error(t)
                    }
                    formSubmissionFinished({
                        formElement: e
                    }) {
                        S(e, this.findFrameElement(e))
                    }
                    allowsImmediateRender(e, t) {
                        return !0
                    }
                    viewRenderedSnapshot(e, t) {}
                    viewInvalidated() {}
                    async visit(e) {
                        var t;
                        const a = new x(this, o.get, e, new URLSearchParams, this.element);
                        return null === (t = this.currentFetchRequest) || void 0 === t || t.cancel(), this.currentFetchRequest = a, new Promise((e => {
                            this.resolveVisitPromise = () => {
                                this.resolveVisitPromise = () => {}, this.currentFetchRequest = null, e()
                            }, a.perform()
                        }))
                    }
                    navigateFrame(e, t, a) {
                        const i = this.findFrameElement(e, a);
                        this.proposeVisitIfNavigatedWithAction(i, e, a), i.setAttribute("reloadable", ""), i.src = t
                    }
                    proposeVisitIfNavigatedWithAction(e, t, a) {
                        const i = Y("data-turbo-action", a, t, e);
                        if (ne(i)) {
                            const {
                                visitCachedSnapshot: t
                            } = new Ye(e);
                            e.delegate.fetchResponseLoaded = a => {
                                if (e.src) {
                                    const {
                                        statusCode: n,
                                        redirected: r
                                    } = a, s = {
                                        statusCode: n,
                                        redirected: r,
                                        responseHTML: e.ownerDocument.documentElement.outerHTML
                                    };
                                    he.visit(e.src, {
                                        action: i,
                                        response: s,
                                        visitCachedSnapshot: t,
                                        willRender: !1
                                    })
                                }
                            }
                        }
                    }
                    findFrameElement(e, t) {
                        var a;
                        return null !== (a = Te(Y("data-turbo-frame", t, e) || this.element.getAttribute("target"))) && void 0 !== a ? a : this.element
                    }
                    async extractForeignFrameElement(e) {
                        let t;
                        const a = CSS.escape(this.id);
                        try {
                            if (t = Se(e.querySelector(`turbo-frame#${a}`), this.currentURL)) return t;
                            if (t = Se(e.querySelector(`turbo-frame[src][recurse~=${a}]`), this.currentURL)) return await t.loaded, await this.extractForeignFrameElement(t);
                            console.error(`Response has no matching <turbo-frame id="${a}"> element`)
                        } catch (e) {
                            console.error(e)
                        }
                        return new m
                    }
                    formActionIsVisitable(e, t) {
                        return v(_(h(e, t)), this.rootLocation)
                    }
                    shouldInterceptNavigation(e, t) {
                        const a = Y("data-turbo-frame", t, e) || this.element.getAttribute("target");
                        if (e instanceof HTMLFormElement && !this.formActionIsVisitable(e, t)) return !1;
                        if (!this.enabled || "_top" == a) return !1;
                        if (a) {
                            const e = Te(a);
                            if (e) return !e.disabled
                        }
                        return !!he.elementDriveEnabled(e) && !(t && !he.elementDriveEnabled(t))
                    }
                    get id() {
                        return this.element.id
                    }
                    get enabled() {
                        return !this.element.disabled
                    }
                    get sourceURL() {
                        if (this.element.src) return this.element.src
                    }
                    get reloadable() {
                        return this.findFrameElement(this.element).hasAttribute("reloadable")
                    }
                    set reloadable(e) {
                        const t = this.findFrameElement(this.element);
                        e ? t.setAttribute("reloadable", "") : t.removeAttribute("reloadable")
                    }
                    set sourceURL(e) {
                        this.settingSourceURL = !0, this.element.src = null != e ? e : null, this.currentURL = this.element.src, this.settingSourceURL = !1
                    }
                    get loadingStyle() {
                        return this.element.loading
                    }
                    get isLoading() {
                        return void 0 !== this.formSubmission || void 0 !== this.resolveVisitPromise()
                    }
                    get isActive() {
                        return this.element.isActive && this.connected
                    }
                    get rootLocation() {
                        var e;
                        const t = this.element.ownerDocument.querySelector('meta[name="turbo-root"]');
                        return _(null !== (e = null == t ? void 0 : t.content) && void 0 !== e ? e : "/")
                    }
                }, customElements.define("turbo-frame", m), customElements.define("turbo-stream", Ce), (() => {
                    let e = document.currentScript;
                    if (e && !e.hasAttribute("data-turbo-suppress-warning"))
                        for (; e = e.parentElement;)
                            if (e == document.body) return console.warn(D `
        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!

        Load your application’s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.

        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements

        ——
        Suppress this warning by adding a "data-turbo-suppress-warning" attribute to: %s
      `, e.outerHTML)
                })(), window.Turbo = ke, fe(), window.Turbo = i, fe()
            },
            6550: () => {
                document.addEventListener("turbo:load", (function () {
                    $("#language").select2({
                        width: "100%",
                        dropdownParent: $("#changeLanguageModal")
                    })
                })), window.renderProfileData = function () {
                    $.ajax({
                        url: $(".profileUrl").val(),
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#editUserId").val(t.id), $("#firstName").val(t.first_name), $("#lastName").val(t.last_name), $("#email").val(t.email), $("#phone").val(t.phone), $("#editPhoto").css("background-image", 'url("' + t.image_url + '")'), $("#editProfileModal").modal("show")
                            }
                        }
                    })
                }, window.displayProfilePhoto = function (e, t) {
                    var a = !0;
                    if (e.files && e.files[0]) {
                        var i = new FileReader;
                        i.onload = function (e) {
                            var i = new Image;
                            i.src = e.target.result, i.onload = function () {
                                $(t).attr("src", e.target.result), a = !0
                            }
                        }, a && (i.readAsDataURL(e.files[0]), $(t).show())
                    }
                }, listenSubmit("#changePasswordForm", (function (e) {
                    if (e.preventDefault(), ! function () {
                            var e = $("#pfCurrentPassword").val().trim(),
                                t = $("#pfNewPassword").val().trim(),
                                a = $("#pfNewConfirmPassword").val().trim();
                            if ("" == e || "" == t || "" == a) return $("#editPasswordValidationErrorsBox").show().html(Lang.get("messages.web_password.please_fill_all_the_required_fields")), !1;
                            return !0
                        }()) return !1;
                    var t = jQuery(this).find("#btnPrPasswordEditSave");
                    t.button("loading"), $.ajax({
                        url: $(".changePasswordUrl").val(),
                        type: "post",
                        data: new FormData($(this)[0]),
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            e.success && ($("#changePasswordModal").modal("hide"), displaySuccessMessage(e.message))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#editProfileForm", (function (e) {
                    if (e.preventDefault(), "" !== $(".error-msg").text()) return $(".phoneNumber").focus(), !1;
                    var t = jQuery(this).find("#btnPrEditSave");
                    t.button("loading"), $.ajax({
                        url: $(".profileUpdateUrl").val(),
                        type: "post",
                        data: new FormData($(this)[0]),
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), $("#editProfileModal").modal("hide"), setTimeout((function () {
                                location.reload()
                            }), 2e3)
                        },
                        error: function (e) {
                            manageAjaxErrors(e, "editProfileValidationErrorsBox")
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenSubmit("#changeLanguageForm", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnLanguageChange");
                    t.button("loading"), $.ajax({
                        url: $(".updateLanguageURL").val(),
                        type: "post",
                        data: new FormData($(this)[0]),
                        processData: !1,
                        contentType: !1,
                        success: function (e) {
                            displaySuccessMessage(e.message), setTimeout((function () {
                                location.reload()
                            }), 2e3)
                        },
                        error: function (e) {
                            manageAjaxErrors(e, "editProfileValidationErrorsBox")
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenHiddenBsModal("#editProfileModal", (function () {
                    resetModalForm("#editProfileForm", "#editProfileValidationErrorsBox"), $("#change-btn").show()
                })), listenClick(".editProfile", (function (e) {
                    $(e.currentTarget).attr("data-id");
                    renderProfileData()
                })), listenChange("#profileImage", (function () {
                    var e = $(this).val().split(".").pop().toLowerCase(); - 1 == $.inArray(e, ["gif", "png", "jpg", "jpeg"]) ? ($(this).val(""), displayErrorMessage(Lang.get("messages.user.validate_image_type"))) : displayProfilePhoto(this, "#editPhoto"), $("#change-btn").hide()
                })), listenClick(".changeType", (function (e) {
                    var t = $(this).parent().siblings();
                    "password" == t.attr("type") ? ($(this).children().addClass("icon-eye"), $(this).children().removeClass("icon-ban"), t.attr("type", "text")) : ($(this).children().removeClass("icon-eye"), $(this).children().addClass("icon-ban"), t.attr("type", "password"))
                })), listenHiddenBsModal("#changePasswordModal", (function () {
                    resetModalForm("#changePasswordForm", "#editPasswordValidationErrorsBox")
                })), listenHiddenBsModal("#changeLanguageModal", (function () {
                    $("#language").val($(".userCurrentLanguage").val()).trigger("change.select2")
                })), listenClick(".remove-profile-image", (function () {
                    defaultImagePreview("#editPhoto", 1)
                }))
            },
            1693: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#userDob").length) return;
                    $("#userDob").flatpickr({
                        maxDate: new Date,
                        locale: $(".userCurrentLanguage").val()
                    })
                })), listen("submit", "#createUserForm, #editUserForm", (function () {
                    $("#userBtnSave").attr("disabled", !0)
                })), listenKeyup("#userFacebookUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#userTwitterUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#userInstagramUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenKeyup("#userLinkedInUrl", (function () {
                    this.value = this.value.toLowerCase()
                })), listenSubmit("#createUserForm, #editUserForm", (function () {
                    if ("" !== $(".error-msg").text()) return $("#userPhoneNumber").focus(), !1;
                    var e = $("#userFacebookUrl").val(),
                        t = $("#userTwitterUrl").val(),
                        a = $("#userInstagramUrl").val(),
                        i = $("#userLinkedInUrl").val(),
                        n = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i),
                        r = new RegExp(/^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i),
                        s = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i),
                        o = new RegExp(/^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i);
                    return "" != e && !e.match(n) ? (displayErrorMessage(Lang.get("messages.user.validate_facebook_url")), $("#userBtnSave").attr("disabled", !1), !1) : "" != t && !t.match(r) ? (displayErrorMessage(Lang.get("messages.user.validate_twitter_url")), $("#userBtnSave").attr("disabled", !1), !1) : "" != a && !a.match(s) ? (displayErrorMessage(Lang.get("messages.user.validate_instagram_url")), $("#userBtnSave").attr("disabled", !1), !1) : "" == i || !!i.match(o) ? void 0 : (displayErrorMessage(Lang.get("messages.user.validate_linkedin_url")), $("#userBtnSave").attr("disabled", !1), !1)
                })), listen("keyup keypress", "#createUserForm, #editUserForm", (function (e) {
                    if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1
                })), listen("change", "#userProfileImage", (function () {
                    var e = function (e, t) {
                        var a = $(e).val().split(".").pop().toLowerCase();
                        if (-1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])) return !1;
                        return $(t).addClass("d-none"), $("#userBtnSave").attr("disabled", !1), a
                    }($(this), "#userValidationErrorsBox");
                    isEmpty(e) || 0 == e ? ($(this).val(""), $("#userValidationErrorsBox").removeClass("d-none hide"), $("#userValidationErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=userValidationErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#userValidationErrorsBox").html("").hide(), displayDocument(this, "#userPreviewImage", e))
                })), listen("click", ".remove-users-image", (function () {
                    defaultImagePreview("#userPreviewImage", 1)
                }))
            },
            1613: () => {
                listen("click", ".user-delete-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#indexUserUrl").val() + "/" + t, "", Lang.get("messages.user.user"))
                })), listen("change", ".user-status", (function (e) {
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#indexUserUrl").val() + "/" + t + "/active-deactive",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listen("click", ".show-user-btn", (function (e) {
                    e.preventDefault();
                    var t, a = $(e.currentTarget).attr("data-id");
                    t = a, $.ajax({
                        url: $("#usersShowModal").val() + "/" + t,
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t;
                                $("#showUserFirst_name").text(e.data.first_name), $("#showUserLast_name").text(e.data.last_name), $("#showUserEmail").text(e.data.email), $("#showUserRole").text(e.data.roles[0].name), $("#showUserPhone").text(null !== (t = e.data.phone) && void 0 !== t ? t : Lang.get("messages.common.n/a")), $("#showUserGender").text(e.data.gender_string), $("#showUserDob").text(""), null != e.data.dob && $("#showUserDob").text(moment(e.data.dob).format("Mo MMM, YYYY")), $("#showUserStatus").empty();
                                var a = $("#userActive").val(),
                                    i = $("#userDeActive").val();
                                1 == e.data.status ? $("#showUserStatus").append('<span class="badge bg-light-success">' + a + "</span>") : $("#showUserStatus").append('<span class="badge bg-light-danger">' + i + "</span>"), moment.locale($("#userLanguage").val()), $("#showUserCreated_on").text(moment(e.data.created_at).fromNow()), $("#showUserUpdated_on").text(moment(e.data.updated_at).fromNow()), $("#showUserProfilePicture").attr("src", e.data.image_url), setValueOfEmptySpan(), $("#showUser").appendTo("body").modal("show")
                            }
                        },
                        error: function (e) {
                            displayErrorMessage(e.responseJSON.message)
                        }
                    })
                })), listen("change", ".is-user-verified", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    $.ajax({
                        url: $("#indexUserUrl").val() + "/" + t + "/is-verified",
                        method: "post",
                        cache: !1,
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), livewire.emit("refresh"))
                        }
                    })
                })), listenChange("#usersStatusArr", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                })), listenChange("#userRoleArr", (function () {
                    window.livewire.emit("changeRoleFilter", "roleFilter", $(this).val())
                })), listenClick("#userResetFilter", (function () {
                    $("#userRoleArr").val(0).trigger("change"), $("#usersStatusArr").val(0).trigger("change"), hideDropdownManually($("#userFilterButton"), $(".dropdown-menu"))
                }))
            },
            9113: () => {},
            3851: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#vPatientDoesGivenDate").length && !$("#editVPatientDoesGivenDate").length) return;
                    $("#vPatientDoesGivenDate,#editVPatientDoesGivenDate").flatpickr({
                        enableTime: !0,
                        defaultDate: new Date,
                        dateFormat: "Y-m-d H:i",
                        locale: $(".userCurrentLanguage").val()
                    });
                    listenShownBsModal("#add_vaccinated_patient_modal", (function () {
                        $("#vPatientName,#vPatientVaccinationName").select2({
                            width: "100%",
                            dropdownParent: $("#add_vaccinated_patient_modal")
                        })
                    })), listenShownBsModal("#edit_vaccinated_patient_modal", (function () {
                        $("#editVPatientName,#editVPatientVaccinationName").select2({
                            width: "100%",
                            dropdownParent: $("#edit_vaccinated_patient_modal")
                        })
                    }))
                })), listenShownBsModal("#add_vaccinated_patient_modal", (function () {
                    $("#vPatientDoesGivenDate").val(moment().format("YYYY-MM-DD HH:mm"))
                })), listenSubmit("#add_vaccinated_patient_form", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#vPatientBtnSave");
                    t.button("loading"), $.ajax({
                        url: $("#vaccinatedPatientsStore").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_vaccinated_patient_modal").modal("hide"), livewire.emit("refresh"), setTimeout((function () {
                                t.button("reset")
                            }), 2500))
                        },
                        error: function (e) {
                            printErrorMessage("#vPatientValidationErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3)
                        }
                    })
                })), listenHiddenBsModal("#add_vaccinated_patient_modal", (function () {
                    $("#vPatientPatientName").val("").trigger("change"), $("#vPatientVaccinationName").val("").trigger("change"), resetModalForm("#add_vaccinated_patient_form", "#vPatientValidationErrorsBox")
                })), listenClick(".edit-vaccinatedPatient-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t = $(e.currentTarget).attr("data-id");
                        renderVaccinatedPatientData(t)
                    }
                })), window.renderVaccinatedPatientData = function (e) {
                    $.ajax({
                        url: $("#vaccinatedPatientsIndex").val() + "/" + e + "/edit",
                        type: "GET",
                        success: function (e) {
                            if (e.success) {
                                var t = e.data;
                                $("#editVPatientId").val(t.id), $("#editVPatientName").val(t.patient_id).trigger("change.select2"), $("#editVPatientVaccinationName").val(t.vaccination_id).trigger("change.select2"), $("#editVPatientSerialNo").val(t.vaccination_serial_number), $("#editVPatientDoseNumber").val(t.dose_number), $("#editVPatientDoesGivenDate").val(moment(t.dose_given_date).utc().format("YYYY-MM-DD HH:mm:ss")), $("#editVPatientDescription").val(t.description), $("#edit_vaccinated_patient_modal").modal("show"), ajaxCallCompleted()
                            }
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        }
                    })
                }, listenSubmit("#edit_vaccinated_patient_form", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#editVPatientBtnSave");
                    t.button("loading");
                    var a = $("#editVPatientId").val();
                    $.ajax({
                        url: $("#vaccinatedPatientsIndex").val() + "/" + a + "/update",
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_vaccinated_patient_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".delete-vaccinatedPatient-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#vaccinatedPatientsIndex").val() + "/" + t, "", $("#vaccinatedPatient").val())
                }))
            },
            3219: () => {
                listenSubmit("#add_vaccinations_form", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#vaccinationBtnSave");
                    t.button("loading"), $.ajax({
                        url: $("#vaccination_createUrl").val(),
                        type: "POST",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#add_vaccinations_modal").modal("hide"), livewire.emit("refresh"), setTimeout((function () {
                                t.button("reset")
                            }), 2500))
                        },
                        error: function (e) {
                            printErrorMessage("#createValidationErrorsBox", e), setTimeout((function () {
                                t.button("reset")
                            }), 2e3)
                        }
                    })
                })), listenHiddenBsModal("#add_vaccinations_modal", (function () {
                    resetModalForm("#add_vaccinations_form", "#createValidationErrorsBox")
                })), listenClick(".edit-vaccinations-btn", (function (e) {
                    if (!$(".ajaxCallIsRunning").val()) {
                        ajaxCallInProgress();
                        var t, a = $(e.currentTarget).attr("data-id");
                        t = a, $.ajax({
                            url: $("#vaccination_url").val() + "/" + t + "/edit",
                            type: "GET",
                            success: function (e) {
                                if (e.success) {
                                    var t = e.data;
                                    $("#vaccinationId").val(t.id), $("#editVaccinationName").val(t.name), $("#editVaccinationManufacturedBy").val(t.manufactured_by), $("#editVaccinationBrand").val(t.brand), $("#edit_vaccinations_modal").modal("show"), ajaxCallCompleted()
                                }
                            },
                            error: function (e) {
                                manageAjaxErrors(e)
                            }
                        })
                    }
                })), listenSubmit("#edit_vaccinations_form", (function (e) {
                    e.preventDefault();
                    var t = jQuery(this).find("#btnEditVaccinationSave");
                    t.button("loading");
                    var a = $("#vaccinationId").val();
                    $.ajax({
                        url: $("#vaccination_url").val() + "/" + a + "/update",
                        type: "post",
                        data: $(this).serialize(),
                        success: function (e) {
                            e.success && (displaySuccessMessage(e.message), $("#edit_vaccinations_modal").modal("hide"), livewire.emit("refresh"))
                        },
                        error: function (e) {
                            manageAjaxErrors(e)
                        },
                        complete: function () {
                            t.button("reset")
                        }
                    })
                })), listenClick(".delete-vaccination-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($("#vaccination_url").val() + "/" + t, "", $("#Vaccination").val())
                }))
            },
            9470: () => {
                document.addEventListener("turbo:load", (function () {
                    (function () {
                        if (!$("#visitorDate").length) return;
                        $("#visitorDate").flatpickr({
                            format: "YYYY-MM-DD",
                            useCurrent: !0,
                            sideBySide: !0,
                            locale: $(".userCurrentLanguage").val()
                        })
                    })(),
                    function () {
                        if (!$("#visitorOutTime").length) return;
                        $("#visitorInTime,#visitorOutTime").flatpickr({
                            enableTime: !0,
                            enableSeconds: !0,
                            noCalendar: !0,
                            dateFormat: "H:i:S",
                            locale: $(".userCurrentLanguage").val()
                        }), $("#visitorOutTime").flatpickr({
                            enableTime: !0,
                            enableSeconds: !0,
                            noCalendar: !0,
                            dateFormat: "H:i:S",
                            minTime: moment(new Date).format("HH:mm:ss"),
                            locale: $(".userCurrentLanguage").val()
                        }), $("#visitorPurpose").select2({
                            width: "100%"
                        })
                    }()
                })), listenSubmit("#createVisitorForm, #editVisitorForm", (function () {
                    if ("" !== $(".error-msg").text()) return $("#visitorPhoneNumber").focus(), !1
                })), listen("keyup keypress", "#createVisitorForm, #editVisitorForm", (function (e) {
                    if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1
                })), $("#visitorInTime").on("dp.change", (function (e) {
                    $("#visitorOutTime").data("flatpickr").minTime(e.time)
                })), listenChange("#visitorAttachment", (function () {
                    var e = isValidVisitorDocument($(this), "#visitorErrorsBox");
                    isEmpty(e) || 0 == e ? ($(this).val(""), $("#visitorErrorsBox").removeClass("d-none hide"), $("#visitorErrorsBox").text(Lang.get("messages.user.validate_image_type")).show(), $("[id=visitorErrorsBox]").focus(), $("html, body").animate({
                        scrollTop: "0"
                    }, 500), $(".alert").delay(5e3).slideUp(300)) : ($("#visitorErrorsBox").html("").hide(), displayDocument(this, "#visitorPreviewImage", e), $("#visitorSave").attr("disabled", !1))
                })), window.isValidVisitorDocument = function (e, t) {
                    var a = $(e).val().split(".").pop().toLowerCase();
                    return -1 != $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) && ($(t).addClass("d-none"), a)
                }, listenClick(".visitor-remove-image", (function () {
                    defaultImagePreview("#visitorPreviewImage")
                }))
            },
            1105: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$("#purposeArr").length) return;
                    $("#purposeArr").select2({
                        width: "100%"
                    })
                })), listenClick(".delete-visitor-btn", (function (e) {
                    var t = $(e.currentTarget).attr("data-id");
                    deleteItem($(".visitorUrl").val() + "/" + t, "", $("#Visitor").val())
                })), listenClick("#visitorResetFilter", (function () {
                    $("#visitorsHead").val(0).trigger("change"), hideDropdownManually($("#visitorsFilterBtn"), $(".dropdown-menu"))
                })), listenChange("#visitorsHead", (function () {
                    window.livewire.emit("changeFilter", "statusFilter", $(this).val())
                }))
            },
            169: () => {
                document.addEventListener("turbo:load", (function () {
                    if (!$(".lightGallery").length) return;
                    $(".lightgallery").lightGallery({
                        mode: "lg-slide-circular",
                        counter: !1
                    })
                }))
            },
            2743: e => {
                ! function (t, a) {
                    var i = a.jQuery;
                    e.exports = i ? t(a, i) : function (e) {
                        if (e && !e.fn) throw "Provide jQuery or null";
                        return t(a, e)
                    }
                }((function (e, t) {
                    "use strict";
                    var a = !1 === t;
                    t = t && t.fn ? t : e.jQuery;
                    var i, n, r, s, o, d, l, c, u, m, _, p, h, g, f, v, y, $, M, w, b, L, D = "v1.0.7",
                        k = "_ocp",
                        Y = /[ \t]*(\r\n|\n|\r)/g,
                        T = /\\(['"\\])/g,
                        S = /['"\\]/g,
                        x = /(?:\x08|^)(onerror:)?(?:(~?)(([\w$.]+):)?([^\x08]+))\x08(,)?([^\x08]+)/gi,
                        C = /^if\s/,
                        I = /<(\w+)[>\s]/,
                        P = /[\x00`><\"'&=]/,
                        E = /^on[A-Z]|^convert(Back)?$/,
                        j = /^\#\d+_`[\s\S]*\/\d+_`$/,
                        F = /[\x00`><"'&=]/g,
                        H = /[&<>]/g,
                        O = /&(amp|gt|lt);/g,
                        B = /\[['"]?|['"]?\]/g,
                        A = 0,
                        R = {
                            "&": "&amp;",
                            "<": "&lt;",
                            ">": "&gt;",
                            "\0": "&#0;",
                            "'": "&#39;",
                            '"': "&#34;",
                            "`": "&#96;",
                            "=": "&#61;"
                        },
                        q = {
                            amp: "&",
                            gt: ">",
                            lt: "<"
                        },
                        U = "html",
                        N = "object",
                        W = "data-jsv-tmpl",
                        z = "jsvTmpl",
                        V = "For #index in nested block use #getIndex().",
                        J = {},
                        G = {},
                        Q = e.jsrender,
                        K = Q && t && !t.render,
                        Z = {
                            template: {
                                compile: function e(a, i, n, r) {
                                    function o(i) {
                                        var s, o;
                                        if ("" + i === i || i.nodeType > 0 && (d = i)) {
                                            if (!d)
                                                if (/^\.?\/[^\\:*?"<>]*$/.test(i))(o = c[a = a || i]) ? i = o : d = document.getElementById(i);
                                                else if (t.fn && !p.rTmpl.test(i)) try {
                                                d = t(i, document)[0]
                                            } catch (e) {}
                                            d && ("SCRIPT" !== d.tagName && we(i + ": Use script block, not " + d.tagName), r ? i = d.innerHTML : ((s = d.getAttribute(W)) && (s !== z ? (i = c[s], delete c[s]) : t.fn && (i = t.data(d).jsvTmpl)), s && i || (a = a || (t.fn ? z : i), i = e(a, d.innerHTML, n, r)), i.tmplName = a = a || s, a !== z && (c[a] = i), d.setAttribute(W, a), t.fn && t.data(d, z, i))), d = void 0
                                        } else i.fn || (i = void 0);
                                        return i
                                    }
                                    var d, l, m = i = i || "";
                                    p._html = u.html, 0 === r && (r = void 0, m = o(m));
                                    (r = r || (i.markup ? i.bnds ? re({}, i) : i : {})).tmplName = r.tmplName || a || "unnamed", n && (r._parentTmpl = n);
                                    !m && i.markup && (m = o(i.markup)) && m.fn && (m = m.markup);
                                    if (void 0 !== m) return m.render || i.render ? m.tmpls && (l = m) : (i = ge(m, r), Le(m.replace(S, "\\$&"), i)), l || function (e) {
                                        var t, a, i;
                                        for (t in Z) e[a = t + "s"] && (i = e[a], e[a] = {}, s[a](i, e))
                                    }(l = re((function () {
                                        return l.render.apply(l, arguments)
                                    }), i)), l
                                }
                            },
                            tag: {
                                compile: function (e, t, a) {
                                    var i, n, r, s = new p._tg;

                                    function o() {
                                        var t = this;
                                        t._ = {
                                            unlinked: !0
                                        }, t.inline = !0, t.tagName = e
                                    }
                                    d(t) ? t = {
                                        depends: t.depends,
                                        render: t
                                    } : "" + t === t && (t = {
                                        template: t
                                    });
                                    if (n = t.baseTag)
                                        for (r in t.flow = !!t.flow, (n = "" + n === n ? a && a.tags[n] || _[n] : n) || we('baseTag: "' + t.baseTag + '" not found'), s = re(s, n), t) s[r] = ee(n[r], t[r]);
                                    else s = re(s, t);
                                    void 0 !== (i = s.template) && (s.template = "" + i === i ? c[i] || c(i) : i);
                                    (o.prototype = s).constructor = s._ctr = o, a && (s._parentTmpl = a);
                                    return s
                                }
                            },
                            viewModel: {
                                compile: function (e, a) {
                                    var i, n, r, s = this,
                                        c = a.getters,
                                        u = a.extend,
                                        m = a.id,
                                        _ = t.extend({
                                            _is: e || "unnamed",
                                            unmap: b,
                                            merge: w
                                        }, u),
                                        p = "",
                                        h = "",
                                        g = c ? c.length : 0,
                                        f = t.observable,
                                        v = {};

                                    function y(e) {
                                        n.apply(this, e)
                                    }

                                    function $() {
                                        return new y(arguments)
                                    }

                                    function M(e, t) {
                                        for (var a, i, n, r, o, d = 0; d < g; d++) a = void 0, (n = c[d]) + "" !== n && (n = (a = n).getter, o = a.parentRef), void 0 === (r = e[n]) && a && void 0 !== (i = a.defaultVal) && (r = pe(i, e)), t(r, a && s[a.type], n, o)
                                    }

                                    function w(e, t, a) {
                                        e = e + "" === e ? JSON.parse(e) : e;
                                        var i, n, r, s, d, c, u, _, p, h, g = 0,
                                            y = this;
                                        if (l(y)) {
                                            for (u = {}, p = [], n = e.length, r = y.length; g < n; g++) {
                                                for (_ = e[g], c = !1, i = 0; i < r && !c; i++) u[i] || (d = y[i], m && (u[i] = c = m + "" === m ? _[m] && (v[m] ? d[m]() : d[m]) === _[m] : m(d, _)));
                                                c ? (d.merge(_), p.push(d)) : (p.push(h = $.map(_)), a && he(h, a, t))
                                            }
                                            f ? f(y).refresh(p, !0) : y.splice.apply(y, [0, y.length].concat(p))
                                        } else
                                            for (s in M(e, (function (e, t, a, i) {
                                                    t ? y[a]().merge(e, y, i) : y[a]() !== e && y[a](e)
                                                })), e) s === o || v[s] || (y[s] = e[s])
                                    }

                                    function b() {
                                        var e, t, a, i, n = 0,
                                            r = this;

                                        function u(e) {
                                            for (var t = [], a = 0, i = e.length; a < i; a++) t.push(e[a].unmap());
                                            return t
                                        }
                                        if (l(r)) return u(r);
                                        for (e = {}; n < g; n++) a = void 0, (t = c[n]) + "" !== t && (t = (a = t).getter), i = r[t](), e[t] = a && i && s[a.type] ? l(i) ? u(i) : i.unmap() : i;
                                        for (t in r) !r.hasOwnProperty(t) || "_" === t.charAt(0) && v[t.slice(1)] || t === o || d(r[t]) || (e[t] = r[t]);
                                        return e
                                    }
                                    for (y.prototype = _, i = 0; i < g; i++) ! function (e) {
                                        e = e.getter || e, v[e] = i + 1;
                                        var t = "_" + e;
                                        p += (p ? "," : "") + e, h += "this." + t + " = " + e + ";\n", _[e] = _[e] || function (a) {
                                            if (!arguments.length) return this[t];
                                            f ? f(this).setProperty(e, a) : this[t] = a
                                        }, f && (_[e].set = _[e].set || function (e) {
                                            this[t] = e
                                        })
                                    }(c[i]);
                                    return h = new Function(p, h), (n = function () {
                                        h.apply(this, arguments), (r = arguments[g + 1]) && he(this, arguments[g], r)
                                    }).prototype = _, _.constructor = n, $.map = function (t) {
                                        t = t + "" === t ? JSON.parse(t) : t;
                                        var a, i, n, r, s = 0,
                                            d = t,
                                            u = [];
                                        if (l(t)) {
                                            for (a = (t = t || []).length; s < a; s++) u.push(this.map(t[s]));
                                            return u._is = e, u.unmap = b, u.merge = w, u
                                        }
                                        if (t) {
                                            for (M(t, (function (e, t) {
                                                    t && (e = t.map(e)), u.push(e)
                                                })), d = this.apply(this, u), s = g; s--;)
                                                if (n = u[s], (r = c[s].parentRef) && n && n.unmap)
                                                    if (l(n))
                                                        for (a = n.length; a--;) he(n[a], r, d);
                                                    else he(n, r, d);
                                            for (i in t) i === o || v[i] || (d[i] = t[i])
                                        }
                                        return d
                                    }, $.getters = c, $.extend = u, $.id = m, $
                                }
                            },
                            helper: {},
                            converter: {}
                        };

                    function X(e, t) {
                        return function () {
                            var a, i = this,
                                n = i.base;
                            return i.base = e, a = t.apply(i, arguments), i.base = n, a
                        }
                    }

                    function ee(e, t) {
                        return d(t) && ((t = X(e ? e._d ? e : X(ie, e) : ie, t))._d = (e && e._d || 0) + 1), t
                    }

                    function te(e, t) {
                        var a, i = t.props;
                        for (a in i) !E.test(a) || e[a] && e[a].fix || (e[a] = "convert" !== a ? ee(e.constructor.prototype[a], i[a]) : i[a])
                    }

                    function ae(e) {
                        return e
                    }

                    function ie() {
                        return ""
                    }

                    function ne(e) {
                        this.name = (t.link ? "JsViews" : "JsRender") + " Error", this.message = e || this.name
                    }

                    function re(e, t) {
                        if (e) {
                            for (var a in t) e[a] = t[a];
                            return e
                        }
                    }

                    function se() {
                        var e = this.get("item");
                        return e ? e.index : void 0
                    }

                    function oe() {
                        return this.index
                    }

                    function de(e, t, a, i) {
                        var n, r, s, o = 0;
                        if (1 === a && (i = 1, a = void 0), t)
                            for (s = (r = t.split(".")).length; e && o < s; o++) n = e, e = r[o] ? e[r[o]] : e;
                        return a && (a.lt = a.lt || o < s), void 0 === e ? i ? ie : "" : i ? function () {
                            return e.apply(n, arguments)
                        } : e
                    }

                    function le(a, i, n) {
                        var r, s, o, l, c, u, _, h = this,
                            g = !L && arguments.length > 1,
                            f = h.ctx;
                        if (a) {
                            if (h._ || (c = h.index, h = h.tag), u = h, f && f.hasOwnProperty(a) || (f = m).hasOwnProperty(a)) {
                                if (o = f[a], "tag" === a || "tagCtx" === a || "root" === a || "parentTags" === a) return o
                            } else f = void 0;
                            if ((!L && h.tagCtx || h.linked) && (o && o._cxp || (h = h.tagCtx || d(o) ? h : !(h = h.scope || h).isTop && h.ctx.tag || h, void 0 !== o && h.tagCtx && (h = h.tagCtx.view.scope), f = h._ocps, (o = f && f.hasOwnProperty(a) && f[a] || o) && o._cxp || !n && !g || ((f || (h._ocps = h._ocps || {}))[a] = o = [{
                                    _ocp: o,
                                    _vw: u,
                                    _key: a
                                }], o._cxp = {
                                    path: k,
                                    ind: 0,
                                    updateValue: function (e, a) {
                                        return t.observable(o[0]).setProperty(k, e), this
                                    }
                                })), l = o && o._cxp)) {
                                if (arguments.length > 2) return (s = o[1] ? p._ceo(o[1].deps) : [k]).unshift(o[0]), s._cxp = l, s;
                                if (c = l.tagElse, _ = o[1] ? l.tag && l.tag.cvtArgs ? l.tag.cvtArgs(c, 1)[l.ind] : o[1](o[0].data, o[0], p) : o[0]._ocp, g) return p._ucp(a, i, h, l), h;
                                o = _
                            }
                            return o && d(o) && re(r = function () {
                                return o.apply(this && this !== e ? this : u, arguments)
                            }, o), r || o
                        }
                    }

                    function ce(e, t) {
                        var a, i, n, r, s, o, d, c = this;
                        if (c.tagName) {
                            if (!(c = ((o = c).tagCtxs || [c])[e || 0])) return
                        } else o = c.tag;
                        if (s = o.bindFrom, r = c.args, (d = o.convert) && "" + d === d && (d = "true" === d ? void 0 : c.view.getRsc("converters", d) || we("Unknown converter: '" + d + "'")), d && !t && (r = r.slice()), s) {
                            for (n = [], a = s.length; a--;) i = s[a], n.unshift(ue(c, i));
                            t && (r = n)
                        }
                        if (d) {
                            if (void 0 === (d = d.apply(o, n || r))) return r;
                            if (a = (s = s || [0]).length, l(d) && d.length === a || (d = [d], s = [0], a = 1), t) r = d;
                            else
                                for (; a--;) + (i = s[a]) === i && (r[i] = d[a])
                        }
                        return r
                    }

                    function ue(e, t) {
                        return (e = e[+t === t ? "args" : "props"]) && e[t]
                    }

                    function me(e) {
                        return this.cvtArgs(e, 1)
                    }

                    function _e(e, t, a, i, n, r, s, o) {
                        var d, l, c, u = this,
                            m = "array" === t;
                        u.content = o, u.views = m ? [] : {}, u.data = i, u.tmpl = n, c = u._ = {
                            key: 0,
                            useKey: m ? 0 : 1,
                            id: "" + A++,
                            onRender: s,
                            bnds: {}
                        }, u.linked = !!s, u.type = t || "top", t && (u.cache = {
                            _ct: h._cchCt
                        }), a && "top" !== a.type || ((u.ctx = e || {}).root = u.data), (u.parent = a) ? (u.root = a.root || u, d = a.views, l = a._, u.isTop = l.scp, u.scope = (!e.tag || e.tag === a.ctx.tag) && !u.isTop && a.scope || u, l.useKey ? (d[c.key = "_" + l.useKey++] = u, u.index = V, u.getIndex = se) : d.length === (c.key = u.index = r) ? d.push(u) : d.splice(r, 0, u), u.ctx = e || a.ctx) : t && (u.root = u)
                    }

                    function pe(e, t) {
                        return d(e) ? e.call(t) : e
                    }

                    function he(e, t, a) {
                        Object.defineProperty(e, t, {
                            value: a,
                            configurable: !0
                        })
                    }

                    function ge(e, a) {
                        var i, n = g._wm || {},
                            r = {
                                tmpls: [],
                                links: {},
                                bnds: [],
                                _is: "template",
                                render: $e
                            };
                        return a && (r = re(r, a)), r.markup = e, r.htmlTag || (i = I.exec(e), r.htmlTag = i ? i[1].toLowerCase() : ""), (i = n[r.htmlTag]) && i !== n.div && (r.markup = t.trim(r.markup)), r
                    }

                    function fe(e, t) {
                        var a = e + "s";
                        s[a] = function i(n, r, o) {
                            var d, l, c, u = p.onStore[e];
                            if (n && typeof n === N && !n.nodeType && !n.markup && !n.getTgt && !("viewModel" === e && n.getters || n.extend)) {
                                for (l in n) i(l, n[l], r);
                                return r || s
                            }
                            return n && "" + n !== n && (o = r, r = n, n = void 0), c = o ? "viewModel" === e ? o : o[a] = o[a] || {} : i, d = t.compile, void 0 === r && (r = d ? n : c[n], n = void 0), null === r ? n && delete c[n] : (d && ((r = d.call(c, n, r, o, 0) || {})._is = e), n && (c[n] = r)), u && u(n, r, o, d), r
                        }
                    }

                    function ve(e) {
                        f[e] = f[e] || function (t) {
                            return arguments.length ? (h[e] = t, f) : h[e]
                        }
                    }

                    function ye(e) {
                        function t(t, a) {
                            this.tgt = e.getTgt(t, a), a.map = this
                        }
                        return d(e) && (e = {
                            getTgt: e
                        }), e.baseMap && (e = re(re({}, e.baseMap), e)), e.map = function (e, a) {
                            return new t(e, a)
                        }, e
                    }

                    function $e(e, t, a, i, n, s) {
                        var o, c, u, m, _, h, f, v, y = i,
                            $ = "";
                        if (!0 === t ? (a = t, t = void 0) : typeof t !== N && (t = void 0), (u = this.tag) ? (_ = this, m = (y = y || _.view)._getTmpl(u.template || _.tmpl), arguments.length || (e = u.contentCtx && d(u.contentCtx) ? e = u.contentCtx(e) : y)) : m = this, m) {
                            if (!i && e && "view" === e._is && (y = e), y && e === y && (e = y.data), h = !y, L = L || h, h && ((t = t || {}).root = e), !L || g.useViews || m.useViews || y && y !== r) $ = Me(m, e, t, a, y, n, s, u);
                            else {
                                if (y ? (f = y.data, v = y.index, y.index = V) : (f = (y = r).data, y.data = e, y.ctx = t), l(e) && !a)
                                    for (o = 0, c = e.length; o < c; o++) y.index = o, y.data = e[o], $ += m.fn(e[o], y, p);
                                else y.data = e, $ += m.fn(e, y, p);
                                y.data = f, y.index = v
                            }
                            h && (L = void 0)
                        }
                        return $
                    }

                    function Me(e, t, a, i, n, r, s, o) {
                        var d, c, u, m, _, h, g, f, v, y, $, M, w, b = "";
                        if (o && (v = o.tagName, M = o.tagCtx, a = a ? Se(a, o.ctx) : o.ctx, e === n.content ? g = e !== n.ctx._wrp ? n.ctx._wrp : void 0 : e !== M.content ? e === o.template ? (g = M.tmpl, a._wrp = M.content) : g = M.content || n.content : g = n.content, !1 === M.props.link && ((a = a || {}).link = !1)), n && (s = s || n._.onRender, (w = a && !1 === a.link) && n._.nl && (s = void 0), a = Se(a, n.ctx), M = !o && n.tag ? n.tag.tagCtxs[n.tagElse] : M), (y = M && M.props.itemVar) && ("~" !== y[0] && be("Use itemVar='~myItem'"), y = y.slice(1)), !0 === r && (h = !0, r = 0), s && o && o._.noVws && (s = void 0), f = s, !0 === s && (f = void 0, s = n._.onRender), $ = a = e.helpers ? Se(e.helpers, a) : a, l(t) && !i)
                            for ((u = h ? n : void 0 !== r && n || new _e(a, "array", n, t, e, r, s, g))._.nl = w, n && n._.useKey && (u._.bnd = !o || o._.bnd && o, u.tag = o), d = 0, c = t.length; d < c; d++) m = new _e($, "item", u, t[d], e, (r || 0) + d, s, u.content), y && ((m.ctx = re({}, $))[y] = p._cp(t[d], "#data", m)), _ = e.fn(t[d], m, p), b += u._.onRender ? u._.onRender(_, m) : _;
                        else u = h ? n : new _e($, v || "data", n, t, e, r, s, g), y && ((u.ctx = re({}, $))[y] = p._cp(t, "#data", u)), u.tag = o, u._.nl = w, b += e.fn(t, u, p);
                        return o && (u.tagElse = M.index, M.contentView = u), f ? f(b, u) : b
                    }

                    function we(e) {
                        throw new p.Err(e)
                    }

                    function be(e) {
                        we("Syntax error\n" + e)
                    }

                    function Le(e, t, a, i, r) {
                        function s(t) {
                            (t -= g) && w.push(e.substr(g, t).replace(Y, "\\n"))
                        }

                        function o(t, a) {
                            t && (t += "}}", be((a ? "{{" + a + "}} block has {{/" + t + " without {{" + t : "Unmatched or missing {{/" + t) + ", in template:\n" + e))
                        }
                        var d, l, c, u, m, _ = h.allowCode || t && t.allowCode || !0 === f.allowCode,
                            p = [],
                            g = 0,
                            y = [],
                            w = p,
                            b = [, , p];
                        if (_ && t._is && (t.allowCode = _), a && (void 0 !== i && (e = e.slice(0, -i.length - 2) + $), e = v + e + M), o(y[0] && y[0][2].pop()[0]), e.replace(n, (function (n, d, l, m, p, h, f, v, $, M, L, D) {
                                (f && d || $ && !l || v && ":" === v.slice(-1) || M) && be(n), h && (p = ":", m = U);
                                var k, S, I, P = (d || a) && [
                                        []
                                    ],
                                    j = "",
                                    F = "",
                                    H = "",
                                    O = "",
                                    B = "",
                                    A = "",
                                    R = "",
                                    q = "",
                                    N = !($ = $ || a && !r) && !p;
                                l = l || (v = v || "#data", p), s(D), g = D + n.length, f ? _ && w.push(["*", "\n" + v.replace(/^:/, "ret+= ").replace(T, "$1") + ";\n"]) : l ? ("else" === l && (C.test(v) && be('For "{{else if expr}}" use "{{else expr}}"'), P = b[9] && [
                                    []
                                ], b[10] = e.substring(b[10], D), S = b[11] || b[0] || be("Mismatched: " + n), b = y.pop(), w = b[2], N = !0), v && Ye(v.replace(Y, " "), P, t, a).replace(x, (function (e, t, a, i, n, r, s, o) {
                                    return "this:" === i && (r = "undefined"), o && (I = I || "@" === o[0]), i = "'" + n + "':", s ? (F += a + r + ",", O += "'" + o + "',") : a ? (H += i + "j._cp(" + r + ',"' + o + '",view),', A += i + "'" + o + "',") : t ? R += r : ("trigger" === n && (q += r), "lateRender" === n && (k = "false" !== o), j += i + r + ",", B += i + "'" + o + "',", u = u || E.test(n)), ""
                                })).slice(0, -1), P && P[0] && P.pop(), c = [l, m || !!i || u || "", N && [], ke(O || (":" === l ? "'#data'," : ""), B, A), ke(F || (":" === l ? "data," : ""), j, H), R, q, k, I, P || 0], w.push(c), N && (y.push(b), (b = c)[10] = g, b[11] = S)) : L && (o(L !== b[0] && L !== b[11] && L, b[0]), b[10] = e.substring(b[10], D), b = y.pop()), o(!b && L), w = b[2]
                            })), s(e.length), (g = p[p.length - 1]) && o("" + g !== g && +g[10] === g[10] && g[0]), a) {
                            for (l = Te(p, e, a), m = [], d = p.length; d--;) m.unshift(p[d][9]);
                            De(l, m)
                        } else l = Te(p, t);
                        return l
                    }

                    function De(e, t) {
                        var a, i, n = 0,
                            r = t.length;
                        for (e.deps = [], e.paths = []; n < r; n++)
                            for (a in e.paths.push(i = t[n]), i) "_jsvto" !== a && i.hasOwnProperty(a) && i[a].length && !i[a].skp && (e.deps = e.deps.concat(i[a]))
                    }

                    function ke(e, t, a) {
                        return [e.slice(0, -1), t.slice(0, -1), a.slice(0, -1)]
                    }

                    function Ye(e, a, i, n) {
                        var r, s, o, d, l, c = a && a[0],
                            u = {
                                bd: c
                            },
                            m = {
                                0: u
                            },
                            _ = 0,
                            h = 0,
                            f = 0,
                            v = {},
                            y = 0,
                            $ = {},
                            M = {},
                            w = {},
                            b = {
                                0: 0
                            },
                            L = {
                                0: ""
                            },
                            D = 0;
                        return "@" === e[0] && (e = e.replace(B, ".")), o = (e + (i ? " " : "")).replace(p.rPrm, (function (i, o, k, Y, T, x, C, I, P, E, j, F, H, O, B, A, R, q, U, N, W) {
                            Y && !I && (T = Y + T), x = x || "", H = H || "", k = k || o || H, T = T || P, E && (E = !/\)|]/.test(W[N - 1])) && (T = T.slice(1).split(".").join("^")), j = j || q || "";
                            var z, V, G, Q, K, Z, X, ee = N;
                            if (!l && !d) {
                                if (C && be(e), R && c) {
                                    if (z = w[f - 1], W.length - 1 > ee - (z || 0)) {
                                        if (z = t.trim(W.slice(z, ee + i.length)), V = s || m[f - 1].bd, (G = V[V.length - 1]) && G.prm) {
                                            for (; G.sb && G.sb.prm;) G = G.sb;
                                            Q = G.sb = {
                                                path: G.sb,
                                                bnd: G.bnd
                                            }
                                        } else V.push(Q = {
                                            path: V.pop()
                                        });
                                        G && G.sb === Q && (L[f] = L[f - 1].slice(G._cpPthSt) + L[f], L[f - 1] = L[f - 1].slice(0, G._cpPthSt)), Q._cpPthSt = b[f - 1], Q._cpKey = z, L[f] += W.slice(D, N), D = N, Q._cpfn = J[z] = J[z] || new Function("data,view,j", "//" + z + "\nvar v;\nreturn ((v=" + L[f] + ("]" === A ? ")]" : A) + ")!=null?v:null);"), L[f - 1] += M[h] && g.cache ? 'view.getCache("' + z.replace(S, "\\$&") + '"' : L[f], Q.prm = u.bd, Q.bnd = Q.bnd || Q.path && Q.path.indexOf("^") >= 0
                                    }
                                    L[f] = ""
                                }
                                "[" === j && (j = "[j._sq("), "[" === k && (k = "[j._sq(")
                            }
                            return X = l ? (l = !O) ? i : H + '"' : d ? (d = !B) ? i : H + '"' : (k ? ($[++h] = !0, v[h] = 0, c && (w[f++] = ee++, u = m[f] = {
                                bd: []
                            }, L[f] = "", b[f] = 1), k) : "") + (U ? h ? "" : (_ = W.slice(_, ee), (r ? (r = s = !1, "\b") : "\b,") + _ + (_ = ee + i.length, c && a.push(u.bd = []), "\b")) : I ? (f && be(e), c && a.pop(), r = "_" + T, Y, _ = ee + i.length, c && ((c = u.bd = a[r] = []).skp = !Y), T + ":") : T ? T.split("^").join(".").replace(p.rPath, (function (e, t, i, o, d, l, m, _) {
                                if (K = "." === i, i && (T = T.slice(t.length), /^\.?constructor$/.test(_ || T) && be(e), K || (e = (E ? (n ? "" : "(ltOb.lt=ltOb.lt||") + "(ob=" : "") + (o ? 'view.ctxPrm("' + o + '")' : d ? "view" : "data") + (E ? ")===undefined" + (n ? "" : ")") + '?"":view._getOb(ob,"' : "") + (_ ? (l ? "." + l : o || d ? "" : "." + i) + (m || "") : (_ = o ? "" : d ? l || "" : i, "")), e = t + ("view.data" === (e += _ ? "." + _ : "").slice(0, 9) ? e.slice(5) : e) + (E ? (n ? '"' : '",ltOb') + (j ? ",1)" : ")") : "")), c)) {
                                    if (V = "_linkTo" === r ? s = a._jsvto = a._jsvto || [] : u.bd, G = K && V[V.length - 1]) {
                                        if (G._cpfn) {
                                            for (; G.sb;) G = G.sb;
                                            G.prm && (G.bnd && (T = "^" + T.slice(1)), G.sb = T, G.bnd = G.bnd || "^" === T[0])
                                        }
                                    } else V.push(T);
                                    j && !K && (w[f] = ee, b[f] = L[f].length)
                                }
                                return e
                            })) + (j || x) : x || (A ? "]" === A ? ")]" : ")" : F ? (M[h] || be(e), ",") : o ? "" : (l = O, d = B, '"'))), l || d || A && (M[h] = !1, h--), c && (l || d || (A && ($[h + 1] && (u = m[--f], $[h + 1] = !1), y = v[h + 1]), j && (v[h + 1] = L[f].length + (k ? 1 : 0), (T || A) && (u = m[++f] = {
                                bd: []
                            }, $[h + 1] = !0))), L[f] = (L[f] || "") + W.slice(D, N), D = N + i.length, l || d || ((Z = k && $[h + 1]) && (L[f - 1] += k, b[f - 1]++), "(" === j && K && !Q && (L[f] = L[f - 1].slice(y) + L[f], L[f - 1] = L[f - 1].slice(0, y))), L[f] += Z ? X.slice(1) : X), l || d || !j || (h++, T && "(" === j && (M[h] = !0)), l || d || !q || (c && (L[f] += j), X += j), X
                        })), c && (o = L[0]), !h && o || be(e)
                    }

                    function Te(e, t, a) {
                        var i, n, r, s, o, d, l, c, u, m, p, f, v, y, $, M, w, b, L, D, k, S, x, C, I, P, E, j, F, H, O, B, A, R, q = 0,
                            N = g.useViews || t.useViews || t.tags || t.templates || t.helpers || t.converters,
                            W = "",
                            z = {},
                            V = e.length;
                        for ("" + t === t ? (w = a ? 'data-link="' + t.replace(Y, " ").slice(1, -1) + '"' : t, t = 0) : (w = t.tmplName || "unnamed", t.allowCode && (z.allowCode = !0), t.debug && (z.debug = !0), m = t.bnds, M = t.tmpls), i = 0; i < V; i++)
                            if ("" + (n = e[i]) === n) W += '+"' + n + '"';
                            else if ("*" === (r = n[0])) W += ";\n" + n[1] + "\nret=ret";
                        else {
                            if (s = n[1], D = !a && n[2], A = n[3], R = f = n[4], o = "\n\tparams:{args:[" + A[0] + "],\n\tprops:{" + A[1] + "}" + (A[2] ? ",\n\tctx:{" + A[2] + "}" : "") + "},\n\targs:[" + R[0] + "],\n\tprops:{" + R[1] + "}" + (R[2] ? ",\n\tctx:{" + R[2] + "}" : ""), F = n[6], H = n[7], n[8] ? (O = "\nvar ob,ltOb={},ctxs=", B = ";\nctxs.lt=ltOb.lt;\nreturn ctxs;") : (O = "\nreturn ", B = ""), k = n[10] && n[10].replace(T, "$1"), (C = "else" === r) ? p && p.push(n[9]) : (E = n[5] || !1 !== h.debugMode && "undefined", m && (p = n[9]) && (p = [p], q = m.push(1))), N = N || f[1] || f[2] || p || /view.(?!index)/.test(f[0]), (I = ":" === r) ? s && (r = s === U ? ">" : s + r) : (D && ((b = ge(k, z)).tmplName = w + "/" + r, b.useViews = b.useViews || N, Te(D, b), N = b.useViews, M.push(b)), C || (L = r, N = N || r && (!_[r] || !_[r].flow), x = W, W = ""), S = (S = e[i + 1]) && "else" === S[0]), j = E ? ";\ntry{\nret+=" : "\n+", v = "", y = "", I && (p || F || s && s !== U || H)) {
                                if ((P = new Function("data,view,j", "// " + w + " " + ++q + " " + r + O + "{" + o + "};" + B))._er = E, P._tag = r, P._bd = !!p, P._lr = H, a) return P;
                                De(P, p), u = !0, v = ($ = 'c("' + s + '",view,') + q + ",", y = ")"
                            }
                            if (W += I ? (a ? (E ? "try{\n" : "") + "return " : j) + (u ? (u = void 0, N = c = !0, $ + (P ? (m[q - 1] = P, q) : "{" + o + "}") + ")") : ">" === r ? (l = !0, "h(" + f[0] + ")") : (!0, "((v=" + f[0] + ")!=null?v:" + (a ? "null)" : '"")'))) : (d = !0, "\n{view:view,content:false,tmpl:" + (D ? M.length : "false") + "," + o + "},"), L && !S) {
                                if (W = "[" + W.slice(0, -1) + "]", $ = 't("' + L + '",view,this,', a || p) {
                                    if ((W = new Function("data,view,j", " // " + w + " " + q + " " + L + O + W + B))._er = E, W._tag = L, p && De(m[q - 1] = W, p), W._lr = H, a) return W;
                                    v = $ + q + ",undefined,", y = ")"
                                }
                                W = x + j + $ + (p && q || W) + ")", p = 0, L = 0
                            }
                            E && !S && (N = !0, W += ";\n}catch(e){ret" + (a ? "urn " : "+=") + v + "j._err(e,view," + E + ")" + y + ";}" + (a ? "" : "\nret=ret"))
                        }
                        W = "// " + w + (z.debug ? "\ndebugger;" : "") + "\nvar v" + (d ? ",t=j._tag" : "") + (c ? ",c=j._cnvt" : "") + (l ? ",h=j._html" : "") + (a ? (n[8] ? ", ob" : "") + ";\n" : ',ret=""') + W + (a ? "\n" : ";\nreturn ret;");
                        try {
                            W = new Function("data,view,j", W)
                        } catch (e) {
                            be("Compiled template code:\n\n" + W + '\n: "' + (e.message || e) + '"')
                        }
                        return t && (t.fn = W, t.useViews = !!N), W
                    }

                    function Se(e, t) {
                        return e && e !== t ? t ? re(re({}, t), e) : e : t && re({}, t)
                    }

                    function xe(e, a) {
                        var i, n, r, s = a.tag,
                            o = a.props,
                            c = a.params.props,
                            u = o.filter,
                            m = o.sort,
                            _ = !0 === m,
                            p = parseInt(o.step),
                            h = o.reverse ? -1 : 1;
                        if (!l(e)) return e;
                        if (_ || m && "" + m === m ? ((i = e.map((function (e, t) {
                                return {
                                    i: t,
                                    v: "" + (e = _ ? e : de(e, m)) === e ? e.toLowerCase() : e
                                }
                            }))).sort((function (e, t) {
                                return e.v > t.v ? h : e.v < t.v ? -h : 0
                            })), e = i.map((function (t) {
                                return e[t.i]
                            }))) : (m || h < 0) && !s.dataMap && (e = e.slice()), d(m) && (e = e.sort((function () {
                                return m.apply(a, arguments)
                            }))), h < 0 && (!m || d(m)) && (e = e.reverse()), e.filter && u && (e = e.filter(u, a), a.tag.onFilter && a.tag.onFilter(a)), c.sorted && (i = m || h < 0 ? e : e.slice(), s.sorted ? t.observable(s.sorted).refresh(i) : a.map.sorted = i), n = o.start, r = o.end, (c.start && void 0 === n || c.end && void 0 === r) && (n = r = 0), isNaN(n) && isNaN(r) || (n = +n || 0, r = void 0 === r || r > e.length ? e.length : +r, e = e.slice(n, r)), p > 1) {
                            for (n = 0, r = e.length, i = []; n < r; n += p) i.push(e[n]);
                            e = i
                        }
                        return c.paged && s.paged && $observable(s.paged).refresh(e), e
                    }

                    function Ce(e, a, i) {
                        var n = this.jquery && (this[0] || we("Unknown template")),
                            r = n.getAttribute(W);
                        return $e.call(r && t.data(n).jsvTmpl || c(n), e, a, i)
                    }

                    function Ie(e) {
                        return R[e] || (R[e] = "&#" + e.charCodeAt(0) + ";")
                    }

                    function Pe(e, t) {
                        return q[t] || ""
                    }

                    function Ee(e) {
                        return null != e ? P.test(e) && ("" + e).replace(F, Ie) || e : ""
                    }
                    if (s = {
                            jsviews: D,
                            sub: {
                                rPath: /^(!*?)(?:null|true|false|\d[\d.]*|([\w$]+|\.|~([\w$]+)|#(view|([\w$]+))?)([\w$.^]*?)(?:[.[^]([\w$]+)\]?)?)$/g,
                                rPrm: /(\()(?=\s*\()|(?:([([])\s*)?(?:(\^?)(~?[\w$.^]+)?\s*((\+\+|--)|\+|-|~(?![\w$])|&&|\|\||===|!==|==|!=|<=|>=|[<>%*:?\/]|(=))\s*|(!*?(@)?[#~]?[\w$.^]+)([([])?)|(,\s*)|(?:(\()\s*)?\\?(?:(')|("))|(?:\s*(([)\]])(?=[.^]|\s*$|[^([])|[)\]])([([]?))|(\s+)/g,
                                View: _e,
                                Err: ne,
                                tmplFn: Le,
                                parse: Ye,
                                extend: re,
                                extendCtx: Se,
                                syntaxErr: be,
                                onStore: {
                                    template: function (e, t) {
                                        null === t ? delete G[e] : e && (G[e] = t)
                                    }
                                },
                                addSetting: ve,
                                settings: {
                                    allowCode: !1
                                },
                                advSet: ie,
                                _thp: te,
                                _gm: ee,
                                _tg: function () {},
                                _cnvt: function (e, t, a, i) {
                                    var n, r, s, o, d, l = "number" == typeof a && t.tmpl.bnds[a - 1];
                                    void 0 === i && l && l._lr && (i = "");
                                    void 0 !== i ? a = i = {
                                        props: {},
                                        args: [i]
                                    } : l && (a = l(t.data, t, p));
                                    if (l = l._bd && l, e || l) {
                                        if (r = t._lc, n = r && r.tag, a.view = t, !n) {
                                            if (n = re(new p._tg, {
                                                    _: {
                                                        bnd: l,
                                                        unlinked: !0,
                                                        lt: a.lt
                                                    },
                                                    inline: !r,
                                                    tagName: ":",
                                                    convert: e,
                                                    onArrayChange: !0,
                                                    flow: !0,
                                                    tagCtx: a,
                                                    tagCtxs: [a],
                                                    _is: "tag"
                                                }), (o = a.args.length) > 1)
                                                for (d = n.bindTo = []; o--;) d.unshift(o);
                                            r && (r.tag = n, n.linkCtx = r), a.ctx = Se(a.ctx, (r ? r.view : t).ctx), te(n, a)
                                        }
                                        n._er = i && s, n.ctx = a.ctx || n.ctx || {}, a.ctx = void 0, s = n.cvtArgs()[0], n._er = i && s
                                    } else s = a.args[0];
                                    return null != (s = l && t._.onRender ? t._.onRender(s, t, n) : s) ? s : ""
                                },
                                _tag: function (e, t, a, i, n, s) {
                                    function o(e) {
                                        var t = d[e];
                                        if (void 0 !== t)
                                            for (t = l(t) ? t : [t], f = t.length; f--;) F = t[f], isNaN(parseInt(F)) || (t[f] = parseInt(F));
                                        return t || [0]
                                    }
                                    var d, c, m, _, h, g, f, v, y, $, M, w, b, L, D, k, Y, T, S, x, C, I, P, E, F, H, O, B, A, R = 0,
                                        q = "",
                                        N = (t = t || r)._lc || !1,
                                        W = t.ctx,
                                        z = a || t.tmpl,
                                        V = "number" == typeof i && t.tmpl.bnds[i - 1];
                                    "tag" === e._is ? (e = (d = e).tagName, i = d.tagCtxs, d.template) : (c = t.getRsc("tags", e) || we("Unknown tag: {{" + e + "}} "), c.template);
                                    void 0 === s && V && (V._lr = c.lateRender && !1 !== V._lr || V._lr) && (s = "");
                                    void 0 !== s ? (q += s, i = s = [{
                                        props: {},
                                        args: [],
                                        params: {
                                            props: {}
                                        }
                                    }]) : V && (i = V(t.data, t, p));
                                    for (g = i.length; R < g; R++) $ = i[R], k = $.tmpl, (!N || !N.tag || R && !N.tag.inline || d._er || k && +k === k) && (k && z.tmpls && ($.tmpl = $.content = z.tmpls[k - 1]), $.index = R, $.ctxPrm = le, $.render = $e, $.cvtArgs = ce, $.bndArgs = me, $.view = t, $.ctx = Se(Se($.ctx, c && c.ctx), W)), (a = $.props.tmpl) && ($.tmpl = t._getTmpl(a), $.content = $.content || $.tmpl), d ? N && N.fn._lr && (Y = !!d.init) : (d = new c._ctr, Y = !!d.init, d.parent = h = W && W.tag, d.tagCtxs = i, N && (d.inline = !1, N.tag = d), d.linkCtx = N, (d._.bnd = V || N.fn) ? (d._.ths = $.params.props.this, d._.lt = i.lt, d._.arrVws = {}) : d.dataBoundOnly && we(e + " must be data-bound:\n{^{" + e + "}}")), P = d.dataMap, $.tag = d, P && i && ($.map = i[R].map), d.flow || (M = $.ctx = $.ctx || {}, m = d.parents = M.parentTags = W && Se(M.parentTags, W.parentTags) || {}, h && (m[h.tagName] = h), m[d.tagName] = M.tag = d, M.tagCtx = $);
                                    if (!(d._er = s)) {
                                        for (te(d, i[0]), d.rendering = {
                                                rndr: d.rendering
                                            }, R = 0; R < g; R++) {
                                            if ($ = d.tagCtx = i[R], I = $.props, d.ctx = $.ctx, !R) {
                                                if (Y && (d.init($, N, d.ctx), Y = void 0), $.args.length || !1 === $.argDefault || !1 === d.argDefault || ($.args = x = [$.view.data], $.params.args = ["#data"]), b = o("bindTo"), void 0 !== d.bindTo && (d.bindTo = b), void 0 !== d.bindFrom ? d.bindFrom = o("bindFrom") : d.bindTo && (d.bindFrom = d.bindTo = b), L = d.bindFrom || b, O = b.length, H = L.length, d._.bnd && (B = d.linkedElement) && (d.linkedElement = B = l(B) ? B : [B], O !== B.length && we("linkedElement not same length as bindTo")), (B = d.linkedCtxParam) && (d.linkedCtxParam = B = l(B) ? B : [B], H !== B.length && we("linkedCtxParam not same length as bindFrom/bindTo")), L)
                                                    for (d._.fromIndex = {}, d._.toIndex = {}, v = H; v--;)
                                                        for (F = L[v], f = O; f--;) F === b[f] && (d._.fromIndex[f] = v, d._.toIndex[v] = f);
                                                N && (N.attr = d.attr = N.attr || d.attr || N._dfAt), _ = d.attr, d._.noVws = _ && _ !== U
                                            }
                                            if (x = d.cvtArgs(R), d.linkedCtxParam)
                                                for (C = d.cvtArgs(R, 1), f = H, A = d.constructor.prototype.ctx; f--;)(w = d.linkedCtxParam[f]) && (F = L[f], D = C[f], $.ctx[w] = p._cp(A && void 0 === D ? A[w] : D, void 0 !== D && ue($.params, F), $.view, d._.bnd && {
                                                    tag: d,
                                                    cvt: d.convert,
                                                    ind: f,
                                                    tagElse: R
                                                }));
                                            (T = I.dataMap || P) && (x.length || I.dataMap) && ((S = $.map) && S.src === x[0] && !n || (S && S.src && S.unmap(), T.map(x[0], $, S, !d._.bnd), S = $.map), x = [S.tgt]), y = void 0, d.render && (y = d.render.apply(d, x), t.linked && y && !j.test(y) && ((a = {
                                                links: []
                                            }).render = a.fn = function () {
                                                return y
                                            }, y = Me(a, t.data, void 0, !0, t, void 0, void 0, d))), x.length || (x = [t]), void 0 === y && (E = x[0], d.contentCtx && (E = !0 === d.contentCtx ? t : d.contentCtx(E)), y = $.render(E, !0) || (n ? void 0 : "")), q = q ? q + (y || "") : void 0 !== y ? "" + y : void 0
                                        }
                                        d.rendering = d.rendering.rndr
                                    }
                                    d.tagCtx = i[0], d.ctx = d.tagCtx.ctx, d._.noVws && d.inline && (q = "text" === _ ? u.html(q) : "");
                                    return V && t._.onRender ? t._.onRender(q, t, d) : q
                                },
                                _er: we,
                                _err: function (e, t, a) {
                                    var i = void 0 !== a ? d(a) ? a.call(t.data, e, t) : a || "" : "{Error: " + (e.message || e) + "}";
                                    h.onError && void 0 !== (a = h.onError.call(t.data, e, a && i, t)) && (i = a);
                                    return t && !t._lc ? u.html(i) : i
                                },
                                _cp: ae,
                                _sq: function (e) {
                                    return "constructor" === e && be(""), e
                                }
                            },
                            settings: {
                                delimiters: function e(t, a, i) {
                                    if (!t) return h.delimiters;
                                    if (l(t)) return e.apply(s, t);
                                    w = i ? i[0] : w, /^(\W|_){5}$/.test(t + a + w) || we("Invalid delimiters");
                                    return v = t[0], y = t[1], $ = a[0], M = a[1], h.delimiters = [v + y, $ + M, w], t = "\\" + v + "(\\" + w + ")?\\" + y, a = "\\" + $ + "\\" + M, n = "(?:(\\w+(?=[\\/\\s\\" + $ + "]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^\\" + $ + "]|\\" + $ + "(?!\\" + M + "))*?)", p.rTag = "(?:" + n + ")", n = new RegExp("(?:" + t + n + "(\\/)?|\\" + v + "(\\" + w + ")?\\" + y + "(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))" + a, "g"), p.rTmpl = new RegExp("^\\s|\\s$|<.*>|([^\\\\]|^)[{}]|" + t + ".*" + a), f
                                },
                                advanced: function (e) {
                                    return e ? (re(g, e), p.advSet(), f) : g
                                }
                            },
                            map: ye
                        }, (ne.prototype = new Error).constructor = ne, se.depends = function () {
                            return [this.get("item"), "index"]
                        }, oe.depends = "index", _e.prototype = {
                            get: function (e, t) {
                                t || !0 === e || (t = e, e = void 0);
                                var a, i, n, r, s = this,
                                    o = "root" === t;
                                if (e) {
                                    if (!(r = t && s.type === t && s))
                                        if (a = s.views, s._.useKey) {
                                            for (i in a)
                                                if (r = t ? a[i].get(e, t) : a[i]) break
                                        } else
                                            for (i = 0, n = a.length; !r && i < n; i++) r = t ? a[i].get(e, t) : a[i]
                                } else if (o) r = s.root;
                                else if (t)
                                    for (; s && !r;) r = s.type === t ? s : void 0, s = s.parent;
                                else r = s.parent;
                                return r || void 0
                            },
                            getIndex: oe,
                            ctxPrm: le,
                            getRsc: function (e, t) {
                                var a, i, n = this;
                                if ("" + t === t) {
                                    for (; void 0 === a && n;) a = (i = n.tmpl && n.tmpl[e]) && i[t], n = n.parent;
                                    return a || s[e][t]
                                }
                            },
                            _getTmpl: function (e) {
                                return e && (e.fn ? e : this.getRsc("templates", e) || c(e))
                            },
                            _getOb: de,
                            getCache: function (e) {
                                return h._cchCt > this.cache._ct && (this.cache = {
                                    _ct: h._cchCt
                                }), this.cache[e] || (this.cache[e] = J[e](this.data, this, p))
                            },
                            _is: "view"
                        }, p = s.sub, f = s.settings, !(Q || t && t.render)) {
                        for (i in Z) fe(i, Z[i]);
                        if (u = s.converters, m = s.helpers, _ = s.tags, p._tg.prototype = {
                                baseApply: function (e) {
                                    return this.base.apply(this, e)
                                },
                                cvtArgs: ce,
                                bndArgs: me,
                                ctxPrm: le
                            }, r = p.topView = new _e, t) {
                            if (t.fn.render = Ce, o = t.expando, t.observable) {
                                if (D !== (D = t.views.jsviews)) throw "jquery.observable.js requires jsrender.js " + D;
                                re(p, t.views.sub), s.map = t.views.map
                            }
                        } else t = {}, a && (e.jsrender = t), t.renderFile = t.__express = t.compile = function () {
                            throw "Node.js: use npm jsrender, or jsrender-node.js"
                        }, t.isFunction = function (e) {
                            return "function" == typeof e
                        }, t.isArray = Array.isArray || function (e) {
                            return "[object Array]" === {}.toString.call(e)
                        }, p._jq = function (e) {
                            e !== t && (re(e, t), (t = e).fn.render = Ce, delete t.jsrender, o = t.expando)
                        }, t.jsrender = D;
                        for (b in (h = p.settings).allowCode = !1, d = t.isFunction, t.render = G, t.views = s, t.templates = c = s.templates, h) ve(b);
                        (f.debugMode = function (e) {
                            return void 0 === e ? h.debugMode : (h._clFns && h._clFns(), h.debugMode = e, h.onError = e + "" === e ? function () {
                                return e
                            } : d(e) ? e : void 0, f)
                        })(!1), g = h.advanced = {
                            cache: !0,
                            useViews: !1,
                            _jsv: !1
                        }, _({
                            if: {
                                render: function (e) {
                                    var t = this,
                                        a = t.tagCtx;
                                    return t.rendering.done || !e && (a.args.length || !a.index) ? "" : (t.rendering.done = !0, void(t.selected = a.index))
                                },
                                contentCtx: !0,
                                flow: !0
                            },
                            for: {
                                sortDataMap: ye(xe),
                                init: function (e, t) {
                                    this.setDataMap(this.tagCtxs)
                                },
                                render: function (e) {
                                    var t, a, i, n, r, s = this,
                                        o = s.tagCtx,
                                        d = !1 === o.argDefault,
                                        c = o.props,
                                        u = d || o.args.length,
                                        m = "",
                                        _ = 0;
                                    if (!s.rendering.done) {
                                        if (t = u ? e : o.view.data, d)
                                            for (d = c.reverse ? "unshift" : "push", n = +c.end, r = +c.step || 1, t = [], i = +c.start || 0;
                                                (n - i) * r > 0; i += r) t[d](i);
                                        void 0 !== t && (a = l(t), m += o.render(t, !u || c.noIteration), _ += a ? t.length : 1), (s.rendering.done = _) && (s.selected = o.index)
                                    }
                                    return m
                                },
                                setDataMap: function (e) {
                                    for (var t, a, i, n = e.length; n--;) a = (t = e[n]).props, i = t.params.props, t.argDefault = void 0 === a.end || t.args.length > 0, a.dataMap = !1 !== t.argDefault && l(t.args[0]) && (i.sort || i.start || i.end || i.step || i.filter || i.reverse || a.sort || a.start || a.end || a.step || a.filter || a.reverse) && this.sortDataMap
                                },
                                flow: !0
                            },
                            props: {
                                baseTag: "for",
                                dataMap: ye((function (e, a) {
                                    var i, n, r = a.map,
                                        s = r && r.propsArr;
                                    if (!s) {
                                        if (s = [], typeof e === N || d(e))
                                            for (i in e) n = e[i], i === o || !e.hasOwnProperty(i) || a.props.noFunctions && t.isFunction(n) || s.push({
                                                key: i,
                                                prop: n
                                            });
                                        r && (r.propsArr = r.options && s)
                                    }
                                    return xe(s, a)
                                })),
                                init: ie,
                                flow: !0
                            },
                            include: {
                                flow: !0
                            },
                            "*": {
                                render: ae,
                                flow: !0
                            },
                            ":*": {
                                render: ae,
                                flow: !0
                            },
                            dbg: m.dbg = u.dbg = function (e) {
                                try {
                                    throw console.log("JsRender dbg breakpoint: " + e), "dbg breakpoint"
                                } catch (e) {}
                                return this.base ? this.baseApply(arguments) : e
                            }
                        }), u({
                            html: Ee,
                            attr: Ee,
                            encode: function (e) {
                                return "" + e === e ? e.replace(H, Ie) : e
                            },
                            unencode: function (e) {
                                return "" + e === e ? e.replace(O, Pe) : e
                            },
                            url: function (e) {
                                return null != e ? encodeURI("" + e) : null === e ? e : ""
                            }
                        })
                    }
                    return h = p.settings, l = (t || Q).isArray, f.delimiters("{{", "}}", "^"), K && Q.views.sub._jq(t), t || Q
                }), window)
            },
            1033: () => {},
            4185: () => {},
            586: () => {},
            5195: () => {},
            6449: () => {},
            3257: () => {},
            5913: () => {},
            1123: () => {},
            2459: () => {},
            2786: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("af", {
                        months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
                        monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
                        weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
                        weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
                        weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
                        meridiemParse: /vm|nm/i,
                        isPM: function (e) {
                            return /^nm$/i.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? a ? "vm" : "VM" : a ? "nm" : "NM"
                        },
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Vandag om] LT",
                            nextDay: "[Môre om] LT",
                            nextWeek: "dddd [om] LT",
                            lastDay: "[Gister om] LT",
                            lastWeek: "[Laas] dddd [om] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "oor %s",
                            past: "%s gelede",
                            s: "'n paar sekondes",
                            ss: "%d sekondes",
                            m: "'n minuut",
                            mm: "%d minute",
                            h: "'n uur",
                            hh: "%d ure",
                            d: "'n dag",
                            dd: "%d dae",
                            M: "'n maand",
                            MM: "%d maande",
                            y: "'n jaar",
                            yy: "%d jaar"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                        ordinal: function (e) {
                            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4130: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = function (e) {
                            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                        },
                        a = {
                            s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                            m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                            h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                            d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                            M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                            y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                        },
                        i = function (e) {
                            return function (i, n, r, s) {
                                var o = t(i),
                                    d = a[e][t(i)];
                                return 2 === o && (d = d[n ? 0 : 1]), d.replace(/%d/i, i)
                            }
                        },
                        n = ["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                    e.defineLocale("ar-dz", {
                        months: n,
                        monthsShort: n,
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "D/‏M/‏YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ص|م/,
                        isPM: function (e) {
                            return "م" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ص" : "م"
                        },
                        calendar: {
                            sameDay: "[اليوم عند الساعة] LT",
                            nextDay: "[غدًا عند الساعة] LT",
                            nextWeek: "dddd [عند الساعة] LT",
                            lastDay: "[أمس عند الساعة] LT",
                            lastWeek: "dddd [عند الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "بعد %s",
                            past: "منذ %s",
                            s: i("s"),
                            ss: i("s"),
                            m: i("m"),
                            mm: i("m"),
                            h: i("h"),
                            hh: i("h"),
                            d: i("d"),
                            dd: i("d"),
                            M: i("M"),
                            MM: i("M"),
                            y: i("y"),
                            yy: i("y")
                        },
                        postformat: function (e) {
                            return e.replace(/,/g, "،")
                        },
                        week: {
                            dow: 0,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6135: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ar-kw", {
                        months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                        monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                        weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[اليوم على الساعة] LT",
                            nextDay: "[غدا على الساعة] LT",
                            nextWeek: "dddd [على الساعة] LT",
                            lastDay: "[أمس على الساعة] LT",
                            lastWeek: "dddd [على الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "في %s",
                            past: "منذ %s",
                            s: "ثوان",
                            ss: "%d ثانية",
                            m: "دقيقة",
                            mm: "%d دقائق",
                            h: "ساعة",
                            hh: "%d ساعات",
                            d: "يوم",
                            dd: "%d أيام",
                            M: "شهر",
                            MM: "%d أشهر",
                            y: "سنة",
                            yy: "%d سنوات"
                        },
                        week: {
                            dow: 0,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            6440: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "1",
                            2: "2",
                            3: "3",
                            4: "4",
                            5: "5",
                            6: "6",
                            7: "7",
                            8: "8",
                            9: "9",
                            0: "0"
                        },
                        a = function (e) {
                            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                        },
                        i = {
                            s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                            m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                            h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                            d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                            M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                            y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                        },
                        n = function (e) {
                            return function (t, n, r, s) {
                                var o = a(t),
                                    d = i[e][a(t)];
                                return 2 === o && (d = d[n ? 0 : 1]), d.replace(/%d/i, t)
                            }
                        },
                        r = ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                    e.defineLocale("ar-ly", {
                        months: r,
                        monthsShort: r,
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "D/‏M/‏YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ص|م/,
                        isPM: function (e) {
                            return "م" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ص" : "م"
                        },
                        calendar: {
                            sameDay: "[اليوم عند الساعة] LT",
                            nextDay: "[غدًا عند الساعة] LT",
                            nextWeek: "dddd [عند الساعة] LT",
                            lastDay: "[أمس عند الساعة] LT",
                            lastWeek: "dddd [عند الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "بعد %s",
                            past: "منذ %s",
                            s: n("s"),
                            ss: n("s"),
                            m: n("m"),
                            mm: n("m"),
                            h: n("h"),
                            hh: n("h"),
                            d: n("d"),
                            dd: n("d"),
                            M: n("M"),
                            MM: n("M"),
                            y: n("y"),
                            yy: n("y")
                        },
                        preparse: function (e) {
                            return e.replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            })).replace(/,/g, "،")
                        },
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            7702: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ar-ma", {
                        months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                        monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[اليوم على الساعة] LT",
                            nextDay: "[غدا على الساعة] LT",
                            nextWeek: "dddd [على الساعة] LT",
                            lastDay: "[أمس على الساعة] LT",
                            lastWeek: "dddd [على الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "في %s",
                            past: "منذ %s",
                            s: "ثوان",
                            ss: "%d ثانية",
                            m: "دقيقة",
                            mm: "%d دقائق",
                            h: "ساعة",
                            hh: "%d ساعات",
                            d: "يوم",
                            dd: "%d أيام",
                            M: "شهر",
                            MM: "%d أشهر",
                            y: "سنة",
                            yy: "%d سنوات"
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6040: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "١",
                            2: "٢",
                            3: "٣",
                            4: "٤",
                            5: "٥",
                            6: "٦",
                            7: "٧",
                            8: "٨",
                            9: "٩",
                            0: "٠"
                        },
                        a = {
                            "١": "1",
                            "٢": "2",
                            "٣": "3",
                            "٤": "4",
                            "٥": "5",
                            "٦": "6",
                            "٧": "7",
                            "٨": "8",
                            "٩": "9",
                            "٠": "0"
                        };
                    e.defineLocale("ar-sa", {
                        months: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                        monthsShort: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ص|م/,
                        isPM: function (e) {
                            return "م" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ص" : "م"
                        },
                        calendar: {
                            sameDay: "[اليوم على الساعة] LT",
                            nextDay: "[غدا على الساعة] LT",
                            nextWeek: "dddd [على الساعة] LT",
                            lastDay: "[أمس على الساعة] LT",
                            lastWeek: "dddd [على الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "في %s",
                            past: "منذ %s",
                            s: "ثوان",
                            ss: "%d ثانية",
                            m: "دقيقة",
                            mm: "%d دقائق",
                            h: "ساعة",
                            hh: "%d ساعات",
                            d: "يوم",
                            dd: "%d أيام",
                            M: "شهر",
                            MM: "%d أشهر",
                            y: "سنة",
                            yy: "%d سنوات"
                        },
                        preparse: function (e) {
                            return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function (e) {
                                return a[e]
                            })).replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            })).replace(/,/g, "،")
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            7100: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ar-tn", {
                        months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                        monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[اليوم على الساعة] LT",
                            nextDay: "[غدا على الساعة] LT",
                            nextWeek: "dddd [على الساعة] LT",
                            lastDay: "[أمس على الساعة] LT",
                            lastWeek: "dddd [على الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "في %s",
                            past: "منذ %s",
                            s: "ثوان",
                            ss: "%d ثانية",
                            m: "دقيقة",
                            mm: "%d دقائق",
                            h: "ساعة",
                            hh: "%d ساعات",
                            d: "يوم",
                            dd: "%d أيام",
                            M: "شهر",
                            MM: "%d أشهر",
                            y: "سنة",
                            yy: "%d سنوات"
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            867: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "١",
                            2: "٢",
                            3: "٣",
                            4: "٤",
                            5: "٥",
                            6: "٦",
                            7: "٧",
                            8: "٨",
                            9: "٩",
                            0: "٠"
                        },
                        a = {
                            "١": "1",
                            "٢": "2",
                            "٣": "3",
                            "٤": "4",
                            "٥": "5",
                            "٦": "6",
                            "٧": "7",
                            "٨": "8",
                            "٩": "9",
                            "٠": "0"
                        },
                        i = function (e) {
                            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                        },
                        n = {
                            s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                            m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                            h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                            d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                            M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                            y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                        },
                        r = function (e) {
                            return function (t, a, r, s) {
                                var o = i(t),
                                    d = n[e][i(t)];
                                return 2 === o && (d = d[a ? 0 : 1]), d.replace(/%d/i, t)
                            }
                        },
                        s = ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                    e.defineLocale("ar", {
                        months: s,
                        monthsShort: s,
                        weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                        weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                        weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "D/‏M/‏YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ص|م/,
                        isPM: function (e) {
                            return "م" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ص" : "م"
                        },
                        calendar: {
                            sameDay: "[اليوم عند الساعة] LT",
                            nextDay: "[غدًا عند الساعة] LT",
                            nextWeek: "dddd [عند الساعة] LT",
                            lastDay: "[أمس عند الساعة] LT",
                            lastWeek: "dddd [عند الساعة] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "بعد %s",
                            past: "منذ %s",
                            s: r("s"),
                            ss: r("s"),
                            m: r("m"),
                            mm: r("m"),
                            h: r("h"),
                            hh: r("h"),
                            d: r("d"),
                            dd: r("d"),
                            M: r("M"),
                            MM: r("M"),
                            y: r("y"),
                            yy: r("y")
                        },
                        preparse: function (e) {
                            return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function (e) {
                                return a[e]
                            })).replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            })).replace(/,/g, "،")
                        },
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            1083: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        1: "-inci",
                        5: "-inci",
                        8: "-inci",
                        70: "-inci",
                        80: "-inci",
                        2: "-nci",
                        7: "-nci",
                        20: "-nci",
                        50: "-nci",
                        3: "-üncü",
                        4: "-üncü",
                        100: "-üncü",
                        6: "-ncı",
                        9: "-uncu",
                        10: "-uncu",
                        30: "-uncu",
                        60: "-ıncı",
                        90: "-ıncı"
                    };
                    e.defineLocale("az", {
                        months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
                        monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
                        weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
                        weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
                        weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[bugün saat] LT",
                            nextDay: "[sabah saat] LT",
                            nextWeek: "[gələn həftə] dddd [saat] LT",
                            lastDay: "[dünən] LT",
                            lastWeek: "[keçən həftə] dddd [saat] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s sonra",
                            past: "%s əvvəl",
                            s: "bir neçə saniyə",
                            ss: "%d saniyə",
                            m: "bir dəqiqə",
                            mm: "%d dəqiqə",
                            h: "bir saat",
                            hh: "%d saat",
                            d: "bir gün",
                            dd: "%d gün",
                            M: "bir ay",
                            MM: "%d ay",
                            y: "bir il",
                            yy: "%d il"
                        },
                        meridiemParse: /gecə|səhər|gündüz|axşam/,
                        isPM: function (e) {
                            return /^(gündüz|axşam)$/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "gecə" : e < 12 ? "səhər" : e < 17 ? "gündüz" : "axşam"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
                        ordinal: function (e) {
                            if (0 === e) return e + "-ıncı";
                            var a = e % 10,
                                i = e % 100 - a,
                                n = e >= 100 ? 100 : null;
                            return e + (t[a] || t[i] || t[n])
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            9808: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t) {
                        var a = e.split("_");
                        return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                    }

                    function a(e, a, i) {
                        return "m" === i ? a ? "хвіліна" : "хвіліну" : "h" === i ? a ? "гадзіна" : "гадзіну" : e + " " + t({
                            ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                            mm: a ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
                            hh: a ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
                            dd: "дзень_дні_дзён",
                            MM: "месяц_месяцы_месяцаў",
                            yy: "год_гады_гадоў"
                        } [i], +e)
                    }
                    e.defineLocale("be", {
                        months: {
                            format: "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),
                            standalone: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")
                        },
                        monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
                        weekdays: {
                            format: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),
                            standalone: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
                            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
                        },
                        weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
                        weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY г.",
                            LLL: "D MMMM YYYY г., HH:mm",
                            LLLL: "dddd, D MMMM YYYY г., HH:mm"
                        },
                        calendar: {
                            sameDay: "[Сёння ў] LT",
                            nextDay: "[Заўтра ў] LT",
                            lastDay: "[Учора ў] LT",
                            nextWeek: function () {
                                return "[У] dddd [ў] LT"
                            },
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                    case 3:
                                    case 5:
                                    case 6:
                                        return "[У мінулую] dddd [ў] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                        return "[У мінулы] dddd [ў] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "праз %s",
                            past: "%s таму",
                            s: "некалькі секунд",
                            m: a,
                            mm: a,
                            h: a,
                            hh: a,
                            d: "дзень",
                            dd: a,
                            M: "месяц",
                            MM: a,
                            y: "год",
                            yy: a
                        },
                        meridiemParse: /ночы|раніцы|дня|вечара/,
                        isPM: function (e) {
                            return /^(дня|вечара)$/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "ночы" : e < 12 ? "раніцы" : e < 17 ? "дня" : "вечара"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "M":
                                case "d":
                                case "DDD":
                                case "w":
                                case "W":
                                    return e % 10 != 2 && e % 10 != 3 || e % 100 == 12 || e % 100 == 13 ? e + "-ы" : e + "-і";
                                case "D":
                                    return e + "-га";
                                default:
                                    return e
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            8338: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("bg", {
                        months: "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
                        monthsShort: "яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
                        weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
                        weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
                        weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "D.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY H:mm",
                            LLLL: "dddd, D MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[Днес в] LT",
                            nextDay: "[Утре в] LT",
                            nextWeek: "dddd [в] LT",
                            lastDay: "[Вчера в] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                    case 3:
                                    case 6:
                                        return "[Миналата] dddd [в] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[Миналия] dddd [в] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "след %s",
                            past: "преди %s",
                            s: "няколко секунди",
                            ss: "%d секунди",
                            m: "минута",
                            mm: "%d минути",
                            h: "час",
                            hh: "%d часа",
                            d: "ден",
                            dd: "%d дена",
                            w: "седмица",
                            ww: "%d седмици",
                            M: "месец",
                            MM: "%d месеца",
                            y: "година",
                            yy: "%d години"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
                        ordinal: function (e) {
                            var t = e % 10,
                                a = e % 100;
                            return 0 === e ? e + "-ев" : 0 === a ? e + "-ен" : a > 10 && a < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7438: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("bm", {
                        months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split("_"),
                        monthsShort: "Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split("_"),
                        weekdays: "Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
                        weekdaysShort: "Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),
                        weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "MMMM [tile] D [san] YYYY",
                            LLL: "MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
                            LLLL: "dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"
                        },
                        calendar: {
                            sameDay: "[Bi lɛrɛ] LT",
                            nextDay: "[Sini lɛrɛ] LT",
                            nextWeek: "dddd [don lɛrɛ] LT",
                            lastDay: "[Kunu lɛrɛ] LT",
                            lastWeek: "dddd [tɛmɛnen lɛrɛ] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s kɔnɔ",
                            past: "a bɛ %s bɔ",
                            s: "sanga dama dama",
                            ss: "sekondi %d",
                            m: "miniti kelen",
                            mm: "miniti %d",
                            h: "lɛrɛ kelen",
                            hh: "lɛrɛ %d",
                            d: "tile kelen",
                            dd: "tile %d",
                            M: "kalo kelen",
                            MM: "kalo %d",
                            y: "san kelen",
                            yy: "san %d"
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6225: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "১",
                            2: "২",
                            3: "৩",
                            4: "৪",
                            5: "৫",
                            6: "৬",
                            7: "৭",
                            8: "৮",
                            9: "৯",
                            0: "০"
                        },
                        a = {
                            "১": "1",
                            "২": "2",
                            "৩": "3",
                            "৪": "4",
                            "৫": "5",
                            "৬": "6",
                            "৭": "7",
                            "৮": "8",
                            "৯": "9",
                            "০": "0"
                        };
                    e.defineLocale("bn-bd", {
                        months: "জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
                        monthsShort: "জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
                        weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),
                        weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
                        weekdaysMin: "রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),
                        longDateFormat: {
                            LT: "A h:mm সময়",
                            LTS: "A h:mm:ss সময়",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm সময়",
                            LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
                        },
                        calendar: {
                            sameDay: "[আজ] LT",
                            nextDay: "[আগামীকাল] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[গতকাল] LT",
                            lastWeek: "[গত] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s পরে",
                            past: "%s আগে",
                            s: "কয়েক সেকেন্ড",
                            ss: "%d সেকেন্ড",
                            m: "এক মিনিট",
                            mm: "%d মিনিট",
                            h: "এক ঘন্টা",
                            hh: "%d ঘন্টা",
                            d: "এক দিন",
                            dd: "%d দিন",
                            M: "এক মাস",
                            MM: "%d মাস",
                            y: "এক বছর",
                            yy: "%d বছর"
                        },
                        preparse: function (e) {
                            return e.replace(/[১২৩৪৫৬৭৮৯০]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "রাত" === t ? e < 4 ? e : e + 12 : "ভোর" === t || "সকাল" === t ? e : "দুপুর" === t ? e >= 3 ? e : e + 12 : "বিকাল" === t || "সন্ধ্যা" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "রাত" : e < 6 ? "ভোর" : e < 12 ? "সকাল" : e < 15 ? "দুপুর" : e < 18 ? "বিকাল" : e < 20 ? "সন্ধ্যা" : "রাত"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            8905: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "১",
                            2: "২",
                            3: "৩",
                            4: "৪",
                            5: "৫",
                            6: "৬",
                            7: "৭",
                            8: "৮",
                            9: "৯",
                            0: "০"
                        },
                        a = {
                            "১": "1",
                            "২": "2",
                            "৩": "3",
                            "৪": "4",
                            "৫": "5",
                            "৬": "6",
                            "৭": "7",
                            "৮": "8",
                            "৯": "9",
                            "০": "0"
                        };
                    e.defineLocale("bn", {
                        months: "জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
                        monthsShort: "জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
                        weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),
                        weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
                        weekdaysMin: "রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),
                        longDateFormat: {
                            LT: "A h:mm সময়",
                            LTS: "A h:mm:ss সময়",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm সময়",
                            LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
                        },
                        calendar: {
                            sameDay: "[আজ] LT",
                            nextDay: "[আগামীকাল] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[গতকাল] LT",
                            lastWeek: "[গত] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s পরে",
                            past: "%s আগে",
                            s: "কয়েক সেকেন্ড",
                            ss: "%d সেকেন্ড",
                            m: "এক মিনিট",
                            mm: "%d মিনিট",
                            h: "এক ঘন্টা",
                            hh: "%d ঘন্টা",
                            d: "এক দিন",
                            dd: "%d দিন",
                            M: "এক মাস",
                            MM: "%d মাস",
                            y: "এক বছর",
                            yy: "%d বছর"
                        },
                        preparse: function (e) {
                            return e.replace(/[১২৩৪৫৬৭৮৯০]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "রাত" === t && e >= 4 || "দুপুর" === t && e < 5 || "বিকাল" === t ? e + 12 : e
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "রাত" : e < 10 ? "সকাল" : e < 17 ? "দুপুর" : e < 20 ? "বিকাল" : "রাত"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            1560: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "༡",
                            2: "༢",
                            3: "༣",
                            4: "༤",
                            5: "༥",
                            6: "༦",
                            7: "༧",
                            8: "༨",
                            9: "༩",
                            0: "༠"
                        },
                        a = {
                            "༡": "1",
                            "༢": "2",
                            "༣": "3",
                            "༤": "4",
                            "༥": "5",
                            "༦": "6",
                            "༧": "7",
                            "༨": "8",
                            "༩": "9",
                            "༠": "0"
                        };
                    e.defineLocale("bo", {
                        months: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
                        monthsShort: "ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12".split("_"),
                        monthsShortRegex: /^(ཟླ་\d{1,2})/,
                        monthsParseExact: !0,
                        weekdays: "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),
                        weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
                        weekdaysMin: "ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན".split("_"),
                        longDateFormat: {
                            LT: "A h:mm",
                            LTS: "A h:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm",
                            LLLL: "dddd, D MMMM YYYY, A h:mm"
                        },
                        calendar: {
                            sameDay: "[དི་རིང] LT",
                            nextDay: "[སང་ཉིན] LT",
                            nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
                            lastDay: "[ཁ་སང] LT",
                            lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s ལ་",
                            past: "%s སྔན་ལ",
                            s: "ལམ་སང",
                            ss: "%d སྐར་ཆ།",
                            m: "སྐར་མ་གཅིག",
                            mm: "%d སྐར་མ",
                            h: "ཆུ་ཚོད་གཅིག",
                            hh: "%d ཆུ་ཚོད",
                            d: "ཉིན་གཅིག",
                            dd: "%d ཉིན་",
                            M: "ཟླ་བ་གཅིག",
                            MM: "%d ཟླ་བ",
                            y: "ལོ་གཅིག",
                            yy: "%d ལོ"
                        },
                        preparse: function (e) {
                            return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "མཚན་མོ" === t && e >= 4 || "ཉིན་གུང" === t && e < 5 || "དགོང་དག" === t ? e + 12 : e
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "མཚན་མོ" : e < 10 ? "ཞོགས་ཀས" : e < 17 ? "ཉིན་གུང" : e < 20 ? "དགོང་དག" : "མཚན་མོ"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            1278: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a) {
                        return e + " " + n({
                            mm: "munutenn",
                            MM: "miz",
                            dd: "devezh"
                        } [a], e)
                    }

                    function a(e) {
                        switch (i(e)) {
                            case 1:
                            case 3:
                            case 4:
                            case 5:
                            case 9:
                                return e + " bloaz";
                            default:
                                return e + " vloaz"
                        }
                    }

                    function i(e) {
                        return e > 9 ? i(e % 10) : e
                    }

                    function n(e, t) {
                        return 2 === t ? r(e) : e
                    }

                    function r(e) {
                        var t = {
                            m: "v",
                            b: "v",
                            d: "z"
                        };
                        return void 0 === t[e.charAt(0)] ? e : t[e.charAt(0)] + e.substring(1)
                    }
                    var s = [/^gen/i, /^c[ʼ\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^(mez|eve)/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i],
                        o = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
                        d = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
                        l = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
                        c = [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\']her/i, /^yaou/i, /^gwener/i, /^sadorn/i],
                        u = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i],
                        m = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i];
                    e.defineLocale("br", {
                        months: "Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
                        monthsShort: "Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
                        weekdays: "Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn".split("_"),
                        weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
                        weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
                        weekdaysParse: m,
                        fullWeekdaysParse: c,
                        shortWeekdaysParse: u,
                        minWeekdaysParse: m,
                        monthsRegex: o,
                        monthsShortRegex: o,
                        monthsStrictRegex: d,
                        monthsShortStrictRegex: l,
                        monthsParse: s,
                        longMonthsParse: s,
                        shortMonthsParse: s,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [a viz] MMMM YYYY",
                            LLL: "D [a viz] MMMM YYYY HH:mm",
                            LLLL: "dddd, D [a viz] MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Hiziv da] LT",
                            nextDay: "[Warcʼhoazh da] LT",
                            nextWeek: "dddd [da] LT",
                            lastDay: "[Decʼh da] LT",
                            lastWeek: "dddd [paset da] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "a-benn %s",
                            past: "%s ʼzo",
                            s: "un nebeud segondennoù",
                            ss: "%d eilenn",
                            m: "ur vunutenn",
                            mm: t,
                            h: "un eur",
                            hh: "%d eur",
                            d: "un devezh",
                            dd: t,
                            M: "ur miz",
                            MM: t,
                            y: "ur bloaz",
                            yy: a
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
                        ordinal: function (e) {
                            return e + (1 === e ? "añ" : "vet")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        },
                        meridiemParse: /a.m.|g.m./,
                        isPM: function (e) {
                            return "g.m." === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "a.m." : "g.m."
                        }
                    })
                }(a(381))
            },
            622: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a) {
                        var i = e + " ";
                        switch (a) {
                            case "ss":
                                return i += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
                            case "m":
                                return t ? "jedna minuta" : "jedne minute";
                            case "mm":
                                return i += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                            case "h":
                                return t ? "jedan sat" : "jednog sata";
                            case "hh":
                                return i += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                            case "dd":
                                return i += 1 === e ? "dan" : "dana";
                            case "MM":
                                return i += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                            case "yy":
                                return i += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                        }
                    }
                    e.defineLocale("bs", {
                        months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
                        monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                        weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                        weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd, D. MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[danas u] LT",
                            nextDay: "[sutra u] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[u] [nedjelju] [u] LT";
                                    case 3:
                                        return "[u] [srijedu] [u] LT";
                                    case 6:
                                        return "[u] [subotu] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[u] dddd [u] LT"
                                }
                            },
                            lastDay: "[jučer u] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                    case 3:
                                        return "[prošlu] dddd [u] LT";
                                    case 6:
                                        return "[prošle] [subote] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[prošli] dddd [u] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "prije %s",
                            s: "par sekundi",
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: "dan",
                            dd: t,
                            M: "mjesec",
                            MM: t,
                            y: "godinu",
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            2468: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ca", {
                        months: {
                            standalone: "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
                            format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),
                            isFormat: /D[oD]?(\s)+MMMM/
                        },
                        monthsShort: "gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
                        weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
                        weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM [de] YYYY",
                            ll: "D MMM YYYY",
                            LLL: "D MMMM [de] YYYY [a les] H:mm",
                            lll: "D MMM YYYY, H:mm",
                            LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
                            llll: "ddd D MMM YYYY, H:mm"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                            },
                            nextDay: function () {
                                return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                            },
                            lastDay: function () {
                                return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                            },
                            lastWeek: function () {
                                return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "d'aquí %s",
                            past: "fa %s",
                            s: "uns segons",
                            ss: "%d segons",
                            m: "un minut",
                            mm: "%d minuts",
                            h: "una hora",
                            hh: "%d hores",
                            d: "un dia",
                            dd: "%d dies",
                            M: "un mes",
                            MM: "%d mesos",
                            y: "un any",
                            yy: "%d anys"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
                        ordinal: function (e, t) {
                            var a = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                            return "w" !== t && "W" !== t || (a = "a"), e + a
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5822: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"),
                        a = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"),
                        i = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i],
                        n = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

                    function r(e) {
                        return e > 1 && e < 5 && 1 != ~~(e / 10)
                    }

                    function s(e, t, a, i) {
                        var n = e + " ";
                        switch (a) {
                            case "s":
                                return t || i ? "pár sekund" : "pár sekundami";
                            case "ss":
                                return t || i ? n + (r(e) ? "sekundy" : "sekund") : n + "sekundami";
                            case "m":
                                return t ? "minuta" : i ? "minutu" : "minutou";
                            case "mm":
                                return t || i ? n + (r(e) ? "minuty" : "minut") : n + "minutami";
                            case "h":
                                return t ? "hodina" : i ? "hodinu" : "hodinou";
                            case "hh":
                                return t || i ? n + (r(e) ? "hodiny" : "hodin") : n + "hodinami";
                            case "d":
                                return t || i ? "den" : "dnem";
                            case "dd":
                                return t || i ? n + (r(e) ? "dny" : "dní") : n + "dny";
                            case "M":
                                return t || i ? "měsíc" : "měsícem";
                            case "MM":
                                return t || i ? n + (r(e) ? "měsíce" : "měsíců") : n + "měsíci";
                            case "y":
                                return t || i ? "rok" : "rokem";
                            case "yy":
                                return t || i ? n + (r(e) ? "roky" : "let") : n + "lety"
                        }
                    }
                    e.defineLocale("cs", {
                        months: t,
                        monthsShort: a,
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
                        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
                        weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
                        weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd D. MMMM YYYY H:mm",
                            l: "D. M. YYYY"
                        },
                        calendar: {
                            sameDay: "[dnes v] LT",
                            nextDay: "[zítra v] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[v neděli v] LT";
                                    case 1:
                                    case 2:
                                        return "[v] dddd [v] LT";
                                    case 3:
                                        return "[ve středu v] LT";
                                    case 4:
                                        return "[ve čtvrtek v] LT";
                                    case 5:
                                        return "[v pátek v] LT";
                                    case 6:
                                        return "[v sobotu v] LT"
                                }
                            },
                            lastDay: "[včera v] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[minulou neděli v] LT";
                                    case 1:
                                    case 2:
                                        return "[minulé] dddd [v] LT";
                                    case 3:
                                        return "[minulou středu v] LT";
                                    case 4:
                                    case 5:
                                        return "[minulý] dddd [v] LT";
                                    case 6:
                                        return "[minulou sobotu v] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "před %s",
                            s,
                            ss: s,
                            m: s,
                            mm: s,
                            h: s,
                            hh: s,
                            d: s,
                            dd: s,
                            M: s,
                            MM: s,
                            y: s,
                            yy: s
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9794: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("cv", {
                        months: "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),
                        monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),
                        weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),
                        weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
                        weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD-MM-YYYY",
                            LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
                            LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
                            LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
                        },
                        calendar: {
                            sameDay: "[Паян] LT [сехетре]",
                            nextDay: "[Ыран] LT [сехетре]",
                            lastDay: "[Ӗнер] LT [сехетре]",
                            nextWeek: "[Ҫитес] dddd LT [сехетре]",
                            lastWeek: "[Иртнӗ] dddd LT [сехетре]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: function (e) {
                                return e + (/сехет$/i.exec(e) ? "рен" : /ҫул$/i.exec(e) ? "тан" : "ран")
                            },
                            past: "%s каялла",
                            s: "пӗр-ик ҫеккунт",
                            ss: "%d ҫеккунт",
                            m: "пӗр минут",
                            mm: "%d минут",
                            h: "пӗр сехет",
                            hh: "%d сехет",
                            d: "пӗр кун",
                            dd: "%d кун",
                            M: "пӗр уйӑх",
                            MM: "%d уйӑх",
                            y: "пӗр ҫул",
                            yy: "%d ҫул"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
                        ordinal: "%d-мӗш",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7373: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("cy", {
                        months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
                        monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
                        weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
                        weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
                        weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Heddiw am] LT",
                            nextDay: "[Yfory am] LT",
                            nextWeek: "dddd [am] LT",
                            lastDay: "[Ddoe am] LT",
                            lastWeek: "dddd [diwethaf am] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "mewn %s",
                            past: "%s yn ôl",
                            s: "ychydig eiliadau",
                            ss: "%d eiliad",
                            m: "munud",
                            mm: "%d munud",
                            h: "awr",
                            hh: "%d awr",
                            d: "diwrnod",
                            dd: "%d diwrnod",
                            M: "mis",
                            MM: "%d mis",
                            y: "blwyddyn",
                            yy: "%d flynedd"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
                        ordinal: function (e) {
                            var t = "";
                            return e > 20 ? t = 40 === e || 50 === e || 60 === e || 80 === e || 100 === e ? "fed" : "ain" : e > 0 && (t = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"][e]), e + t
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4780: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("da", {
                        months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
                        monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                        weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
                        weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
                        weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY HH:mm",
                            LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
                        },
                        calendar: {
                            sameDay: "[i dag kl.] LT",
                            nextDay: "[i morgen kl.] LT",
                            nextWeek: "på dddd [kl.] LT",
                            lastDay: "[i går kl.] LT",
                            lastWeek: "[i] dddd[s kl.] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "om %s",
                            past: "%s siden",
                            s: "få sekunder",
                            ss: "%d sekunder",
                            m: "et minut",
                            mm: "%d minutter",
                            h: "en time",
                            hh: "%d timer",
                            d: "en dag",
                            dd: "%d dage",
                            M: "en måned",
                            MM: "%d måneder",
                            y: "et år",
                            yy: "%d år"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4001: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            m: ["eine Minute", "einer Minute"],
                            h: ["eine Stunde", "einer Stunde"],
                            d: ["ein Tag", "einem Tag"],
                            dd: [e + " Tage", e + " Tagen"],
                            w: ["eine Woche", "einer Woche"],
                            M: ["ein Monat", "einem Monat"],
                            MM: [e + " Monate", e + " Monaten"],
                            y: ["ein Jahr", "einem Jahr"],
                            yy: [e + " Jahre", e + " Jahren"]
                        };
                        return t ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("de-at", {
                        months: "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                        monthsShort: "Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                        weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY HH:mm",
                            LLLL: "dddd, D. MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[heute um] LT [Uhr]",
                            sameElse: "L",
                            nextDay: "[morgen um] LT [Uhr]",
                            nextWeek: "dddd [um] LT [Uhr]",
                            lastDay: "[gestern um] LT [Uhr]",
                            lastWeek: "[letzten] dddd [um] LT [Uhr]"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "vor %s",
                            s: "ein paar Sekunden",
                            ss: "%d Sekunden",
                            m: t,
                            mm: "%d Minuten",
                            h: t,
                            hh: "%d Stunden",
                            d: t,
                            dd: t,
                            w: t,
                            ww: "%d Wochen",
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            894: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            m: ["eine Minute", "einer Minute"],
                            h: ["eine Stunde", "einer Stunde"],
                            d: ["ein Tag", "einem Tag"],
                            dd: [e + " Tage", e + " Tagen"],
                            w: ["eine Woche", "einer Woche"],
                            M: ["ein Monat", "einem Monat"],
                            MM: [e + " Monate", e + " Monaten"],
                            y: ["ein Jahr", "einem Jahr"],
                            yy: [e + " Jahre", e + " Jahren"]
                        };
                        return t ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("de-ch", {
                        months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                        monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                        weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY HH:mm",
                            LLLL: "dddd, D. MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[heute um] LT [Uhr]",
                            sameElse: "L",
                            nextDay: "[morgen um] LT [Uhr]",
                            nextWeek: "dddd [um] LT [Uhr]",
                            lastDay: "[gestern um] LT [Uhr]",
                            lastWeek: "[letzten] dddd [um] LT [Uhr]"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "vor %s",
                            s: "ein paar Sekunden",
                            ss: "%d Sekunden",
                            m: t,
                            mm: "%d Minuten",
                            h: t,
                            hh: "%d Stunden",
                            d: t,
                            dd: t,
                            w: t,
                            ww: "%d Wochen",
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9740: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            m: ["eine Minute", "einer Minute"],
                            h: ["eine Stunde", "einer Stunde"],
                            d: ["ein Tag", "einem Tag"],
                            dd: [e + " Tage", e + " Tagen"],
                            w: ["eine Woche", "einer Woche"],
                            M: ["ein Monat", "einem Monat"],
                            MM: [e + " Monate", e + " Monaten"],
                            y: ["ein Jahr", "einem Jahr"],
                            yy: [e + " Jahre", e + " Jahren"]
                        };
                        return t ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("de", {
                        months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                        monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                        weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY HH:mm",
                            LLLL: "dddd, D. MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[heute um] LT [Uhr]",
                            sameElse: "L",
                            nextDay: "[morgen um] LT [Uhr]",
                            nextWeek: "dddd [um] LT [Uhr]",
                            lastDay: "[gestern um] LT [Uhr]",
                            lastWeek: "[letzten] dddd [um] LT [Uhr]"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "vor %s",
                            s: "ein paar Sekunden",
                            ss: "%d Sekunden",
                            m: t,
                            mm: "%d Minuten",
                            h: t,
                            hh: "%d Stunden",
                            d: t,
                            dd: t,
                            w: t,
                            ww: "%d Wochen",
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5300: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = ["ޖެނުއަރީ", "ފެބްރުއަރީ", "މާރިޗު", "އޭޕްރީލު", "މޭ", "ޖޫން", "ޖުލައި", "އޯގަސްޓު", "ސެޕްޓެމްބަރު", "އޮކްޓޯބަރު", "ނޮވެމްބަރު", "ޑިސެމްބަރު"],
                        a = ["އާދިއްތަ", "ހޯމަ", "އަންގާރަ", "ބުދަ", "ބުރާސްފަތި", "ހުކުރު", "ހޮނިހިރު"];
                    e.defineLocale("dv", {
                        months: t,
                        monthsShort: t,
                        weekdays: a,
                        weekdaysShort: a,
                        weekdaysMin: "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "D/M/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /މކ|މފ/,
                        isPM: function (e) {
                            return "މފ" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "މކ" : "މފ"
                        },
                        calendar: {
                            sameDay: "[މިއަދު] LT",
                            nextDay: "[މާދަމާ] LT",
                            nextWeek: "dddd LT",
                            lastDay: "[އިއްޔެ] LT",
                            lastWeek: "[ފާއިތުވި] dddd LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "ތެރޭގައި %s",
                            past: "ކުރިން %s",
                            s: "ސިކުންތުކޮޅެއް",
                            ss: "d% ސިކުންތު",
                            m: "މިނިޓެއް",
                            mm: "މިނިޓު %d",
                            h: "ގަޑިއިރެއް",
                            hh: "ގަޑިއިރު %d",
                            d: "ދުވަހެއް",
                            dd: "ދުވަސް %d",
                            M: "މަހެއް",
                            MM: "މަސް %d",
                            y: "އަހަރެއް",
                            yy: "އަހަރު %d"
                        },
                        preparse: function (e) {
                            return e.replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/,/g, "،")
                        },
                        week: {
                            dow: 7,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            837: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e) {
                        return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
                    }
                    e.defineLocale("el", {
                        monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
                        monthsGenitiveEl: "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
                        months: function (e, t) {
                            return e ? "string" == typeof t && /D/.test(t.substring(0, t.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()] : this._monthsNominativeEl
                        },
                        monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
                        weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
                        weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
                        weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
                        meridiem: function (e, t, a) {
                            return e > 11 ? a ? "μμ" : "ΜΜ" : a ? "πμ" : "ΠΜ"
                        },
                        isPM: function (e) {
                            return "μ" === (e + "").toLowerCase()[0]
                        },
                        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendarEl: {
                            sameDay: "[Σήμερα {}] LT",
                            nextDay: "[Αύριο {}] LT",
                            nextWeek: "dddd [{}] LT",
                            lastDay: "[Χθες {}] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 6:
                                        return "[το προηγούμενο] dddd [{}] LT";
                                    default:
                                        return "[την προηγούμενη] dddd [{}] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        calendar: function (e, a) {
                            var i = this._calendarEl[e],
                                n = a && a.hours();
                            return t(i) && (i = i.apply(a)), i.replace("{}", n % 12 == 1 ? "στη" : "στις")
                        },
                        relativeTime: {
                            future: "σε %s",
                            past: "%s πριν",
                            s: "λίγα δευτερόλεπτα",
                            ss: "%d δευτερόλεπτα",
                            m: "ένα λεπτό",
                            mm: "%d λεπτά",
                            h: "μία ώρα",
                            hh: "%d ώρες",
                            d: "μία μέρα",
                            dd: "%d μέρες",
                            M: "ένας μήνας",
                            MM: "%d μήνες",
                            y: "ένας χρόνος",
                            yy: "%d χρόνια"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}η/,
                        ordinal: "%dη",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            8348: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-au", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 0,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7925: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-ca", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "YYYY-MM-DD",
                            LL: "MMMM D, YYYY",
                            LLL: "MMMM D, YYYY h:mm A",
                            LLLL: "dddd, MMMM D, YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        }
                    })
                }(a(381))
            },
            2243: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-gb", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6436: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-ie", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7207: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-il", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        }
                    })
                }(a(381))
            },
            4175: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-in", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            6319: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-nz", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            1662: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("en-sg", {
                        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Today at] LT",
                            nextDay: "[Tomorrow at] LT",
                            nextWeek: "dddd [at] LT",
                            lastDay: "[Yesterday at] LT",
                            lastWeek: "[Last] dddd [at] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "in %s",
                            past: "%s ago",
                            s: "a few seconds",
                            ss: "%d seconds",
                            m: "a minute",
                            mm: "%d minutes",
                            h: "an hour",
                            hh: "%d hours",
                            d: "a day",
                            dd: "%d days",
                            M: "a month",
                            MM: "%d months",
                            y: "a year",
                            yy: "%d years"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            2915: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("eo", {
                        months: "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
                        monthsShort: "jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec".split("_"),
                        weekdays: "dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split("_"),
                        weekdaysShort: "dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),
                        weekdaysMin: "di_lu_ma_me_ĵa_ve_sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "[la] D[-an de] MMMM, YYYY",
                            LLL: "[la] D[-an de] MMMM, YYYY HH:mm",
                            LLLL: "dddd[n], [la] D[-an de] MMMM, YYYY HH:mm",
                            llll: "ddd, [la] D[-an de] MMM, YYYY HH:mm"
                        },
                        meridiemParse: /[ap]\.t\.m/i,
                        isPM: function (e) {
                            return "p" === e.charAt(0).toLowerCase()
                        },
                        meridiem: function (e, t, a) {
                            return e > 11 ? a ? "p.t.m." : "P.T.M." : a ? "a.t.m." : "A.T.M."
                        },
                        calendar: {
                            sameDay: "[Hodiaŭ je] LT",
                            nextDay: "[Morgaŭ je] LT",
                            nextWeek: "dddd[n je] LT",
                            lastDay: "[Hieraŭ je] LT",
                            lastWeek: "[pasintan] dddd[n je] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "post %s",
                            past: "antaŭ %s",
                            s: "kelkaj sekundoj",
                            ss: "%d sekundoj",
                            m: "unu minuto",
                            mm: "%d minutoj",
                            h: "unu horo",
                            hh: "%d horoj",
                            d: "unu tago",
                            dd: "%d tagoj",
                            M: "unu monato",
                            MM: "%d monatoj",
                            y: "unu jaro",
                            yy: "%d jaroj"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}a/,
                        ordinal: "%da",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            5251: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
                        a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
                        i = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
                        n = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                    e.defineLocale("es-do", {
                        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                        weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                        weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY h:mm A",
                            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextDay: function () {
                                return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastDay: function () {
                                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastWeek: function () {
                                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "en %s",
                            past: "hace %s",
                            s: "unos segundos",
                            ss: "%d segundos",
                            m: "un minuto",
                            mm: "%d minutos",
                            h: "una hora",
                            hh: "%d horas",
                            d: "un día",
                            dd: "%d días",
                            w: "una semana",
                            ww: "%d semanas",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un año",
                            yy: "%d años"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6112: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
                        a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
                        i = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
                        n = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                    e.defineLocale("es-mx", {
                        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                        weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                        weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY H:mm",
                            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextDay: function () {
                                return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastDay: function () {
                                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastWeek: function () {
                                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "en %s",
                            past: "hace %s",
                            s: "unos segundos",
                            ss: "%d segundos",
                            m: "un minuto",
                            mm: "%d minutos",
                            h: "una hora",
                            hh: "%d horas",
                            d: "un día",
                            dd: "%d días",
                            w: "una semana",
                            ww: "%d semanas",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un año",
                            yy: "%d años"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 0,
                            doy: 4
                        },
                        invalidDate: "Fecha inválida"
                    })
                }(a(381))
            },
            1146: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
                        a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
                        i = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
                        n = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                    e.defineLocale("es-us", {
                        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                        weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                        weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "MM/DD/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY h:mm A",
                            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextDay: function () {
                                return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastDay: function () {
                                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastWeek: function () {
                                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "en %s",
                            past: "hace %s",
                            s: "unos segundos",
                            ss: "%d segundos",
                            m: "un minuto",
                            mm: "%d minutos",
                            h: "una hora",
                            hh: "%d horas",
                            d: "un día",
                            dd: "%d días",
                            w: "una semana",
                            ww: "%d semanas",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un año",
                            yy: "%d años"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            5655: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
                        a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
                        i = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
                        n = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                    e.defineLocale("es", {
                        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                        weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                        weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY H:mm",
                            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextDay: function () {
                                return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastDay: function () {
                                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            lastWeek: function () {
                                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "en %s",
                            past: "hace %s",
                            s: "unos segundos",
                            ss: "%d segundos",
                            m: "un minuto",
                            mm: "%d minutos",
                            h: "una hora",
                            hh: "%d horas",
                            d: "un día",
                            dd: "%d días",
                            w: "una semana",
                            ww: "%d semanas",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un año",
                            yy: "%d años"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        },
                        invalidDate: "Fecha inválida"
                    })
                }(a(381))
            },
            5603: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            s: ["mõne sekundi", "mõni sekund", "paar sekundit"],
                            ss: [e + "sekundi", e + "sekundit"],
                            m: ["ühe minuti", "üks minut"],
                            mm: [e + " minuti", e + " minutit"],
                            h: ["ühe tunni", "tund aega", "üks tund"],
                            hh: [e + " tunni", e + " tundi"],
                            d: ["ühe päeva", "üks päev"],
                            M: ["kuu aja", "kuu aega", "üks kuu"],
                            MM: [e + " kuu", e + " kuud"],
                            y: ["ühe aasta", "aasta", "üks aasta"],
                            yy: [e + " aasta", e + " aastat"]
                        };
                        return t ? n[a][2] ? n[a][2] : n[a][1] : i ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("et", {
                        months: "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
                        monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
                        weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
                        weekdaysShort: "P_E_T_K_N_R_L".split("_"),
                        weekdaysMin: "P_E_T_K_N_R_L".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd, D. MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[Täna,] LT",
                            nextDay: "[Homme,] LT",
                            nextWeek: "[Järgmine] dddd LT",
                            lastDay: "[Eile,] LT",
                            lastWeek: "[Eelmine] dddd LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s pärast",
                            past: "%s tagasi",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: "%d päeva",
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7763: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("eu", {
                        months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
                        monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
                        weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
                        weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "YYYY[ko] MMMM[ren] D[a]",
                            LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
                            LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
                            l: "YYYY-M-D",
                            ll: "YYYY[ko] MMM D[a]",
                            lll: "YYYY[ko] MMM D[a] HH:mm",
                            llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
                        },
                        calendar: {
                            sameDay: "[gaur] LT[etan]",
                            nextDay: "[bihar] LT[etan]",
                            nextWeek: "dddd LT[etan]",
                            lastDay: "[atzo] LT[etan]",
                            lastWeek: "[aurreko] dddd LT[etan]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s barru",
                            past: "duela %s",
                            s: "segundo batzuk",
                            ss: "%d segundo",
                            m: "minutu bat",
                            mm: "%d minutu",
                            h: "ordu bat",
                            hh: "%d ordu",
                            d: "egun bat",
                            dd: "%d egun",
                            M: "hilabete bat",
                            MM: "%d hilabete",
                            y: "urte bat",
                            yy: "%d urte"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            6959: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "۱",
                            2: "۲",
                            3: "۳",
                            4: "۴",
                            5: "۵",
                            6: "۶",
                            7: "۷",
                            8: "۸",
                            9: "۹",
                            0: "۰"
                        },
                        a = {
                            "۱": "1",
                            "۲": "2",
                            "۳": "3",
                            "۴": "4",
                            "۵": "5",
                            "۶": "6",
                            "۷": "7",
                            "۸": "8",
                            "۹": "9",
                            "۰": "0"
                        };
                    e.defineLocale("fa", {
                        months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
                        monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
                        weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
                        weekdaysShort: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
                        weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /قبل از ظهر|بعد از ظهر/,
                        isPM: function (e) {
                            return /بعد از ظهر/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "قبل از ظهر" : "بعد از ظهر"
                        },
                        calendar: {
                            sameDay: "[امروز ساعت] LT",
                            nextDay: "[فردا ساعت] LT",
                            nextWeek: "dddd [ساعت] LT",
                            lastDay: "[دیروز ساعت] LT",
                            lastWeek: "dddd [پیش] [ساعت] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "در %s",
                            past: "%s پیش",
                            s: "چند ثانیه",
                            ss: "%d ثانیه",
                            m: "یک دقیقه",
                            mm: "%d دقیقه",
                            h: "یک ساعت",
                            hh: "%d ساعت",
                            d: "یک روز",
                            dd: "%d روز",
                            M: "یک ماه",
                            MM: "%d ماه",
                            y: "یک سال",
                            yy: "%d سال"
                        },
                        preparse: function (e) {
                            return e.replace(/[۰-۹]/g, (function (e) {
                                return a[e]
                            })).replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            })).replace(/,/g, "،")
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}م/,
                        ordinal: "%dم",
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            1897: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "),
                        a = ["nolla", "yhden", "kahden", "kolmen", "neljän", "viiden", "kuuden", t[7], t[8], t[9]];

                    function i(e, t, a, i) {
                        var r = "";
                        switch (a) {
                            case "s":
                                return i ? "muutaman sekunnin" : "muutama sekunti";
                            case "ss":
                                r = i ? "sekunnin" : "sekuntia";
                                break;
                            case "m":
                                return i ? "minuutin" : "minuutti";
                            case "mm":
                                r = i ? "minuutin" : "minuuttia";
                                break;
                            case "h":
                                return i ? "tunnin" : "tunti";
                            case "hh":
                                r = i ? "tunnin" : "tuntia";
                                break;
                            case "d":
                                return i ? "päivän" : "päivä";
                            case "dd":
                                r = i ? "päivän" : "päivää";
                                break;
                            case "M":
                                return i ? "kuukauden" : "kuukausi";
                            case "MM":
                                r = i ? "kuukauden" : "kuukautta";
                                break;
                            case "y":
                                return i ? "vuoden" : "vuosi";
                            case "yy":
                                r = i ? "vuoden" : "vuotta"
                        }
                        return r = n(e, i) + " " + r
                    }

                    function n(e, i) {
                        return e < 10 ? i ? a[e] : t[e] : e
                    }
                    e.defineLocale("fi", {
                        months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
                        monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
                        weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
                        weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
                        weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD.MM.YYYY",
                            LL: "Do MMMM[ta] YYYY",
                            LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
                            LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
                            l: "D.M.YYYY",
                            ll: "Do MMM YYYY",
                            lll: "Do MMM YYYY, [klo] HH.mm",
                            llll: "ddd, Do MMM YYYY, [klo] HH.mm"
                        },
                        calendar: {
                            sameDay: "[tänään] [klo] LT",
                            nextDay: "[huomenna] [klo] LT",
                            nextWeek: "dddd [klo] LT",
                            lastDay: "[eilen] [klo] LT",
                            lastWeek: "[viime] dddd[na] [klo] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s päästä",
                            past: "%s sitten",
                            s: i,
                            ss: i,
                            m: i,
                            mm: i,
                            h: i,
                            hh: i,
                            d: i,
                            dd: i,
                            M: i,
                            MM: i,
                            y: i,
                            yy: i
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            2549: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("fil", {
                        months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
                        monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
                        weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
                        weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
                        weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "MM/D/YYYY",
                            LL: "MMMM D, YYYY",
                            LLL: "MMMM D, YYYY HH:mm",
                            LLLL: "dddd, MMMM DD, YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "LT [ngayong araw]",
                            nextDay: "[Bukas ng] LT",
                            nextWeek: "LT [sa susunod na] dddd",
                            lastDay: "LT [kahapon]",
                            lastWeek: "LT [noong nakaraang] dddd",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "sa loob ng %s",
                            past: "%s ang nakalipas",
                            s: "ilang segundo",
                            ss: "%d segundo",
                            m: "isang minuto",
                            mm: "%d minuto",
                            h: "isang oras",
                            hh: "%d oras",
                            d: "isang araw",
                            dd: "%d araw",
                            M: "isang buwan",
                            MM: "%d buwan",
                            y: "isang taon",
                            yy: "%d taon"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}/,
                        ordinal: function (e) {
                            return e
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4694: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("fo", {
                        months: "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                        monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
                        weekdays: "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
                        weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
                        weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D. MMMM, YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Í dag kl.] LT",
                            nextDay: "[Í morgin kl.] LT",
                            nextWeek: "dddd [kl.] LT",
                            lastDay: "[Í gjár kl.] LT",
                            lastWeek: "[síðstu] dddd [kl] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "um %s",
                            past: "%s síðani",
                            s: "fá sekund",
                            ss: "%d sekundir",
                            m: "ein minuttur",
                            mm: "%d minuttir",
                            h: "ein tími",
                            hh: "%d tímar",
                            d: "ein dagur",
                            dd: "%d dagar",
                            M: "ein mánaður",
                            MM: "%d mánaðir",
                            y: "eitt ár",
                            yy: "%d ár"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            3049: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("fr-ca", {
                        months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                        monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Aujourd’hui à] LT",
                            nextDay: "[Demain à] LT",
                            nextWeek: "dddd [à] LT",
                            lastDay: "[Hier à] LT",
                            lastWeek: "dddd [dernier à] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dans %s",
                            past: "il y a %s",
                            s: "quelques secondes",
                            ss: "%d secondes",
                            m: "une minute",
                            mm: "%d minutes",
                            h: "une heure",
                            hh: "%d heures",
                            d: "un jour",
                            dd: "%d jours",
                            M: "un mois",
                            MM: "%d mois",
                            y: "un an",
                            yy: "%d ans"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                default:
                                case "M":
                                case "Q":
                                case "D":
                                case "DDD":
                                case "d":
                                    return e + (1 === e ? "er" : "e");
                                case "w":
                                case "W":
                                    return e + (1 === e ? "re" : "e")
                            }
                        }
                    })
                }(a(381))
            },
            2330: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("fr-ch", {
                        months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                        monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Aujourd’hui à] LT",
                            nextDay: "[Demain à] LT",
                            nextWeek: "dddd [à] LT",
                            lastDay: "[Hier à] LT",
                            lastWeek: "dddd [dernier à] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dans %s",
                            past: "il y a %s",
                            s: "quelques secondes",
                            ss: "%d secondes",
                            m: "une minute",
                            mm: "%d minutes",
                            h: "une heure",
                            hh: "%d heures",
                            d: "un jour",
                            dd: "%d jours",
                            M: "un mois",
                            MM: "%d mois",
                            y: "un an",
                            yy: "%d ans"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                default:
                                case "M":
                                case "Q":
                                case "D":
                                case "DDD":
                                case "d":
                                    return e + (1 === e ? "er" : "e");
                                case "w":
                                case "W":
                                    return e + (1 === e ? "re" : "e")
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4470: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
                        a = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
                        i = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
                        n = [/^janv/i, /^févr/i, /^mars/i, /^avr/i, /^mai/i, /^juin/i, /^juil/i, /^août/i, /^sept/i, /^oct/i, /^nov/i, /^déc/i];
                    e.defineLocale("fr", {
                        months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                        monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                        monthsRegex: i,
                        monthsShortRegex: i,
                        monthsStrictRegex: t,
                        monthsShortStrictRegex: a,
                        monthsParse: n,
                        longMonthsParse: n,
                        shortMonthsParse: n,
                        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Aujourd’hui à] LT",
                            nextDay: "[Demain à] LT",
                            nextWeek: "dddd [à] LT",
                            lastDay: "[Hier à] LT",
                            lastWeek: "dddd [dernier à] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dans %s",
                            past: "il y a %s",
                            s: "quelques secondes",
                            ss: "%d secondes",
                            m: "une minute",
                            mm: "%d minutes",
                            h: "une heure",
                            hh: "%d heures",
                            d: "un jour",
                            dd: "%d jours",
                            w: "une semaine",
                            ww: "%d semaines",
                            M: "un mois",
                            MM: "%d mois",
                            y: "un an",
                            yy: "%d ans"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "D":
                                    return e + (1 === e ? "er" : "");
                                default:
                                case "M":
                                case "Q":
                                case "DDD":
                                case "d":
                                    return e + (1 === e ? "er" : "e");
                                case "w":
                                case "W":
                                    return e + (1 === e ? "re" : "e")
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5044: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"),
                        a = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
                    e.defineLocale("fy", {
                        months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsParseExact: !0,
                        weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
                        weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
                        weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD-MM-YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[hjoed om] LT",
                            nextDay: "[moarn om] LT",
                            nextWeek: "dddd [om] LT",
                            lastDay: "[juster om] LT",
                            lastWeek: "[ôfrûne] dddd [om] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "oer %s",
                            past: "%s lyn",
                            s: "in pear sekonden",
                            ss: "%d sekonden",
                            m: "ien minút",
                            mm: "%d minuten",
                            h: "ien oere",
                            hh: "%d oeren",
                            d: "ien dei",
                            dd: "%d dagen",
                            M: "ien moanne",
                            MM: "%d moannen",
                            y: "ien jier",
                            yy: "%d jierren"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                        ordinal: function (e) {
                            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9295: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = ["Eanáir", "Feabhra", "Márta", "Aibreán", "Bealtaine", "Meitheamh", "Iúil", "Lúnasa", "Meán Fómhair", "Deireadh Fómhair", "Samhain", "Nollaig"],
                        a = ["Ean", "Feabh", "Márt", "Aib", "Beal", "Meith", "Iúil", "Lún", "M.F.", "D.F.", "Samh", "Noll"],
                        i = ["Dé Domhnaigh", "Dé Luain", "Dé Máirt", "Dé Céadaoin", "Déardaoin", "Dé hAoine", "Dé Sathairn"],
                        n = ["Domh", "Luan", "Máirt", "Céad", "Déar", "Aoine", "Sath"],
                        r = ["Do", "Lu", "Má", "Cé", "Dé", "A", "Sa"];
                    e.defineLocale("ga", {
                        months: t,
                        monthsShort: a,
                        monthsParseExact: !0,
                        weekdays: i,
                        weekdaysShort: n,
                        weekdaysMin: r,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Inniu ag] LT",
                            nextDay: "[Amárach ag] LT",
                            nextWeek: "dddd [ag] LT",
                            lastDay: "[Inné ag] LT",
                            lastWeek: "dddd [seo caite] [ag] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "i %s",
                            past: "%s ó shin",
                            s: "cúpla soicind",
                            ss: "%d soicind",
                            m: "nóiméad",
                            mm: "%d nóiméad",
                            h: "uair an chloig",
                            hh: "%d uair an chloig",
                            d: "lá",
                            dd: "%d lá",
                            M: "mí",
                            MM: "%d míonna",
                            y: "bliain",
                            yy: "%d bliain"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
                        ordinal: function (e) {
                            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            2101: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = ["Am Faoilleach", "An Gearran", "Am Màrt", "An Giblean", "An Cèitean", "An t-Ògmhios", "An t-Iuchar", "An Lùnastal", "An t-Sultain", "An Dàmhair", "An t-Samhain", "An Dùbhlachd"],
                        a = ["Faoi", "Gear", "Màrt", "Gibl", "Cèit", "Ògmh", "Iuch", "Lùn", "Sult", "Dàmh", "Samh", "Dùbh"],
                        i = ["Didòmhnaich", "Diluain", "Dimàirt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"],
                        n = ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
                        r = ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"];
                    e.defineLocale("gd", {
                        months: t,
                        monthsShort: a,
                        monthsParseExact: !0,
                        weekdays: i,
                        weekdaysShort: n,
                        weekdaysMin: r,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[An-diugh aig] LT",
                            nextDay: "[A-màireach aig] LT",
                            nextWeek: "dddd [aig] LT",
                            lastDay: "[An-dè aig] LT",
                            lastWeek: "dddd [seo chaidh] [aig] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "ann an %s",
                            past: "bho chionn %s",
                            s: "beagan diogan",
                            ss: "%d diogan",
                            m: "mionaid",
                            mm: "%d mionaidean",
                            h: "uair",
                            hh: "%d uairean",
                            d: "latha",
                            dd: "%d latha",
                            M: "mìos",
                            MM: "%d mìosan",
                            y: "bliadhna",
                            yy: "%d bliadhna"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
                        ordinal: function (e) {
                            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            8794: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("gl", {
                        months: "xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),
                        monthsShort: "xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "domingo_luns_martes_mércores_xoves_venres_sábado".split("_"),
                        weekdaysShort: "dom._lun._mar._mér._xov._ven._sáb.".split("_"),
                        weekdaysMin: "do_lu_ma_mé_xo_ve_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY H:mm",
                            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT"
                            },
                            nextDay: function () {
                                return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT"
                            },
                            nextWeek: function () {
                                return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT"
                            },
                            lastDay: function () {
                                return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT"
                            },
                            lastWeek: function () {
                                return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: function (e) {
                                return 0 === e.indexOf("un") ? "n" + e : "en " + e
                            },
                            past: "hai %s",
                            s: "uns segundos",
                            ss: "%d segundos",
                            m: "un minuto",
                            mm: "%d minutos",
                            h: "unha hora",
                            hh: "%d horas",
                            d: "un día",
                            dd: "%d días",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un ano",
                            yy: "%d anos"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7884: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            s: ["थोडया सॅकंडांनी", "थोडे सॅकंड"],
                            ss: [e + " सॅकंडांनी", e + " सॅकंड"],
                            m: ["एका मिणटान", "एक मिनूट"],
                            mm: [e + " मिणटांनी", e + " मिणटां"],
                            h: ["एका वरान", "एक वर"],
                            hh: [e + " वरांनी", e + " वरां"],
                            d: ["एका दिसान", "एक दीस"],
                            dd: [e + " दिसांनी", e + " दीस"],
                            M: ["एका म्हयन्यान", "एक म्हयनो"],
                            MM: [e + " म्हयन्यानी", e + " म्हयने"],
                            y: ["एका वर्सान", "एक वर्स"],
                            yy: [e + " वर्सांनी", e + " वर्सां"]
                        };
                        return i ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("gom-deva", {
                        months: {
                            standalone: "जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
                            format: "जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या".split("_"),
                            isFormat: /MMMM(\s)+D[oD]?/
                        },
                        monthsShort: "जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार".split("_"),
                        weekdaysShort: "आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.".split("_"),
                        weekdaysMin: "आ_सो_मं_बु_ब्रे_सु_शे".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "A h:mm [वाजतां]",
                            LTS: "A h:mm:ss [वाजतां]",
                            L: "DD-MM-YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY A h:mm [वाजतां]",
                            LLLL: "dddd, MMMM Do, YYYY, A h:mm [वाजतां]",
                            llll: "ddd, D MMM YYYY, A h:mm [वाजतां]"
                        },
                        calendar: {
                            sameDay: "[आयज] LT",
                            nextDay: "[फाल्यां] LT",
                            nextWeek: "[फुडलो] dddd[,] LT",
                            lastDay: "[काल] LT",
                            lastWeek: "[फाटलो] dddd[,] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s",
                            past: "%s आदीं",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: t,
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "D":
                                    return e + "वेर";
                                default:
                                case "M":
                                case "Q":
                                case "DDD":
                                case "d":
                                case "w":
                                case "W":
                                    return e
                            }
                        },
                        week: {
                            dow: 0,
                            doy: 3
                        },
                        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "राती" === t ? e < 4 ? e : e + 12 : "सकाळीं" === t ? e : "दनपारां" === t ? e > 12 ? e : e + 12 : "सांजे" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "राती" : e < 12 ? "सकाळीं" : e < 16 ? "दनपारां" : e < 20 ? "सांजे" : "राती"
                        }
                    })
                }(a(381))
            },
            3168: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            s: ["thoddea sekondamni", "thodde sekond"],
                            ss: [e + " sekondamni", e + " sekond"],
                            m: ["eka mintan", "ek minut"],
                            mm: [e + " mintamni", e + " mintam"],
                            h: ["eka voran", "ek vor"],
                            hh: [e + " voramni", e + " voram"],
                            d: ["eka disan", "ek dis"],
                            dd: [e + " disamni", e + " dis"],
                            M: ["eka mhoinean", "ek mhoino"],
                            MM: [e + " mhoineamni", e + " mhoine"],
                            y: ["eka vorsan", "ek voros"],
                            yy: [e + " vorsamni", e + " vorsam"]
                        };
                        return i ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("gom-latn", {
                        months: {
                            standalone: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),
                            format: "Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea".split("_"),
                            isFormat: /MMMM(\s)+D[oD]?/
                        },
                        monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split("_"),
                        weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
                        weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "A h:mm [vazta]",
                            LTS: "A h:mm:ss [vazta]",
                            L: "DD-MM-YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY A h:mm [vazta]",
                            LLLL: "dddd, MMMM Do, YYYY, A h:mm [vazta]",
                            llll: "ddd, D MMM YYYY, A h:mm [vazta]"
                        },
                        calendar: {
                            sameDay: "[Aiz] LT",
                            nextDay: "[Faleam] LT",
                            nextWeek: "[Fuddlo] dddd[,] LT",
                            lastDay: "[Kal] LT",
                            lastWeek: "[Fattlo] dddd[,] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s",
                            past: "%s adim",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: t,
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "D":
                                    return e + "er";
                                default:
                                case "M":
                                case "Q":
                                case "DDD":
                                case "d":
                                case "w":
                                case "W":
                                    return e
                            }
                        },
                        week: {
                            dow: 0,
                            doy: 3
                        },
                        meridiemParse: /rati|sokallim|donparam|sanje/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "rati" === t ? e < 4 ? e : e + 12 : "sokallim" === t ? e : "donparam" === t ? e > 12 ? e : e + 12 : "sanje" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "rati" : e < 12 ? "sokallim" : e < 16 ? "donparam" : e < 20 ? "sanje" : "rati"
                        }
                    })
                }(a(381))
            },
            5349: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "૧",
                            2: "૨",
                            3: "૩",
                            4: "૪",
                            5: "૫",
                            6: "૬",
                            7: "૭",
                            8: "૮",
                            9: "૯",
                            0: "૦"
                        },
                        a = {
                            "૧": "1",
                            "૨": "2",
                            "૩": "3",
                            "૪": "4",
                            "૫": "5",
                            "૬": "6",
                            "૭": "7",
                            "૮": "8",
                            "૯": "9",
                            "૦": "0"
                        };
                    e.defineLocale("gu", {
                        months: "જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split("_"),
                        monthsShort: "જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),
                        weekdaysShort: "રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),
                        weekdaysMin: "ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),
                        longDateFormat: {
                            LT: "A h:mm વાગ્યે",
                            LTS: "A h:mm:ss વાગ્યે",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm વાગ્યે",
                            LLLL: "dddd, D MMMM YYYY, A h:mm વાગ્યે"
                        },
                        calendar: {
                            sameDay: "[આજ] LT",
                            nextDay: "[કાલે] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[ગઇકાલે] LT",
                            lastWeek: "[પાછલા] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s મા",
                            past: "%s પહેલા",
                            s: "અમુક પળો",
                            ss: "%d સેકંડ",
                            m: "એક મિનિટ",
                            mm: "%d મિનિટ",
                            h: "એક કલાક",
                            hh: "%d કલાક",
                            d: "એક દિવસ",
                            dd: "%d દિવસ",
                            M: "એક મહિનો",
                            MM: "%d મહિનો",
                            y: "એક વર્ષ",
                            yy: "%d વર્ષ"
                        },
                        preparse: function (e) {
                            return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "રાત" === t ? e < 4 ? e : e + 12 : "સવાર" === t ? e : "બપોર" === t ? e >= 10 ? e : e + 12 : "સાંજ" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "રાત" : e < 10 ? "સવાર" : e < 17 ? "બપોર" : e < 20 ? "સાંજ" : "રાત"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            4206: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("he", {
                        months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
                        monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
                        weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
                        weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
                        weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [ב]MMMM YYYY",
                            LLL: "D [ב]MMMM YYYY HH:mm",
                            LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
                            l: "D/M/YYYY",
                            ll: "D MMM YYYY",
                            lll: "D MMM YYYY HH:mm",
                            llll: "ddd, D MMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[היום ב־]LT",
                            nextDay: "[מחר ב־]LT",
                            nextWeek: "dddd [בשעה] LT",
                            lastDay: "[אתמול ב־]LT",
                            lastWeek: "[ביום] dddd [האחרון בשעה] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "בעוד %s",
                            past: "לפני %s",
                            s: "מספר שניות",
                            ss: "%d שניות",
                            m: "דקה",
                            mm: "%d דקות",
                            h: "שעה",
                            hh: function (e) {
                                return 2 === e ? "שעתיים" : e + " שעות"
                            },
                            d: "יום",
                            dd: function (e) {
                                return 2 === e ? "יומיים" : e + " ימים"
                            },
                            M: "חודש",
                            MM: function (e) {
                                return 2 === e ? "חודשיים" : e + " חודשים"
                            },
                            y: "שנה",
                            yy: function (e) {
                                return 2 === e ? "שנתיים" : e % 10 == 0 && 10 !== e ? e + " שנה" : e + " שנים"
                            }
                        },
                        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
                        isPM: function (e) {
                            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 5 ? "לפנות בוקר" : e < 10 ? "בבוקר" : e < 12 ? a ? 'לפנה"צ' : "לפני הצהריים" : e < 18 ? a ? 'אחה"צ' : "אחרי הצהריים" : "בערב"
                        }
                    })
                }(a(381))
            },
            94: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "१",
                            2: "२",
                            3: "३",
                            4: "४",
                            5: "५",
                            6: "६",
                            7: "७",
                            8: "८",
                            9: "९",
                            0: "०"
                        },
                        a = {
                            "१": "1",
                            "२": "2",
                            "३": "3",
                            "४": "4",
                            "५": "5",
                            "६": "6",
                            "७": "7",
                            "८": "8",
                            "९": "9",
                            "०": "0"
                        },
                        i = [/^जन/i, /^फ़र|फर/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सितं|सित/i, /^अक्टू/i, /^नव|नवं/i, /^दिसं|दिस/i],
                        n = [/^जन/i, /^फ़र/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सित/i, /^अक्टू/i, /^नव/i, /^दिस/i];
                    e.defineLocale("hi", {
                        months: {
                            format: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),
                            standalone: "जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर".split("_")
                        },
                        monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
                        weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
                        weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
                        weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
                        longDateFormat: {
                            LT: "A h:mm बजे",
                            LTS: "A h:mm:ss बजे",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm बजे",
                            LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
                        },
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: n,
                        monthsRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
                        monthsShortRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
                        monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,
                        monthsShortStrictRegex: /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,
                        calendar: {
                            sameDay: "[आज] LT",
                            nextDay: "[कल] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[कल] LT",
                            lastWeek: "[पिछले] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s में",
                            past: "%s पहले",
                            s: "कुछ ही क्षण",
                            ss: "%d सेकंड",
                            m: "एक मिनट",
                            mm: "%d मिनट",
                            h: "एक घंटा",
                            hh: "%d घंटे",
                            d: "एक दिन",
                            dd: "%d दिन",
                            M: "एक महीने",
                            MM: "%d महीने",
                            y: "एक वर्ष",
                            yy: "%d वर्ष"
                        },
                        preparse: function (e) {
                            return e.replace(/[१२३४५६७८९०]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /रात|सुबह|दोपहर|शाम/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "रात" === t ? e < 4 ? e : e + 12 : "सुबह" === t ? e : "दोपहर" === t ? e >= 10 ? e : e + 12 : "शाम" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "रात" : e < 10 ? "सुबह" : e < 17 ? "दोपहर" : e < 20 ? "शाम" : "रात"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            316: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a) {
                        var i = e + " ";
                        switch (a) {
                            case "ss":
                                return i += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
                            case "m":
                                return t ? "jedna minuta" : "jedne minute";
                            case "mm":
                                return i += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                            case "h":
                                return t ? "jedan sat" : "jednog sata";
                            case "hh":
                                return i += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                            case "dd":
                                return i += 1 === e ? "dan" : "dana";
                            case "MM":
                                return i += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                            case "yy":
                                return i += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                        }
                    }
                    e.defineLocale("hr", {
                        months: {
                            format: "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),
                            standalone: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")
                        },
                        monthsShort: "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                        weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                        weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "Do MMMM YYYY",
                            LLL: "Do MMMM YYYY H:mm",
                            LLLL: "dddd, Do MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[danas u] LT",
                            nextDay: "[sutra u] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[u] [nedjelju] [u] LT";
                                    case 3:
                                        return "[u] [srijedu] [u] LT";
                                    case 6:
                                        return "[u] [subotu] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[u] dddd [u] LT"
                                }
                            },
                            lastDay: "[jučer u] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[prošlu] [nedjelju] [u] LT";
                                    case 3:
                                        return "[prošlu] [srijedu] [u] LT";
                                    case 6:
                                        return "[prošle] [subote] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[prošli] dddd [u] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "prije %s",
                            s: "par sekundi",
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: "dan",
                            dd: t,
                            M: "mjesec",
                            MM: t,
                            y: "godinu",
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            2138: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ");

                    function a(e, t, a, i) {
                        var n = e;
                        switch (a) {
                            case "s":
                                return i || t ? "néhány másodperc" : "néhány másodperce";
                            case "ss":
                                return n + (i || t) ? " másodperc" : " másodperce";
                            case "m":
                                return "egy" + (i || t ? " perc" : " perce");
                            case "mm":
                                return n + (i || t ? " perc" : " perce");
                            case "h":
                                return "egy" + (i || t ? " óra" : " órája");
                            case "hh":
                                return n + (i || t ? " óra" : " órája");
                            case "d":
                                return "egy" + (i || t ? " nap" : " napja");
                            case "dd":
                                return n + (i || t ? " nap" : " napja");
                            case "M":
                                return "egy" + (i || t ? " hónap" : " hónapja");
                            case "MM":
                                return n + (i || t ? " hónap" : " hónapja");
                            case "y":
                                return "egy" + (i || t ? " év" : " éve");
                            case "yy":
                                return n + (i || t ? " év" : " éve")
                        }
                        return ""
                    }

                    function i(e) {
                        return (e ? "" : "[múlt] ") + "[" + t[this.day()] + "] LT[-kor]"
                    }
                    e.defineLocale("hu", {
                        months: "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
                        monthsShort: "jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
                        weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
                        weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "YYYY.MM.DD.",
                            LL: "YYYY. MMMM D.",
                            LLL: "YYYY. MMMM D. H:mm",
                            LLLL: "YYYY. MMMM D., dddd H:mm"
                        },
                        meridiemParse: /de|du/i,
                        isPM: function (e) {
                            return "u" === e.charAt(1).toLowerCase()
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? !0 === a ? "de" : "DE" : !0 === a ? "du" : "DU"
                        },
                        calendar: {
                            sameDay: "[ma] LT[-kor]",
                            nextDay: "[holnap] LT[-kor]",
                            nextWeek: function () {
                                return i.call(this, !0)
                            },
                            lastDay: "[tegnap] LT[-kor]",
                            lastWeek: function () {
                                return i.call(this, !1)
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s múlva",
                            past: "%s",
                            s: a,
                            ss: a,
                            m: a,
                            mm: a,
                            h: a,
                            hh: a,
                            d: a,
                            dd: a,
                            M: a,
                            MM: a,
                            y: a,
                            yy: a
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            1423: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("hy-am", {
                        months: {
                            format: "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),
                            standalone: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")
                        },
                        monthsShort: "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),
                        weekdays: "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),
                        weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
                        weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY թ.",
                            LLL: "D MMMM YYYY թ., HH:mm",
                            LLLL: "dddd, D MMMM YYYY թ., HH:mm"
                        },
                        calendar: {
                            sameDay: "[այսօր] LT",
                            nextDay: "[վաղը] LT",
                            lastDay: "[երեկ] LT",
                            nextWeek: function () {
                                return "dddd [օրը ժամը] LT"
                            },
                            lastWeek: function () {
                                return "[անցած] dddd [օրը ժամը] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s հետո",
                            past: "%s առաջ",
                            s: "մի քանի վայրկյան",
                            ss: "%d վայրկյան",
                            m: "րոպե",
                            mm: "%d րոպե",
                            h: "ժամ",
                            hh: "%d ժամ",
                            d: "օր",
                            dd: "%d օր",
                            M: "ամիս",
                            MM: "%d ամիս",
                            y: "տարի",
                            yy: "%d տարի"
                        },
                        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
                        isPM: function (e) {
                            return /^(ցերեկվա|երեկոյան)$/.test(e)
                        },
                        meridiem: function (e) {
                            return e < 4 ? "գիշերվա" : e < 12 ? "առավոտվա" : e < 17 ? "ցերեկվա" : "երեկոյան"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "DDD":
                                case "w":
                                case "W":
                                case "DDDo":
                                    return 1 === e ? e + "-ին" : e + "-րդ";
                                default:
                                    return e
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            9218: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("id", {
                        months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),
                        weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
                        weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
                        weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [pukul] HH.mm",
                            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                        },
                        meridiemParse: /pagi|siang|sore|malam/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "pagi" === t ? e : "siang" === t ? e >= 11 ? e : e + 12 : "sore" === t || "malam" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 11 ? "pagi" : e < 15 ? "siang" : e < 19 ? "sore" : "malam"
                        },
                        calendar: {
                            sameDay: "[Hari ini pukul] LT",
                            nextDay: "[Besok pukul] LT",
                            nextWeek: "dddd [pukul] LT",
                            lastDay: "[Kemarin pukul] LT",
                            lastWeek: "dddd [lalu pukul] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dalam %s",
                            past: "%s yang lalu",
                            s: "beberapa detik",
                            ss: "%d detik",
                            m: "semenit",
                            mm: "%d menit",
                            h: "sejam",
                            hh: "%d jam",
                            d: "sehari",
                            dd: "%d hari",
                            M: "sebulan",
                            MM: "%d bulan",
                            y: "setahun",
                            yy: "%d tahun"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            135: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e) {
                        return e % 100 == 11 || e % 10 != 1
                    }

                    function a(e, a, i, n) {
                        var r = e + " ";
                        switch (i) {
                            case "s":
                                return a || n ? "nokkrar sekúndur" : "nokkrum sekúndum";
                            case "ss":
                                return t(e) ? r + (a || n ? "sekúndur" : "sekúndum") : r + "sekúnda";
                            case "m":
                                return a ? "mínúta" : "mínútu";
                            case "mm":
                                return t(e) ? r + (a || n ? "mínútur" : "mínútum") : a ? r + "mínúta" : r + "mínútu";
                            case "hh":
                                return t(e) ? r + (a || n ? "klukkustundir" : "klukkustundum") : r + "klukkustund";
                            case "d":
                                return a ? "dagur" : n ? "dag" : "degi";
                            case "dd":
                                return t(e) ? a ? r + "dagar" : r + (n ? "daga" : "dögum") : a ? r + "dagur" : r + (n ? "dag" : "degi");
                            case "M":
                                return a ? "mánuður" : n ? "mánuð" : "mánuði";
                            case "MM":
                                return t(e) ? a ? r + "mánuðir" : r + (n ? "mánuði" : "mánuðum") : a ? r + "mánuður" : r + (n ? "mánuð" : "mánuði");
                            case "y":
                                return a || n ? "ár" : "ári";
                            case "yy":
                                return t(e) ? r + (a || n ? "ár" : "árum") : r + (a || n ? "ár" : "ári")
                        }
                    }
                    e.defineLocale("is", {
                        months: "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
                        monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
                        weekdays: "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
                        weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
                        weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY [kl.] H:mm",
                            LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
                        },
                        calendar: {
                            sameDay: "[í dag kl.] LT",
                            nextDay: "[á morgun kl.] LT",
                            nextWeek: "dddd [kl.] LT",
                            lastDay: "[í gær kl.] LT",
                            lastWeek: "[síðasta] dddd [kl.] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "eftir %s",
                            past: "fyrir %s síðan",
                            s: a,
                            ss: a,
                            m: a,
                            mm: a,
                            h: "klukkustund",
                            hh: a,
                            d: a,
                            dd: a,
                            M: a,
                            MM: a,
                            y: a,
                            yy: a
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            150: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("it-ch", {
                        months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
                        monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
                        weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),
                        weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
                        weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Oggi alle] LT",
                            nextDay: "[Domani alle] LT",
                            nextWeek: "dddd [alle] LT",
                            lastDay: "[Ieri alle] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[la scorsa] dddd [alle] LT";
                                    default:
                                        return "[lo scorso] dddd [alle] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: function (e) {
                                return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e
                            },
                            past: "%s fa",
                            s: "alcuni secondi",
                            ss: "%d secondi",
                            m: "un minuto",
                            mm: "%d minuti",
                            h: "un'ora",
                            hh: "%d ore",
                            d: "un giorno",
                            dd: "%d giorni",
                            M: "un mese",
                            MM: "%d mesi",
                            y: "un anno",
                            yy: "%d anni"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            626: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("it", {
                        months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
                        monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
                        weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),
                        weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
                        weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: function () {
                                return "[Oggi a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                            },
                            nextDay: function () {
                                return "[Domani a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                            },
                            nextWeek: function () {
                                return "dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                            },
                            lastDay: function () {
                                return "[Ieri a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                            },
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[La scorsa] dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT";
                                    default:
                                        return "[Lo scorso] dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "tra %s",
                            past: "%s fa",
                            s: "alcuni secondi",
                            ss: "%d secondi",
                            m: "un minuto",
                            mm: "%d minuti",
                            h: "un'ora",
                            hh: "%d ore",
                            d: "un giorno",
                            dd: "%d giorni",
                            w: "una settimana",
                            ww: "%d settimane",
                            M: "un mese",
                            MM: "%d mesi",
                            y: "un anno",
                            yy: "%d anni"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9183: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ja", {
                        eras: [{
                            since: "2019-05-01",
                            offset: 1,
                            name: "令和",
                            narrow: "㋿",
                            abbr: "R"
                        }, {
                            since: "1989-01-08",
                            until: "2019-04-30",
                            offset: 1,
                            name: "平成",
                            narrow: "㍻",
                            abbr: "H"
                        }, {
                            since: "1926-12-25",
                            until: "1989-01-07",
                            offset: 1,
                            name: "昭和",
                            narrow: "㍼",
                            abbr: "S"
                        }, {
                            since: "1912-07-30",
                            until: "1926-12-24",
                            offset: 1,
                            name: "大正",
                            narrow: "㍽",
                            abbr: "T"
                        }, {
                            since: "1873-01-01",
                            until: "1912-07-29",
                            offset: 6,
                            name: "明治",
                            narrow: "㍾",
                            abbr: "M"
                        }, {
                            since: "0001-01-01",
                            until: "1873-12-31",
                            offset: 1,
                            name: "西暦",
                            narrow: "AD",
                            abbr: "AD"
                        }, {
                            since: "0000-12-31",
                            until: -1 / 0,
                            offset: 1,
                            name: "紀元前",
                            narrow: "BC",
                            abbr: "BC"
                        }],
                        eraYearOrdinalRegex: /(元|\d+)年/,
                        eraYearOrdinalParse: function (e, t) {
                            return "元" === t[1] ? 1 : parseInt(t[1] || e, 10)
                        },
                        months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
                        weekdaysShort: "日_月_火_水_木_金_土".split("_"),
                        weekdaysMin: "日_月_火_水_木_金_土".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY/MM/DD",
                            LL: "YYYY年M月D日",
                            LLL: "YYYY年M月D日 HH:mm",
                            LLLL: "YYYY年M月D日 dddd HH:mm",
                            l: "YYYY/MM/DD",
                            ll: "YYYY年M月D日",
                            lll: "YYYY年M月D日 HH:mm",
                            llll: "YYYY年M月D日(ddd) HH:mm"
                        },
                        meridiemParse: /午前|午後/i,
                        isPM: function (e) {
                            return "午後" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "午前" : "午後"
                        },
                        calendar: {
                            sameDay: "[今日] LT",
                            nextDay: "[明日] LT",
                            nextWeek: function (e) {
                                return e.week() !== this.week() ? "[来週]dddd LT" : "dddd LT"
                            },
                            lastDay: "[昨日] LT",
                            lastWeek: function (e) {
                                return this.week() !== e.week() ? "[先週]dddd LT" : "dddd LT"
                            },
                            sameElse: "L"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}日/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "y":
                                    return 1 === e ? "元年" : e + "年";
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "日";
                                default:
                                    return e
                            }
                        },
                        relativeTime: {
                            future: "%s後",
                            past: "%s前",
                            s: "数秒",
                            ss: "%d秒",
                            m: "1分",
                            mm: "%d分",
                            h: "1時間",
                            hh: "%d時間",
                            d: "1日",
                            dd: "%d日",
                            M: "1ヶ月",
                            MM: "%dヶ月",
                            y: "1年",
                            yy: "%d年"
                        }
                    })
                }(a(381))
            },
            4286: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("jv", {
                        months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
                        monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
                        weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
                        weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
                        weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [pukul] HH.mm",
                            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                        },
                        meridiemParse: /enjing|siyang|sonten|ndalu/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "enjing" === t ? e : "siyang" === t ? e >= 11 ? e : e + 12 : "sonten" === t || "ndalu" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 11 ? "enjing" : e < 15 ? "siyang" : e < 19 ? "sonten" : "ndalu"
                        },
                        calendar: {
                            sameDay: "[Dinten puniko pukul] LT",
                            nextDay: "[Mbenjang pukul] LT",
                            nextWeek: "dddd [pukul] LT",
                            lastDay: "[Kala wingi pukul] LT",
                            lastWeek: "dddd [kepengker pukul] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "wonten ing %s",
                            past: "%s ingkang kepengker",
                            s: "sawetawis detik",
                            ss: "%d detik",
                            m: "setunggal menit",
                            mm: "%d menit",
                            h: "setunggal jam",
                            hh: "%d jam",
                            d: "sedinten",
                            dd: "%d dinten",
                            M: "sewulan",
                            MM: "%d wulan",
                            y: "setaun",
                            yy: "%d taun"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            2105: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ka", {
                        months: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),
                        monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
                        weekdays: {
                            standalone: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),
                            format: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),
                            isFormat: /(წინა|შემდეგ)/
                        },
                        weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
                        weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[დღეს] LT[-ზე]",
                            nextDay: "[ხვალ] LT[-ზე]",
                            lastDay: "[გუშინ] LT[-ზე]",
                            nextWeek: "[შემდეგ] dddd LT[-ზე]",
                            lastWeek: "[წინა] dddd LT-ზე",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: function (e) {
                                return e.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, (function (e, t, a) {
                                    return "ი" === a ? t + "ში" : t + a + "ში"
                                }))
                            },
                            past: function (e) {
                                return /(წამი|წუთი|საათი|დღე|თვე)/.test(e) ? e.replace(/(ი|ე)$/, "ის წინ") : /წელი/.test(e) ? e.replace(/წელი$/, "წლის წინ") : e
                            },
                            s: "რამდენიმე წამი",
                            ss: "%d წამი",
                            m: "წუთი",
                            mm: "%d წუთი",
                            h: "საათი",
                            hh: "%d საათი",
                            d: "დღე",
                            dd: "%d დღე",
                            M: "თვე",
                            MM: "%d თვე",
                            y: "წელი",
                            yy: "%d წელი"
                        },
                        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
                        ordinal: function (e) {
                            return 0 === e ? e : 1 === e ? e + "-ლი" : e < 20 || e <= 100 && e % 20 == 0 || e % 100 == 0 ? "მე-" + e : e + "-ე"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7772: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        0: "-ші",
                        1: "-ші",
                        2: "-ші",
                        3: "-ші",
                        4: "-ші",
                        5: "-ші",
                        6: "-шы",
                        7: "-ші",
                        8: "-ші",
                        9: "-шы",
                        10: "-шы",
                        20: "-шы",
                        30: "-шы",
                        40: "-шы",
                        50: "-ші",
                        60: "-шы",
                        70: "-ші",
                        80: "-ші",
                        90: "-шы",
                        100: "-ші"
                    };
                    e.defineLocale("kk", {
                        months: "қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split("_"),
                        monthsShort: "қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split("_"),
                        weekdays: "жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split("_"),
                        weekdaysShort: "жек_дүй_сей_сәр_бей_жұм_сен".split("_"),
                        weekdaysMin: "жк_дй_сй_ср_бй_жм_сн".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Бүгін сағат] LT",
                            nextDay: "[Ертең сағат] LT",
                            nextWeek: "dddd [сағат] LT",
                            lastDay: "[Кеше сағат] LT",
                            lastWeek: "[Өткен аптаның] dddd [сағат] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s ішінде",
                            past: "%s бұрын",
                            s: "бірнеше секунд",
                            ss: "%d секунд",
                            m: "бір минут",
                            mm: "%d минут",
                            h: "бір сағат",
                            hh: "%d сағат",
                            d: "бір күн",
                            dd: "%d күн",
                            M: "бір ай",
                            MM: "%d ай",
                            y: "бір жыл",
                            yy: "%d жыл"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
                        ordinal: function (e) {
                            var a = e % 10,
                                i = e >= 100 ? 100 : null;
                            return e + (t[e] || t[a] || t[i])
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            8758: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "១",
                            2: "២",
                            3: "៣",
                            4: "៤",
                            5: "៥",
                            6: "៦",
                            7: "៧",
                            8: "៨",
                            9: "៩",
                            0: "០"
                        },
                        a = {
                            "១": "1",
                            "២": "2",
                            "៣": "3",
                            "៤": "4",
                            "៥": "5",
                            "៦": "6",
                            "៧": "7",
                            "៨": "8",
                            "៩": "9",
                            "០": "0"
                        };
                    e.defineLocale("km", {
                        months: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
                        monthsShort: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
                        weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
                        weekdaysShort: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
                        weekdaysMin: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ព្រឹក|ល្ងាច/,
                        isPM: function (e) {
                            return "ល្ងាច" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ព្រឹក" : "ល្ងាច"
                        },
                        calendar: {
                            sameDay: "[ថ្ងៃនេះ ម៉ោង] LT",
                            nextDay: "[ស្អែក ម៉ោង] LT",
                            nextWeek: "dddd [ម៉ោង] LT",
                            lastDay: "[ម្សិលមិញ ម៉ោង] LT",
                            lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%sទៀត",
                            past: "%sមុន",
                            s: "ប៉ុន្មានវិនាទី",
                            ss: "%d វិនាទី",
                            m: "មួយនាទី",
                            mm: "%d នាទី",
                            h: "មួយម៉ោង",
                            hh: "%d ម៉ោង",
                            d: "មួយថ្ងៃ",
                            dd: "%d ថ្ងៃ",
                            M: "មួយខែ",
                            MM: "%d ខែ",
                            y: "មួយឆ្នាំ",
                            yy: "%d ឆ្នាំ"
                        },
                        dayOfMonthOrdinalParse: /ទី\d{1,2}/,
                        ordinal: "ទី%d",
                        preparse: function (e) {
                            return e.replace(/[១២៣៤៥៦៧៨៩០]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9282: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "೧",
                            2: "೨",
                            3: "೩",
                            4: "೪",
                            5: "೫",
                            6: "೬",
                            7: "೭",
                            8: "೮",
                            9: "೯",
                            0: "೦"
                        },
                        a = {
                            "೧": "1",
                            "೨": "2",
                            "೩": "3",
                            "೪": "4",
                            "೫": "5",
                            "೬": "6",
                            "೭": "7",
                            "೮": "8",
                            "೯": "9",
                            "೦": "0"
                        };
                    e.defineLocale("kn", {
                        months: "ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split("_"),
                        monthsShort: "ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split("_"),
                        monthsParseExact: !0,
                        weekdays: "ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split("_"),
                        weekdaysShort: "ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),
                        weekdaysMin: "ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),
                        longDateFormat: {
                            LT: "A h:mm",
                            LTS: "A h:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm",
                            LLLL: "dddd, D MMMM YYYY, A h:mm"
                        },
                        calendar: {
                            sameDay: "[ಇಂದು] LT",
                            nextDay: "[ನಾಳೆ] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[ನಿನ್ನೆ] LT",
                            lastWeek: "[ಕೊನೆಯ] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s ನಂತರ",
                            past: "%s ಹಿಂದೆ",
                            s: "ಕೆಲವು ಕ್ಷಣಗಳು",
                            ss: "%d ಸೆಕೆಂಡುಗಳು",
                            m: "ಒಂದು ನಿಮಿಷ",
                            mm: "%d ನಿಮಿಷ",
                            h: "ಒಂದು ಗಂಟೆ",
                            hh: "%d ಗಂಟೆ",
                            d: "ಒಂದು ದಿನ",
                            dd: "%d ದಿನ",
                            M: "ಒಂದು ತಿಂಗಳು",
                            MM: "%d ತಿಂಗಳು",
                            y: "ಒಂದು ವರ್ಷ",
                            yy: "%d ವರ್ಷ"
                        },
                        preparse: function (e) {
                            return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "ರಾತ್ರಿ" === t ? e < 4 ? e : e + 12 : "ಬೆಳಿಗ್ಗೆ" === t ? e : "ಮಧ್ಯಾಹ್ನ" === t ? e >= 10 ? e : e + 12 : "ಸಂಜೆ" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "ರಾತ್ರಿ" : e < 10 ? "ಬೆಳಿಗ್ಗೆ" : e < 17 ? "ಮಧ್ಯಾಹ್ನ" : e < 20 ? "ಸಂಜೆ" : "ರಾತ್ರಿ"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
                        ordinal: function (e) {
                            return e + "ನೇ"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            3730: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ko", {
                        months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                        monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                        weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
                        weekdaysShort: "일_월_화_수_목_금_토".split("_"),
                        weekdaysMin: "일_월_화_수_목_금_토".split("_"),
                        longDateFormat: {
                            LT: "A h:mm",
                            LTS: "A h:mm:ss",
                            L: "YYYY.MM.DD.",
                            LL: "YYYY년 MMMM D일",
                            LLL: "YYYY년 MMMM D일 A h:mm",
                            LLLL: "YYYY년 MMMM D일 dddd A h:mm",
                            l: "YYYY.MM.DD.",
                            ll: "YYYY년 MMMM D일",
                            lll: "YYYY년 MMMM D일 A h:mm",
                            llll: "YYYY년 MMMM D일 dddd A h:mm"
                        },
                        calendar: {
                            sameDay: "오늘 LT",
                            nextDay: "내일 LT",
                            nextWeek: "dddd LT",
                            lastDay: "어제 LT",
                            lastWeek: "지난주 dddd LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s 후",
                            past: "%s 전",
                            s: "몇 초",
                            ss: "%d초",
                            m: "1분",
                            mm: "%d분",
                            h: "한 시간",
                            hh: "%d시간",
                            d: "하루",
                            dd: "%d일",
                            M: "한 달",
                            MM: "%d달",
                            y: "일 년",
                            yy: "%d년"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "일";
                                case "M":
                                    return e + "월";
                                case "w":
                                case "W":
                                    return e + "주";
                                default:
                                    return e
                            }
                        },
                        meridiemParse: /오전|오후/,
                        isPM: function (e) {
                            return "오후" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "오전" : "오후"
                        }
                    })
                }(a(381))
            },
            1408: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "١",
                            2: "٢",
                            3: "٣",
                            4: "٤",
                            5: "٥",
                            6: "٦",
                            7: "٧",
                            8: "٨",
                            9: "٩",
                            0: "٠"
                        },
                        a = {
                            "١": "1",
                            "٢": "2",
                            "٣": "3",
                            "٤": "4",
                            "٥": "5",
                            "٦": "6",
                            "٧": "7",
                            "٨": "8",
                            "٩": "9",
                            "٠": "0"
                        },
                        i = ["کانونی دووەم", "شوبات", "ئازار", "نیسان", "ئایار", "حوزەیران", "تەمموز", "ئاب", "ئەیلوول", "تشرینی یەكەم", "تشرینی دووەم", "كانونی یەکەم"];
                    e.defineLocale("ku", {
                        months: i,
                        monthsShort: i,
                        weekdays: "یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌".split("_"),
                        weekdaysShort: "یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌".split("_"),
                        weekdaysMin: "ی_د_س_چ_پ_ه_ش".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ئێواره‌|به‌یانی/,
                        isPM: function (e) {
                            return /ئێواره‌/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "به‌یانی" : "ئێواره‌"
                        },
                        calendar: {
                            sameDay: "[ئه‌مرۆ كاتژمێر] LT",
                            nextDay: "[به‌یانی كاتژمێر] LT",
                            nextWeek: "dddd [كاتژمێر] LT",
                            lastDay: "[دوێنێ كاتژمێر] LT",
                            lastWeek: "dddd [كاتژمێر] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "له‌ %s",
                            past: "%s",
                            s: "چه‌ند چركه‌یه‌ك",
                            ss: "چركه‌ %d",
                            m: "یه‌ك خوله‌ك",
                            mm: "%d خوله‌ك",
                            h: "یه‌ك كاتژمێر",
                            hh: "%d كاتژمێر",
                            d: "یه‌ك ڕۆژ",
                            dd: "%d ڕۆژ",
                            M: "یه‌ك مانگ",
                            MM: "%d مانگ",
                            y: "یه‌ك ساڵ",
                            yy: "%d ساڵ"
                        },
                        preparse: function (e) {
                            return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function (e) {
                                return a[e]
                            })).replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            })).replace(/,/g, "،")
                        },
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            3291: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        0: "-чү",
                        1: "-чи",
                        2: "-чи",
                        3: "-чү",
                        4: "-чү",
                        5: "-чи",
                        6: "-чы",
                        7: "-чи",
                        8: "-чи",
                        9: "-чу",
                        10: "-чу",
                        20: "-чы",
                        30: "-чу",
                        40: "-чы",
                        50: "-чү",
                        60: "-чы",
                        70: "-чи",
                        80: "-чи",
                        90: "-чу",
                        100: "-чү"
                    };
                    e.defineLocale("ky", {
                        months: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
                        monthsShort: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
                        weekdays: "Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split("_"),
                        weekdaysShort: "Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),
                        weekdaysMin: "Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Бүгүн саат] LT",
                            nextDay: "[Эртең саат] LT",
                            nextWeek: "dddd [саат] LT",
                            lastDay: "[Кечээ саат] LT",
                            lastWeek: "[Өткөн аптанын] dddd [күнү] [саат] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s ичинде",
                            past: "%s мурун",
                            s: "бирнече секунд",
                            ss: "%d секунд",
                            m: "бир мүнөт",
                            mm: "%d мүнөт",
                            h: "бир саат",
                            hh: "%d саат",
                            d: "бир күн",
                            dd: "%d күн",
                            M: "бир ай",
                            MM: "%d ай",
                            y: "бир жыл",
                            yy: "%d жыл"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
                        ordinal: function (e) {
                            var a = e % 10,
                                i = e >= 100 ? 100 : null;
                            return e + (t[e] || t[a] || t[i])
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            6841: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            m: ["eng Minutt", "enger Minutt"],
                            h: ["eng Stonn", "enger Stonn"],
                            d: ["een Dag", "engem Dag"],
                            M: ["ee Mount", "engem Mount"],
                            y: ["ee Joer", "engem Joer"]
                        };
                        return t ? n[a][0] : n[a][1]
                    }

                    function a(e) {
                        return n(e.substr(0, e.indexOf(" "))) ? "a " + e : "an " + e
                    }

                    function i(e) {
                        return n(e.substr(0, e.indexOf(" "))) ? "viru " + e : "virun " + e
                    }

                    function n(e) {
                        if (e = parseInt(e, 10), isNaN(e)) return !1;
                        if (e < 0) return !0;
                        if (e < 10) return 4 <= e && e <= 7;
                        if (e < 100) {
                            var t = e % 10;
                            return n(0 === t ? e / 10 : t)
                        }
                        if (e < 1e4) {
                            for (; e >= 10;) e /= 10;
                            return n(e)
                        }
                        return n(e /= 1e3)
                    }
                    e.defineLocale("lb", {
                        months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                        monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
                        weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
                        weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm [Auer]",
                            LTS: "H:mm:ss [Auer]",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm [Auer]",
                            LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
                        },
                        calendar: {
                            sameDay: "[Haut um] LT",
                            sameElse: "L",
                            nextDay: "[Muer um] LT",
                            nextWeek: "dddd [um] LT",
                            lastDay: "[Gëschter um] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 2:
                                    case 4:
                                        return "[Leschten] dddd [um] LT";
                                    default:
                                        return "[Leschte] dddd [um] LT"
                                }
                            }
                        },
                        relativeTime: {
                            future: a,
                            past: i,
                            s: "e puer Sekonnen",
                            ss: "%d Sekonnen",
                            m: t,
                            mm: "%d Minutten",
                            h: t,
                            hh: "%d Stonnen",
                            d: t,
                            dd: "%d Deeg",
                            M: t,
                            MM: "%d Méint",
                            y: t,
                            yy: "%d Joer"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5466: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("lo", {
                        months: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
                        monthsShort: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
                        weekdays: "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
                        weekdaysShort: "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
                        weekdaysMin: "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "ວັນdddd D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
                        isPM: function (e) {
                            return "ຕອນແລງ" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ຕອນເຊົ້າ" : "ຕອນແລງ"
                        },
                        calendar: {
                            sameDay: "[ມື້ນີ້ເວລາ] LT",
                            nextDay: "[ມື້ອື່ນເວລາ] LT",
                            nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
                            lastDay: "[ມື້ວານນີ້ເວລາ] LT",
                            lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "ອີກ %s",
                            past: "%sຜ່ານມາ",
                            s: "ບໍ່ເທົ່າໃດວິນາທີ",
                            ss: "%d ວິນາທີ",
                            m: "1 ນາທີ",
                            mm: "%d ນາທີ",
                            h: "1 ຊົ່ວໂມງ",
                            hh: "%d ຊົ່ວໂມງ",
                            d: "1 ມື້",
                            dd: "%d ມື້",
                            M: "1 ເດືອນ",
                            MM: "%d ເດືອນ",
                            y: "1 ປີ",
                            yy: "%d ປີ"
                        },
                        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
                        ordinal: function (e) {
                            return "ທີ່" + e
                        }
                    })
                }(a(381))
            },
            7010: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        ss: "sekundė_sekundžių_sekundes",
                        m: "minutė_minutės_minutę",
                        mm: "minutės_minučių_minutes",
                        h: "valanda_valandos_valandą",
                        hh: "valandos_valandų_valandas",
                        d: "diena_dienos_dieną",
                        dd: "dienos_dienų_dienas",
                        M: "mėnuo_mėnesio_mėnesį",
                        MM: "mėnesiai_mėnesių_mėnesius",
                        y: "metai_metų_metus",
                        yy: "metai_metų_metus"
                    };

                    function a(e, t, a, i) {
                        return t ? "kelios sekundės" : i ? "kelių sekundžių" : "kelias sekundes"
                    }

                    function i(e, t, a, i) {
                        return t ? r(a)[0] : i ? r(a)[1] : r(a)[2]
                    }

                    function n(e) {
                        return e % 10 == 0 || e > 10 && e < 20
                    }

                    function r(e) {
                        return t[e].split("_")
                    }

                    function s(e, t, a, s) {
                        var o = e + " ";
                        return 1 === e ? o + i(e, t, a[0], s) : t ? o + (n(e) ? r(a)[1] : r(a)[0]) : s ? o + r(a)[1] : o + (n(e) ? r(a)[1] : r(a)[2])
                    }
                    e.defineLocale("lt", {
                        months: {
                            format: "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),
                            standalone: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),
                            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
                        },
                        monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
                        weekdays: {
                            format: "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),
                            standalone: "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),
                            isFormat: /dddd HH:mm/
                        },
                        weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
                        weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "YYYY [m.] MMMM D [d.]",
                            LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                            LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
                            l: "YYYY-MM-DD",
                            ll: "YYYY [m.] MMMM D [d.]",
                            lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                            llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
                        },
                        calendar: {
                            sameDay: "[Šiandien] LT",
                            nextDay: "[Rytoj] LT",
                            nextWeek: "dddd LT",
                            lastDay: "[Vakar] LT",
                            lastWeek: "[Praėjusį] dddd LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "po %s",
                            past: "prieš %s",
                            s: a,
                            ss: s,
                            m: i,
                            mm: s,
                            h: i,
                            hh: s,
                            d: i,
                            dd: s,
                            M: i,
                            MM: s,
                            y: i,
                            yy: s
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
                        ordinal: function (e) {
                            return e + "-oji"
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7595: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        ss: "sekundes_sekundēm_sekunde_sekundes".split("_"),
                        m: "minūtes_minūtēm_minūte_minūtes".split("_"),
                        mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
                        h: "stundas_stundām_stunda_stundas".split("_"),
                        hh: "stundas_stundām_stunda_stundas".split("_"),
                        d: "dienas_dienām_diena_dienas".split("_"),
                        dd: "dienas_dienām_diena_dienas".split("_"),
                        M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
                        MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
                        y: "gada_gadiem_gads_gadi".split("_"),
                        yy: "gada_gadiem_gads_gadi".split("_")
                    };

                    function a(e, t, a) {
                        return a ? t % 10 == 1 && t % 100 != 11 ? e[2] : e[3] : t % 10 == 1 && t % 100 != 11 ? e[0] : e[1]
                    }

                    function i(e, i, n) {
                        return e + " " + a(t[n], e, i)
                    }

                    function n(e, i, n) {
                        return a(t[n], e, i)
                    }

                    function r(e, t) {
                        return t ? "dažas sekundes" : "dažām sekundēm"
                    }
                    e.defineLocale("lv", {
                        months: "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
                        monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
                        weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
                        weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
                        weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY.",
                            LL: "YYYY. [gada] D. MMMM",
                            LLL: "YYYY. [gada] D. MMMM, HH:mm",
                            LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
                        },
                        calendar: {
                            sameDay: "[Šodien pulksten] LT",
                            nextDay: "[Rīt pulksten] LT",
                            nextWeek: "dddd [pulksten] LT",
                            lastDay: "[Vakar pulksten] LT",
                            lastWeek: "[Pagājušā] dddd [pulksten] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "pēc %s",
                            past: "pirms %s",
                            s: r,
                            ss: i,
                            m: n,
                            mm: i,
                            h: n,
                            hh: i,
                            d: n,
                            dd: i,
                            M: n,
                            MM: i,
                            y: n,
                            yy: i
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9861: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        words: {
                            ss: ["sekund", "sekunda", "sekundi"],
                            m: ["jedan minut", "jednog minuta"],
                            mm: ["minut", "minuta", "minuta"],
                            h: ["jedan sat", "jednog sata"],
                            hh: ["sat", "sata", "sati"],
                            dd: ["dan", "dana", "dana"],
                            MM: ["mjesec", "mjeseca", "mjeseci"],
                            yy: ["godina", "godine", "godina"]
                        },
                        correctGrammaticalCase: function (e, t) {
                            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2]
                        },
                        translate: function (e, a, i) {
                            var n = t.words[i];
                            return 1 === i.length ? a ? n[0] : n[1] : e + " " + t.correctGrammaticalCase(e, n)
                        }
                    };
                    e.defineLocale("me", {
                        months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
                        monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                        weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                        weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd, D. MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[danas u] LT",
                            nextDay: "[sjutra u] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[u] [nedjelju] [u] LT";
                                    case 3:
                                        return "[u] [srijedu] [u] LT";
                                    case 6:
                                        return "[u] [subotu] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[u] dddd [u] LT"
                                }
                            },
                            lastDay: "[juče u] LT",
                            lastWeek: function () {
                                return ["[prošle] [nedjelje] [u] LT", "[prošlog] [ponedjeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srijede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "prije %s",
                            s: "nekoliko sekundi",
                            ss: t.translate,
                            m: t.translate,
                            mm: t.translate,
                            h: t.translate,
                            hh: t.translate,
                            d: "dan",
                            dd: t.translate,
                            M: "mjesec",
                            MM: t.translate,
                            y: "godinu",
                            yy: t.translate
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            5493: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("mi", {
                        months: "Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split("_"),
                        monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),
                        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
                        weekdays: "Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split("_"),
                        weekdaysShort: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
                        weekdaysMin: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [i] HH:mm",
                            LLLL: "dddd, D MMMM YYYY [i] HH:mm"
                        },
                        calendar: {
                            sameDay: "[i teie mahana, i] LT",
                            nextDay: "[apopo i] LT",
                            nextWeek: "dddd [i] LT",
                            lastDay: "[inanahi i] LT",
                            lastWeek: "dddd [whakamutunga i] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "i roto i %s",
                            past: "%s i mua",
                            s: "te hēkona ruarua",
                            ss: "%d hēkona",
                            m: "he meneti",
                            mm: "%d meneti",
                            h: "te haora",
                            hh: "%d haora",
                            d: "he ra",
                            dd: "%d ra",
                            M: "he marama",
                            MM: "%d marama",
                            y: "he tau",
                            yy: "%d tau"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5966: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("mk", {
                        months: "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
                        monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
                        weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
                        weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
                        weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "D.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY H:mm",
                            LLLL: "dddd, D MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[Денес во] LT",
                            nextDay: "[Утре во] LT",
                            nextWeek: "[Во] dddd [во] LT",
                            lastDay: "[Вчера во] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                    case 3:
                                    case 6:
                                        return "[Изминатата] dddd [во] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[Изминатиот] dddd [во] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "за %s",
                            past: "пред %s",
                            s: "неколку секунди",
                            ss: "%d секунди",
                            m: "една минута",
                            mm: "%d минути",
                            h: "еден час",
                            hh: "%d часа",
                            d: "еден ден",
                            dd: "%d дена",
                            M: "еден месец",
                            MM: "%d месеци",
                            y: "една година",
                            yy: "%d години"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
                        ordinal: function (e) {
                            var t = e % 10,
                                a = e % 100;
                            return 0 === e ? e + "-ев" : 0 === a ? e + "-ен" : a > 10 && a < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7341: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ml", {
                        months: "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),
                        monthsShort: "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),
                        weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
                        weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
                        longDateFormat: {
                            LT: "A h:mm -നു",
                            LTS: "A h:mm:ss -നു",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm -നു",
                            LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
                        },
                        calendar: {
                            sameDay: "[ഇന്ന്] LT",
                            nextDay: "[നാളെ] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[ഇന്നലെ] LT",
                            lastWeek: "[കഴിഞ്ഞ] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s കഴിഞ്ഞ്",
                            past: "%s മുൻപ്",
                            s: "അൽപ നിമിഷങ്ങൾ",
                            ss: "%d സെക്കൻഡ്",
                            m: "ഒരു മിനിറ്റ്",
                            mm: "%d മിനിറ്റ്",
                            h: "ഒരു മണിക്കൂർ",
                            hh: "%d മണിക്കൂർ",
                            d: "ഒരു ദിവസം",
                            dd: "%d ദിവസം",
                            M: "ഒരു മാസം",
                            MM: "%d മാസം",
                            y: "ഒരു വർഷം",
                            yy: "%d വർഷം"
                        },
                        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "രാത്രി" === t && e >= 4 || "ഉച്ച കഴിഞ്ഞ്" === t || "വൈകുന്നേരം" === t ? e + 12 : e
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "രാത്രി" : e < 12 ? "രാവിലെ" : e < 17 ? "ഉച്ച കഴിഞ്ഞ്" : e < 20 ? "വൈകുന്നേരം" : "രാത്രി"
                        }
                    })
                }(a(381))
            },
            5115: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        switch (a) {
                            case "s":
                                return t ? "хэдхэн секунд" : "хэдхэн секундын";
                            case "ss":
                                return e + (t ? " секунд" : " секундын");
                            case "m":
                            case "mm":
                                return e + (t ? " минут" : " минутын");
                            case "h":
                            case "hh":
                                return e + (t ? " цаг" : " цагийн");
                            case "d":
                            case "dd":
                                return e + (t ? " өдөр" : " өдрийн");
                            case "M":
                            case "MM":
                                return e + (t ? " сар" : " сарын");
                            case "y":
                            case "yy":
                                return e + (t ? " жил" : " жилийн");
                            default:
                                return e
                        }
                    }
                    e.defineLocale("mn", {
                        months: "Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split("_"),
                        monthsShort: "1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split("_"),
                        monthsParseExact: !0,
                        weekdays: "Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),
                        weekdaysShort: "Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),
                        weekdaysMin: "Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "YYYY оны MMMMын D",
                            LLL: "YYYY оны MMMMын D HH:mm",
                            LLLL: "dddd, YYYY оны MMMMын D HH:mm"
                        },
                        meridiemParse: /ҮӨ|ҮХ/i,
                        isPM: function (e) {
                            return "ҮХ" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ҮӨ" : "ҮХ"
                        },
                        calendar: {
                            sameDay: "[Өнөөдөр] LT",
                            nextDay: "[Маргааш] LT",
                            nextWeek: "[Ирэх] dddd LT",
                            lastDay: "[Өчигдөр] LT",
                            lastWeek: "[Өнгөрсөн] dddd LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s дараа",
                            past: "%s өмнө",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: t,
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + " өдөр";
                                default:
                                    return e
                            }
                        }
                    })
                }(a(381))
            },
            370: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "१",
                            2: "२",
                            3: "३",
                            4: "४",
                            5: "५",
                            6: "६",
                            7: "७",
                            8: "८",
                            9: "९",
                            0: "०"
                        },
                        a = {
                            "१": "1",
                            "२": "2",
                            "३": "3",
                            "४": "4",
                            "५": "5",
                            "६": "6",
                            "७": "7",
                            "८": "8",
                            "९": "9",
                            "०": "0"
                        };

                    function i(e, t, a, i) {
                        var n = "";
                        if (t) switch (a) {
                            case "s":
                                n = "काही सेकंद";
                                break;
                            case "ss":
                                n = "%d सेकंद";
                                break;
                            case "m":
                                n = "एक मिनिट";
                                break;
                            case "mm":
                                n = "%d मिनिटे";
                                break;
                            case "h":
                                n = "एक तास";
                                break;
                            case "hh":
                                n = "%d तास";
                                break;
                            case "d":
                                n = "एक दिवस";
                                break;
                            case "dd":
                                n = "%d दिवस";
                                break;
                            case "M":
                                n = "एक महिना";
                                break;
                            case "MM":
                                n = "%d महिने";
                                break;
                            case "y":
                                n = "एक वर्ष";
                                break;
                            case "yy":
                                n = "%d वर्षे"
                        } else switch (a) {
                            case "s":
                                n = "काही सेकंदां";
                                break;
                            case "ss":
                                n = "%d सेकंदां";
                                break;
                            case "m":
                                n = "एका मिनिटा";
                                break;
                            case "mm":
                                n = "%d मिनिटां";
                                break;
                            case "h":
                                n = "एका तासा";
                                break;
                            case "hh":
                                n = "%d तासां";
                                break;
                            case "d":
                                n = "एका दिवसा";
                                break;
                            case "dd":
                                n = "%d दिवसां";
                                break;
                            case "M":
                                n = "एका महिन्या";
                                break;
                            case "MM":
                                n = "%d महिन्यां";
                                break;
                            case "y":
                                n = "एका वर्षा";
                                break;
                            case "yy":
                                n = "%d वर्षां"
                        }
                        return n.replace(/%d/i, e)
                    }
                    e.defineLocale("mr", {
                        months: "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
                        monthsShort: "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
                        weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
                        weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
                        longDateFormat: {
                            LT: "A h:mm वाजता",
                            LTS: "A h:mm:ss वाजता",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm वाजता",
                            LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
                        },
                        calendar: {
                            sameDay: "[आज] LT",
                            nextDay: "[उद्या] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[काल] LT",
                            lastWeek: "[मागील] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%sमध्ये",
                            past: "%sपूर्वी",
                            s: i,
                            ss: i,
                            m: i,
                            mm: i,
                            h: i,
                            hh: i,
                            d: i,
                            dd: i,
                            M: i,
                            MM: i,
                            y: i,
                            yy: i
                        },
                        preparse: function (e) {
                            return e.replace(/[१२३४५६७८९०]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "पहाटे" === t || "सकाळी" === t ? e : "दुपारी" === t || "सायंकाळी" === t || "रात्री" === t ? e >= 12 ? e : e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e >= 0 && e < 6 ? "पहाटे" : e < 12 ? "सकाळी" : e < 17 ? "दुपारी" : e < 20 ? "सायंकाळी" : "रात्री"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            1237: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ms-my", {
                        months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
                        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
                        weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
                        weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
                        weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [pukul] HH.mm",
                            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                        },
                        meridiemParse: /pagi|tengahari|petang|malam/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
                        },
                        calendar: {
                            sameDay: "[Hari ini pukul] LT",
                            nextDay: "[Esok pukul] LT",
                            nextWeek: "dddd [pukul] LT",
                            lastDay: "[Kelmarin pukul] LT",
                            lastWeek: "dddd [lepas pukul] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dalam %s",
                            past: "%s yang lepas",
                            s: "beberapa saat",
                            ss: "%d saat",
                            m: "seminit",
                            mm: "%d minit",
                            h: "sejam",
                            hh: "%d jam",
                            d: "sehari",
                            dd: "%d hari",
                            M: "sebulan",
                            MM: "%d bulan",
                            y: "setahun",
                            yy: "%d tahun"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            9847: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ms", {
                        months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
                        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
                        weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
                        weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
                        weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [pukul] HH.mm",
                            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                        },
                        meridiemParse: /pagi|tengahari|petang|malam/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
                        },
                        calendar: {
                            sameDay: "[Hari ini pukul] LT",
                            nextDay: "[Esok pukul] LT",
                            nextWeek: "dddd [pukul] LT",
                            lastDay: "[Kelmarin pukul] LT",
                            lastWeek: "dddd [lepas pukul] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dalam %s",
                            past: "%s yang lepas",
                            s: "beberapa saat",
                            ss: "%d saat",
                            m: "seminit",
                            mm: "%d minit",
                            h: "sejam",
                            hh: "%d jam",
                            d: "sehari",
                            dd: "%d hari",
                            M: "sebulan",
                            MM: "%d bulan",
                            y: "setahun",
                            yy: "%d tahun"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            2126: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("mt", {
                        months: "Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split("_"),
                        monthsShort: "Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split("_"),
                        weekdays: "Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split("_"),
                        weekdaysShort: "Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),
                        weekdaysMin: "Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Illum fil-]LT",
                            nextDay: "[Għada fil-]LT",
                            nextWeek: "dddd [fil-]LT",
                            lastDay: "[Il-bieraħ fil-]LT",
                            lastWeek: "dddd [li għadda] [fil-]LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "f’ %s",
                            past: "%s ilu",
                            s: "ftit sekondi",
                            ss: "%d sekondi",
                            m: "minuta",
                            mm: "%d minuti",
                            h: "siegħa",
                            hh: "%d siegħat",
                            d: "ġurnata",
                            dd: "%d ġranet",
                            M: "xahar",
                            MM: "%d xhur",
                            y: "sena",
                            yy: "%d sni"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6165: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "၁",
                            2: "၂",
                            3: "၃",
                            4: "၄",
                            5: "၅",
                            6: "၆",
                            7: "၇",
                            8: "၈",
                            9: "၉",
                            0: "၀"
                        },
                        a = {
                            "၁": "1",
                            "၂": "2",
                            "၃": "3",
                            "၄": "4",
                            "၅": "5",
                            "၆": "6",
                            "၇": "7",
                            "၈": "8",
                            "၉": "9",
                            "၀": "0"
                        };
                    e.defineLocale("my", {
                        months: "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),
                        monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
                        weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
                        weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
                        weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[ယနေ.] LT [မှာ]",
                            nextDay: "[မနက်ဖြန်] LT [မှာ]",
                            nextWeek: "dddd LT [မှာ]",
                            lastDay: "[မနေ.က] LT [မှာ]",
                            lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "လာမည့် %s မှာ",
                            past: "လွန်ခဲ့သော %s က",
                            s: "စက္ကန်.အနည်းငယ်",
                            ss: "%d စက္ကန့်",
                            m: "တစ်မိနစ်",
                            mm: "%d မိနစ်",
                            h: "တစ်နာရီ",
                            hh: "%d နာရီ",
                            d: "တစ်ရက်",
                            dd: "%d ရက်",
                            M: "တစ်လ",
                            MM: "%d လ",
                            y: "တစ်နှစ်",
                            yy: "%d နှစ်"
                        },
                        preparse: function (e) {
                            return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4924: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("nb", {
                        months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                        monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
                        weekdaysShort: "sø._ma._ti._on._to._fr._lø.".split("_"),
                        weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY [kl.] HH:mm",
                            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
                        },
                        calendar: {
                            sameDay: "[i dag kl.] LT",
                            nextDay: "[i morgen kl.] LT",
                            nextWeek: "dddd [kl.] LT",
                            lastDay: "[i går kl.] LT",
                            lastWeek: "[forrige] dddd [kl.] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "om %s",
                            past: "%s siden",
                            s: "noen sekunder",
                            ss: "%d sekunder",
                            m: "ett minutt",
                            mm: "%d minutter",
                            h: "en time",
                            hh: "%d timer",
                            d: "en dag",
                            dd: "%d dager",
                            w: "en uke",
                            ww: "%d uker",
                            M: "en måned",
                            MM: "%d måneder",
                            y: "ett år",
                            yy: "%d år"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6744: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "१",
                            2: "२",
                            3: "३",
                            4: "४",
                            5: "५",
                            6: "६",
                            7: "७",
                            8: "८",
                            9: "९",
                            0: "०"
                        },
                        a = {
                            "१": "1",
                            "२": "2",
                            "३": "3",
                            "४": "4",
                            "५": "5",
                            "६": "6",
                            "७": "7",
                            "८": "8",
                            "९": "9",
                            "०": "0"
                        };
                    e.defineLocale("ne", {
                        months: "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),
                        monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
                        weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
                        weekdaysMin: "आ._सो._मं._बु._बि._शु._श.".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "Aको h:mm बजे",
                            LTS: "Aको h:mm:ss बजे",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, Aको h:mm बजे",
                            LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
                        },
                        preparse: function (e) {
                            return e.replace(/[१२३४५६७८९०]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "राति" === t ? e < 4 ? e : e + 12 : "बिहान" === t ? e : "दिउँसो" === t ? e >= 10 ? e : e + 12 : "साँझ" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 3 ? "राति" : e < 12 ? "बिहान" : e < 16 ? "दिउँसो" : e < 20 ? "साँझ" : "राति"
                        },
                        calendar: {
                            sameDay: "[आज] LT",
                            nextDay: "[भोलि] LT",
                            nextWeek: "[आउँदो] dddd[,] LT",
                            lastDay: "[हिजो] LT",
                            lastWeek: "[गएको] dddd[,] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%sमा",
                            past: "%s अगाडि",
                            s: "केही क्षण",
                            ss: "%d सेकेण्ड",
                            m: "एक मिनेट",
                            mm: "%d मिनेट",
                            h: "एक घण्टा",
                            hh: "%d घण्टा",
                            d: "एक दिन",
                            dd: "%d दिन",
                            M: "एक महिना",
                            MM: "%d महिना",
                            y: "एक बर्ष",
                            yy: "%d बर्ष"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            9814: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
                        a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
                        i = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],
                        n = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
                    e.defineLocale("nl-be", {
                        months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
                        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
                        weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
                        weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[vandaag om] LT",
                            nextDay: "[morgen om] LT",
                            nextWeek: "dddd [om] LT",
                            lastDay: "[gisteren om] LT",
                            lastWeek: "[afgelopen] dddd [om] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "over %s",
                            past: "%s geleden",
                            s: "een paar seconden",
                            ss: "%d seconden",
                            m: "één minuut",
                            mm: "%d minuten",
                            h: "één uur",
                            hh: "%d uur",
                            d: "één dag",
                            dd: "%d dagen",
                            M: "één maand",
                            MM: "%d maanden",
                            y: "één jaar",
                            yy: "%d jaar"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                        ordinal: function (e) {
                            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            3901: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
                        a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
                        i = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],
                        n = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
                    e.defineLocale("nl", {
                        months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
                        monthsShort: function (e, i) {
                            return e ? /-MMM-/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsRegex: n,
                        monthsShortRegex: n,
                        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
                        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
                        weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
                        weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD-MM-YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[vandaag om] LT",
                            nextDay: "[morgen om] LT",
                            nextWeek: "dddd [om] LT",
                            lastDay: "[gisteren om] LT",
                            lastWeek: "[afgelopen] dddd [om] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "over %s",
                            past: "%s geleden",
                            s: "een paar seconden",
                            ss: "%d seconden",
                            m: "één minuut",
                            mm: "%d minuten",
                            h: "één uur",
                            hh: "%d uur",
                            d: "één dag",
                            dd: "%d dagen",
                            w: "één week",
                            ww: "%d weken",
                            M: "één maand",
                            MM: "%d maanden",
                            y: "één jaar",
                            yy: "%d jaar"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                        ordinal: function (e) {
                            return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            3877: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("nn", {
                        months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                        monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
                        weekdaysShort: "su._må._ty._on._to._fr._lau.".split("_"),
                        weekdaysMin: "su_må_ty_on_to_fr_la".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY [kl.] H:mm",
                            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
                        },
                        calendar: {
                            sameDay: "[I dag klokka] LT",
                            nextDay: "[I morgon klokka] LT",
                            nextWeek: "dddd [klokka] LT",
                            lastDay: "[I går klokka] LT",
                            lastWeek: "[Føregåande] dddd [klokka] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "om %s",
                            past: "%s sidan",
                            s: "nokre sekund",
                            ss: "%d sekund",
                            m: "eit minutt",
                            mm: "%d minutt",
                            h: "ein time",
                            hh: "%d timar",
                            d: "ein dag",
                            dd: "%d dagar",
                            w: "ei veke",
                            ww: "%d veker",
                            M: "ein månad",
                            MM: "%d månader",
                            y: "eit år",
                            yy: "%d år"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            2135: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("oc-lnc", {
                        months: {
                            standalone: "genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre".split("_"),
                            format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split("_"),
                            isFormat: /D[oD]?(\s)+MMMM/
                        },
                        monthsShort: "gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte".split("_"),
                        weekdaysShort: "dg._dl._dm._dc._dj._dv._ds.".split("_"),
                        weekdaysMin: "dg_dl_dm_dc_dj_dv_ds".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM [de] YYYY",
                            ll: "D MMM YYYY",
                            LLL: "D MMMM [de] YYYY [a] H:mm",
                            lll: "D MMM YYYY, H:mm",
                            LLLL: "dddd D MMMM [de] YYYY [a] H:mm",
                            llll: "ddd D MMM YYYY, H:mm"
                        },
                        calendar: {
                            sameDay: "[uèi a] LT",
                            nextDay: "[deman a] LT",
                            nextWeek: "dddd [a] LT",
                            lastDay: "[ièr a] LT",
                            lastWeek: "dddd [passat a] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "d'aquí %s",
                            past: "fa %s",
                            s: "unas segondas",
                            ss: "%d segondas",
                            m: "una minuta",
                            mm: "%d minutas",
                            h: "una ora",
                            hh: "%d oras",
                            d: "un jorn",
                            dd: "%d jorns",
                            M: "un mes",
                            MM: "%d meses",
                            y: "un an",
                            yy: "%d ans"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
                        ordinal: function (e, t) {
                            var a = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                            return "w" !== t && "W" !== t || (a = "a"), e + a
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5858: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "੧",
                            2: "੨",
                            3: "੩",
                            4: "੪",
                            5: "੫",
                            6: "੬",
                            7: "੭",
                            8: "੮",
                            9: "੯",
                            0: "੦"
                        },
                        a = {
                            "੧": "1",
                            "੨": "2",
                            "੩": "3",
                            "੪": "4",
                            "੫": "5",
                            "੬": "6",
                            "੭": "7",
                            "੮": "8",
                            "੯": "9",
                            "੦": "0"
                        };
                    e.defineLocale("pa-in", {
                        months: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
                        monthsShort: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
                        weekdays: "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),
                        weekdaysShort: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
                        weekdaysMin: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
                        longDateFormat: {
                            LT: "A h:mm ਵਜੇ",
                            LTS: "A h:mm:ss ਵਜੇ",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm ਵਜੇ",
                            LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ"
                        },
                        calendar: {
                            sameDay: "[ਅਜ] LT",
                            nextDay: "[ਕਲ] LT",
                            nextWeek: "[ਅਗਲਾ] dddd, LT",
                            lastDay: "[ਕਲ] LT",
                            lastWeek: "[ਪਿਛਲੇ] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s ਵਿੱਚ",
                            past: "%s ਪਿਛਲੇ",
                            s: "ਕੁਝ ਸਕਿੰਟ",
                            ss: "%d ਸਕਿੰਟ",
                            m: "ਇਕ ਮਿੰਟ",
                            mm: "%d ਮਿੰਟ",
                            h: "ਇੱਕ ਘੰਟਾ",
                            hh: "%d ਘੰਟੇ",
                            d: "ਇੱਕ ਦਿਨ",
                            dd: "%d ਦਿਨ",
                            M: "ਇੱਕ ਮਹੀਨਾ",
                            MM: "%d ਮਹੀਨੇ",
                            y: "ਇੱਕ ਸਾਲ",
                            yy: "%d ਸਾਲ"
                        },
                        preparse: function (e) {
                            return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "ਰਾਤ" === t ? e < 4 ? e : e + 12 : "ਸਵੇਰ" === t ? e : "ਦੁਪਹਿਰ" === t ? e >= 10 ? e : e + 12 : "ਸ਼ਾਮ" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "ਰਾਤ" : e < 10 ? "ਸਵੇਰ" : e < 17 ? "ਦੁਪਹਿਰ" : e < 20 ? "ਸ਼ਾਮ" : "ਰਾਤ"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            4495: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"),
                        a = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"),
                        i = [/^sty/i, /^lut/i, /^mar/i, /^kwi/i, /^maj/i, /^cze/i, /^lip/i, /^sie/i, /^wrz/i, /^paź/i, /^lis/i, /^gru/i];

                    function n(e) {
                        return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 != 1
                    }

                    function r(e, t, a) {
                        var i = e + " ";
                        switch (a) {
                            case "ss":
                                return i + (n(e) ? "sekundy" : "sekund");
                            case "m":
                                return t ? "minuta" : "minutę";
                            case "mm":
                                return i + (n(e) ? "minuty" : "minut");
                            case "h":
                                return t ? "godzina" : "godzinę";
                            case "hh":
                                return i + (n(e) ? "godziny" : "godzin");
                            case "ww":
                                return i + (n(e) ? "tygodnie" : "tygodni");
                            case "MM":
                                return i + (n(e) ? "miesiące" : "miesięcy");
                            case "yy":
                                return i + (n(e) ? "lata" : "lat")
                        }
                    }
                    e.defineLocale("pl", {
                        months: function (e, i) {
                            return e ? /D MMMM/.test(i) ? a[e.month()] : t[e.month()] : t
                        },
                        monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
                        weekdaysShort: "ndz_pon_wt_śr_czw_pt_sob".split("_"),
                        weekdaysMin: "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Dziś o] LT",
                            nextDay: "[Jutro o] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[W niedzielę o] LT";
                                    case 2:
                                        return "[We wtorek o] LT";
                                    case 3:
                                        return "[W środę o] LT";
                                    case 6:
                                        return "[W sobotę o] LT";
                                    default:
                                        return "[W] dddd [o] LT"
                                }
                            },
                            lastDay: "[Wczoraj o] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[W zeszłą niedzielę o] LT";
                                    case 3:
                                        return "[W zeszłą środę o] LT";
                                    case 6:
                                        return "[W zeszłą sobotę o] LT";
                                    default:
                                        return "[W zeszły] dddd [o] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "%s temu",
                            s: "kilka sekund",
                            ss: r,
                            m: r,
                            mm: r,
                            h: r,
                            hh: r,
                            d: "1 dzień",
                            dd: "%d dni",
                            w: "tydzień",
                            ww: r,
                            M: "miesiąc",
                            MM: r,
                            y: "rok",
                            yy: r
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7971: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("pt-br", {
                        months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                        monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                        weekdays: "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
                        weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"),
                        weekdaysMin: "do_2ª_3ª_4ª_5ª_6ª_sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
                            LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
                        },
                        calendar: {
                            sameDay: "[Hoje às] LT",
                            nextDay: "[Amanhã às] LT",
                            nextWeek: "dddd [às] LT",
                            lastDay: "[Ontem às] LT",
                            lastWeek: function () {
                                return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "em %s",
                            past: "há %s",
                            s: "poucos segundos",
                            ss: "%d segundos",
                            m: "um minuto",
                            mm: "%d minutos",
                            h: "uma hora",
                            hh: "%d horas",
                            d: "um dia",
                            dd: "%d dias",
                            M: "um mês",
                            MM: "%d meses",
                            y: "um ano",
                            yy: "%d anos"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        invalidDate: "Data inválida"
                    })
                }(a(381))
            },
            9520: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("pt", {
                        months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                        monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                        weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
                        weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
                        weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D [de] MMMM [de] YYYY",
                            LLL: "D [de] MMMM [de] YYYY HH:mm",
                            LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Hoje às] LT",
                            nextDay: "[Amanhã às] LT",
                            nextWeek: "dddd [às] LT",
                            lastDay: "[Ontem às] LT",
                            lastWeek: function () {
                                return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "em %s",
                            past: "há %s",
                            s: "segundos",
                            ss: "%d segundos",
                            m: "um minuto",
                            mm: "%d minutos",
                            h: "uma hora",
                            hh: "%d horas",
                            d: "um dia",
                            dd: "%d dias",
                            w: "uma semana",
                            ww: "%d semanas",
                            M: "um mês",
                            MM: "%d meses",
                            y: "um ano",
                            yy: "%d anos"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}º/,
                        ordinal: "%dº",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            6459: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a) {
                        var i = " ";
                        return (e % 100 >= 20 || e >= 100 && e % 100 == 0) && (i = " de "), e + i + {
                            ss: "secunde",
                            mm: "minute",
                            hh: "ore",
                            dd: "zile",
                            ww: "săptămâni",
                            MM: "luni",
                            yy: "ani"
                        } [a]
                    }
                    e.defineLocale("ro", {
                        months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
                        monthsShort: "ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
                        weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
                        weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY H:mm",
                            LLLL: "dddd, D MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[azi la] LT",
                            nextDay: "[mâine la] LT",
                            nextWeek: "dddd [la] LT",
                            lastDay: "[ieri la] LT",
                            lastWeek: "[fosta] dddd [la] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "peste %s",
                            past: "%s în urmă",
                            s: "câteva secunde",
                            ss: t,
                            m: "un minut",
                            mm: t,
                            h: "o oră",
                            hh: t,
                            d: "o zi",
                            dd: t,
                            w: "o săptămână",
                            ww: t,
                            M: "o lună",
                            MM: t,
                            y: "un an",
                            yy: t
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            1793: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t) {
                        var a = e.split("_");
                        return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                    }

                    function a(e, a, i) {
                        return "m" === i ? a ? "минута" : "минуту" : e + " " + t({
                            ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                            mm: a ? "минута_минуты_минут" : "минуту_минуты_минут",
                            hh: "час_часа_часов",
                            dd: "день_дня_дней",
                            ww: "неделя_недели_недель",
                            MM: "месяц_месяца_месяцев",
                            yy: "год_года_лет"
                        } [i], +e)
                    }
                    var i = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
                    e.defineLocale("ru", {
                        months: {
                            format: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),
                            standalone: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")
                        },
                        monthsShort: {
                            format: "янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),
                            standalone: "янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_")
                        },
                        weekdays: {
                            standalone: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
                            format: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),
                            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/
                        },
                        weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
                        weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
                        monthsParse: i,
                        longMonthsParse: i,
                        shortMonthsParse: i,
                        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
                        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
                        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
                        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY г.",
                            LLL: "D MMMM YYYY г., H:mm",
                            LLLL: "dddd, D MMMM YYYY г., H:mm"
                        },
                        calendar: {
                            sameDay: "[Сегодня, в] LT",
                            nextDay: "[Завтра, в] LT",
                            lastDay: "[Вчера, в] LT",
                            nextWeek: function (e) {
                                if (e.week() === this.week()) return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                                switch (this.day()) {
                                    case 0:
                                        return "[В следующее] dddd, [в] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                        return "[В следующий] dddd, [в] LT";
                                    case 3:
                                    case 5:
                                    case 6:
                                        return "[В следующую] dddd, [в] LT"
                                }
                            },
                            lastWeek: function (e) {
                                if (e.week() === this.week()) return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                                switch (this.day()) {
                                    case 0:
                                        return "[В прошлое] dddd, [в] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                        return "[В прошлый] dddd, [в] LT";
                                    case 3:
                                    case 5:
                                    case 6:
                                        return "[В прошлую] dddd, [в] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "через %s",
                            past: "%s назад",
                            s: "несколько секунд",
                            ss: a,
                            m: a,
                            mm: a,
                            h: "час",
                            hh: a,
                            d: "день",
                            dd: a,
                            w: "неделя",
                            ww: a,
                            M: "месяц",
                            MM: a,
                            y: "год",
                            yy: a
                        },
                        meridiemParse: /ночи|утра|дня|вечера/i,
                        isPM: function (e) {
                            return /^(дня|вечера)$/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "ночи" : e < 12 ? "утра" : e < 17 ? "дня" : "вечера"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "M":
                                case "d":
                                case "DDD":
                                    return e + "-й";
                                case "D":
                                    return e + "-го";
                                case "w":
                                case "W":
                                    return e + "-я";
                                default:
                                    return e
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            950: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = ["جنوري", "فيبروري", "مارچ", "اپريل", "مئي", "جون", "جولاءِ", "آگسٽ", "سيپٽمبر", "آڪٽوبر", "نومبر", "ڊسمبر"],
                        a = ["آچر", "سومر", "اڱارو", "اربع", "خميس", "جمع", "ڇنڇر"];
                    e.defineLocale("sd", {
                        months: t,
                        monthsShort: t,
                        weekdays: a,
                        weekdaysShort: a,
                        weekdaysMin: a,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd، D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /صبح|شام/,
                        isPM: function (e) {
                            return "شام" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "صبح" : "شام"
                        },
                        calendar: {
                            sameDay: "[اڄ] LT",
                            nextDay: "[سڀاڻي] LT",
                            nextWeek: "dddd [اڳين هفتي تي] LT",
                            lastDay: "[ڪالهه] LT",
                            lastWeek: "[گزريل هفتي] dddd [تي] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s پوء",
                            past: "%s اڳ",
                            s: "چند سيڪنڊ",
                            ss: "%d سيڪنڊ",
                            m: "هڪ منٽ",
                            mm: "%d منٽ",
                            h: "هڪ ڪلاڪ",
                            hh: "%d ڪلاڪ",
                            d: "هڪ ڏينهن",
                            dd: "%d ڏينهن",
                            M: "هڪ مهينو",
                            MM: "%d مهينا",
                            y: "هڪ سال",
                            yy: "%d سال"
                        },
                        preparse: function (e) {
                            return e.replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/,/g, "،")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            490: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("se", {
                        months: "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),
                        monthsShort: "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),
                        weekdays: "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),
                        weekdaysShort: "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
                        weekdaysMin: "s_v_m_g_d_b_L".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "MMMM D. [b.] YYYY",
                            LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
                            LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
                        },
                        calendar: {
                            sameDay: "[otne ti] LT",
                            nextDay: "[ihttin ti] LT",
                            nextWeek: "dddd [ti] LT",
                            lastDay: "[ikte ti] LT",
                            lastWeek: "[ovddit] dddd [ti] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s geažes",
                            past: "maŋit %s",
                            s: "moadde sekunddat",
                            ss: "%d sekunddat",
                            m: "okta minuhta",
                            mm: "%d minuhtat",
                            h: "okta diimmu",
                            hh: "%d diimmut",
                            d: "okta beaivi",
                            dd: "%d beaivvit",
                            M: "okta mánnu",
                            MM: "%d mánut",
                            y: "okta jahki",
                            yy: "%d jagit"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            124: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("si", {
                        months: "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),
                        monthsShort: "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
                        weekdays: "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),
                        weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
                        weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "a h:mm",
                            LTS: "a h:mm:ss",
                            L: "YYYY/MM/DD",
                            LL: "YYYY MMMM D",
                            LLL: "YYYY MMMM D, a h:mm",
                            LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
                        },
                        calendar: {
                            sameDay: "[අද] LT[ට]",
                            nextDay: "[හෙට] LT[ට]",
                            nextWeek: "dddd LT[ට]",
                            lastDay: "[ඊයේ] LT[ට]",
                            lastWeek: "[පසුගිය] dddd LT[ට]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%sකින්",
                            past: "%sකට පෙර",
                            s: "තත්පර කිහිපය",
                            ss: "තත්පර %d",
                            m: "මිනිත්තුව",
                            mm: "මිනිත්තු %d",
                            h: "පැය",
                            hh: "පැය %d",
                            d: "දිනය",
                            dd: "දින %d",
                            M: "මාසය",
                            MM: "මාස %d",
                            y: "වසර",
                            yy: "වසර %d"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
                        ordinal: function (e) {
                            return e + " වැනි"
                        },
                        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
                        isPM: function (e) {
                            return "ප.ව." === e || "පස් වරු" === e
                        },
                        meridiem: function (e, t, a) {
                            return e > 11 ? a ? "ප.ව." : "පස් වරු" : a ? "පෙ.ව." : "පෙර වරු"
                        }
                    })
                }(a(381))
            },
            4249: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"),
                        a = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");

                    function i(e) {
                        return e > 1 && e < 5
                    }

                    function n(e, t, a, n) {
                        var r = e + " ";
                        switch (a) {
                            case "s":
                                return t || n ? "pár sekúnd" : "pár sekundami";
                            case "ss":
                                return t || n ? r + (i(e) ? "sekundy" : "sekúnd") : r + "sekundami";
                            case "m":
                                return t ? "minúta" : n ? "minútu" : "minútou";
                            case "mm":
                                return t || n ? r + (i(e) ? "minúty" : "minút") : r + "minútami";
                            case "h":
                                return t ? "hodina" : n ? "hodinu" : "hodinou";
                            case "hh":
                                return t || n ? r + (i(e) ? "hodiny" : "hodín") : r + "hodinami";
                            case "d":
                                return t || n ? "deň" : "dňom";
                            case "dd":
                                return t || n ? r + (i(e) ? "dni" : "dní") : r + "dňami";
                            case "M":
                                return t || n ? "mesiac" : "mesiacom";
                            case "MM":
                                return t || n ? r + (i(e) ? "mesiace" : "mesiacov") : r + "mesiacmi";
                            case "y":
                                return t || n ? "rok" : "rokom";
                            case "yy":
                                return t || n ? r + (i(e) ? "roky" : "rokov") : r + "rokmi"
                        }
                    }
                    e.defineLocale("sk", {
                        months: t,
                        monthsShort: a,
                        weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
                        weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
                        weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd D. MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[dnes o] LT",
                            nextDay: "[zajtra o] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[v nedeľu o] LT";
                                    case 1:
                                    case 2:
                                        return "[v] dddd [o] LT";
                                    case 3:
                                        return "[v stredu o] LT";
                                    case 4:
                                        return "[vo štvrtok o] LT";
                                    case 5:
                                        return "[v piatok o] LT";
                                    case 6:
                                        return "[v sobotu o] LT"
                                }
                            },
                            lastDay: "[včera o] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[minulú nedeľu o] LT";
                                    case 1:
                                    case 2:
                                        return "[minulý] dddd [o] LT";
                                    case 3:
                                        return "[minulú stredu o] LT";
                                    case 4:
                                    case 5:
                                        return "[minulý] dddd [o] LT";
                                    case 6:
                                        return "[minulú sobotu o] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "pred %s",
                            s: n,
                            ss: n,
                            m: n,
                            mm: n,
                            h: n,
                            hh: n,
                            d: n,
                            dd: n,
                            M: n,
                            MM: n,
                            y: n,
                            yy: n
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4985: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = e + " ";
                        switch (a) {
                            case "s":
                                return t || i ? "nekaj sekund" : "nekaj sekundami";
                            case "ss":
                                return n += 1 === e ? t ? "sekundo" : "sekundi" : 2 === e ? t || i ? "sekundi" : "sekundah" : e < 5 ? t || i ? "sekunde" : "sekundah" : "sekund";
                            case "m":
                                return t ? "ena minuta" : "eno minuto";
                            case "mm":
                                return n += 1 === e ? t ? "minuta" : "minuto" : 2 === e ? t || i ? "minuti" : "minutama" : e < 5 ? t || i ? "minute" : "minutami" : t || i ? "minut" : "minutami";
                            case "h":
                                return t ? "ena ura" : "eno uro";
                            case "hh":
                                return n += 1 === e ? t ? "ura" : "uro" : 2 === e ? t || i ? "uri" : "urama" : e < 5 ? t || i ? "ure" : "urami" : t || i ? "ur" : "urami";
                            case "d":
                                return t || i ? "en dan" : "enim dnem";
                            case "dd":
                                return n += 1 === e ? t || i ? "dan" : "dnem" : 2 === e ? t || i ? "dni" : "dnevoma" : t || i ? "dni" : "dnevi";
                            case "M":
                                return t || i ? "en mesec" : "enim mesecem";
                            case "MM":
                                return n += 1 === e ? t || i ? "mesec" : "mesecem" : 2 === e ? t || i ? "meseca" : "mesecema" : e < 5 ? t || i ? "mesece" : "meseci" : t || i ? "mesecev" : "meseci";
                            case "y":
                                return t || i ? "eno leto" : "enim letom";
                            case "yy":
                                return n += 1 === e ? t || i ? "leto" : "letom" : 2 === e ? t || i ? "leti" : "letoma" : e < 5 ? t || i ? "leta" : "leti" : t || i ? "let" : "leti"
                        }
                    }
                    e.defineLocale("sl", {
                        months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
                        monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
                        weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
                        weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD. MM. YYYY",
                            LL: "D. MMMM YYYY",
                            LLL: "D. MMMM YYYY H:mm",
                            LLLL: "dddd, D. MMMM YYYY H:mm"
                        },
                        calendar: {
                            sameDay: "[danes ob] LT",
                            nextDay: "[jutri ob] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[v] [nedeljo] [ob] LT";
                                    case 3:
                                        return "[v] [sredo] [ob] LT";
                                    case 6:
                                        return "[v] [soboto] [ob] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[v] dddd [ob] LT"
                                }
                            },
                            lastDay: "[včeraj ob] LT",
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[prejšnjo] [nedeljo] [ob] LT";
                                    case 3:
                                        return "[prejšnjo] [sredo] [ob] LT";
                                    case 6:
                                        return "[prejšnjo] [soboto] [ob] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[prejšnji] dddd [ob] LT"
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "čez %s",
                            past: "pred %s",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: t,
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            1104: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("sq", {
                        months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
                        monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
                        weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
                        weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
                        weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
                        weekdaysParseExact: !0,
                        meridiemParse: /PD|MD/,
                        isPM: function (e) {
                            return "M" === e.charAt(0)
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "PD" : "MD"
                        },
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Sot në] LT",
                            nextDay: "[Nesër në] LT",
                            nextWeek: "dddd [në] LT",
                            lastDay: "[Dje në] LT",
                            lastWeek: "dddd [e kaluar në] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "në %s",
                            past: "%s më parë",
                            s: "disa sekonda",
                            ss: "%d sekonda",
                            m: "një minutë",
                            mm: "%d minuta",
                            h: "një orë",
                            hh: "%d orë",
                            d: "një ditë",
                            dd: "%d ditë",
                            M: "një muaj",
                            MM: "%d muaj",
                            y: "një vit",
                            yy: "%d vite"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9915: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        words: {
                            ss: ["секунда", "секунде", "секунди"],
                            m: ["један минут", "једне минуте"],
                            mm: ["минут", "минуте", "минута"],
                            h: ["један сат", "једног сата"],
                            hh: ["сат", "сата", "сати"],
                            dd: ["дан", "дана", "дана"],
                            MM: ["месец", "месеца", "месеци"],
                            yy: ["година", "године", "година"]
                        },
                        correctGrammaticalCase: function (e, t) {
                            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2]
                        },
                        translate: function (e, a, i) {
                            var n = t.words[i];
                            return 1 === i.length ? a ? n[0] : n[1] : e + " " + t.correctGrammaticalCase(e, n)
                        }
                    };
                    e.defineLocale("sr-cyrl", {
                        months: "јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split("_"),
                        monthsShort: "јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "недеља_понедељак_уторак_среда_четвртак_петак_субота".split("_"),
                        weekdaysShort: "нед._пон._уто._сре._чет._пет._суб.".split("_"),
                        weekdaysMin: "не_по_ут_ср_че_пе_су".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "D. M. YYYY.",
                            LL: "D. MMMM YYYY.",
                            LLL: "D. MMMM YYYY. H:mm",
                            LLLL: "dddd, D. MMMM YYYY. H:mm"
                        },
                        calendar: {
                            sameDay: "[данас у] LT",
                            nextDay: "[сутра у] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[у] [недељу] [у] LT";
                                    case 3:
                                        return "[у] [среду] [у] LT";
                                    case 6:
                                        return "[у] [суботу] [у] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[у] dddd [у] LT"
                                }
                            },
                            lastDay: "[јуче у] LT",
                            lastWeek: function () {
                                return ["[прошле] [недеље] [у] LT", "[прошлог] [понедељка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT"][this.day()]
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "за %s",
                            past: "пре %s",
                            s: "неколико секунди",
                            ss: t.translate,
                            m: t.translate,
                            mm: t.translate,
                            h: t.translate,
                            hh: t.translate,
                            d: "дан",
                            dd: t.translate,
                            M: "месец",
                            MM: t.translate,
                            y: "годину",
                            yy: t.translate
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            9131: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        words: {
                            ss: ["sekunda", "sekunde", "sekundi"],
                            m: ["jedan minut", "jedne minute"],
                            mm: ["minut", "minute", "minuta"],
                            h: ["jedan sat", "jednog sata"],
                            hh: ["sat", "sata", "sati"],
                            dd: ["dan", "dana", "dana"],
                            MM: ["mesec", "meseca", "meseci"],
                            yy: ["godina", "godine", "godina"]
                        },
                        correctGrammaticalCase: function (e, t) {
                            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2]
                        },
                        translate: function (e, a, i) {
                            var n = t.words[i];
                            return 1 === i.length ? a ? n[0] : n[1] : e + " " + t.correctGrammaticalCase(e, n)
                        }
                    };
                    e.defineLocale("sr", {
                        months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
                        monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),
                        weekdaysShort: "ned._pon._uto._sre._čet._pet._sub.".split("_"),
                        weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "D. M. YYYY.",
                            LL: "D. MMMM YYYY.",
                            LLL: "D. MMMM YYYY. H:mm",
                            LLLL: "dddd, D. MMMM YYYY. H:mm"
                        },
                        calendar: {
                            sameDay: "[danas u] LT",
                            nextDay: "[sutra u] LT",
                            nextWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                        return "[u] [nedelju] [u] LT";
                                    case 3:
                                        return "[u] [sredu] [u] LT";
                                    case 6:
                                        return "[u] [subotu] [u] LT";
                                    case 1:
                                    case 2:
                                    case 4:
                                    case 5:
                                        return "[u] dddd [u] LT"
                                }
                            },
                            lastDay: "[juče u] LT",
                            lastWeek: function () {
                                return ["[prošle] [nedelje] [u] LT", "[prošlog] [ponedeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "za %s",
                            past: "pre %s",
                            s: "nekoliko sekundi",
                            ss: t.translate,
                            m: t.translate,
                            mm: t.translate,
                            h: t.translate,
                            hh: t.translate,
                            d: "dan",
                            dd: t.translate,
                            M: "mesec",
                            MM: t.translate,
                            y: "godinu",
                            yy: t.translate
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            5893: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ss", {
                        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),
                        monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),
                        weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),
                        weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
                        weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Namuhla nga] LT",
                            nextDay: "[Kusasa nga] LT",
                            nextWeek: "dddd [nga] LT",
                            lastDay: "[Itolo nga] LT",
                            lastWeek: "dddd [leliphelile] [nga] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "nga %s",
                            past: "wenteka nga %s",
                            s: "emizuzwana lomcane",
                            ss: "%d mzuzwana",
                            m: "umzuzu",
                            mm: "%d emizuzu",
                            h: "lihora",
                            hh: "%d emahora",
                            d: "lilanga",
                            dd: "%d emalanga",
                            M: "inyanga",
                            MM: "%d tinyanga",
                            y: "umnyaka",
                            yy: "%d iminyaka"
                        },
                        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
                        meridiem: function (e, t, a) {
                            return e < 11 ? "ekuseni" : e < 15 ? "emini" : e < 19 ? "entsambama" : "ebusuku"
                        },
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "ekuseni" === t ? e : "emini" === t ? e >= 11 ? e : e + 12 : "entsambama" === t || "ebusuku" === t ? 0 === e ? 0 : e + 12 : void 0
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}/,
                        ordinal: "%d",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            8760: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("sv", {
                        months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
                        monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                        weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
                        weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
                        weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY [kl.] HH:mm",
                            LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
                            lll: "D MMM YYYY HH:mm",
                            llll: "ddd D MMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Idag] LT",
                            nextDay: "[Imorgon] LT",
                            lastDay: "[Igår] LT",
                            nextWeek: "[På] dddd LT",
                            lastWeek: "[I] dddd[s] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "om %s",
                            past: "för %s sedan",
                            s: "några sekunder",
                            ss: "%d sekunder",
                            m: "en minut",
                            mm: "%d minuter",
                            h: "en timme",
                            hh: "%d timmar",
                            d: "en dag",
                            dd: "%d dagar",
                            M: "en månad",
                            MM: "%d månader",
                            y: "ett år",
                            yy: "%d år"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? ":e" : 1 === t || 2 === t ? ":a" : ":e")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            1172: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("sw", {
                        months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),
                        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),
                        weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),
                        weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
                        weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "hh:mm A",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[leo saa] LT",
                            nextDay: "[kesho saa] LT",
                            nextWeek: "[wiki ijayo] dddd [saat] LT",
                            lastDay: "[jana] LT",
                            lastWeek: "[wiki iliyopita] dddd [saat] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s baadaye",
                            past: "tokea %s",
                            s: "hivi punde",
                            ss: "sekunde %d",
                            m: "dakika moja",
                            mm: "dakika %d",
                            h: "saa limoja",
                            hh: "masaa %d",
                            d: "siku moja",
                            dd: "siku %d",
                            M: "mwezi mmoja",
                            MM: "miezi %d",
                            y: "mwaka mmoja",
                            yy: "miaka %d"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7333: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                            1: "௧",
                            2: "௨",
                            3: "௩",
                            4: "௪",
                            5: "௫",
                            6: "௬",
                            7: "௭",
                            8: "௮",
                            9: "௯",
                            0: "௦"
                        },
                        a = {
                            "௧": "1",
                            "௨": "2",
                            "௩": "3",
                            "௪": "4",
                            "௫": "5",
                            "௬": "6",
                            "௭": "7",
                            "௮": "8",
                            "௯": "9",
                            "௦": "0"
                        };
                    e.defineLocale("ta", {
                        months: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
                        monthsShort: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
                        weekdays: "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),
                        weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
                        weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, HH:mm",
                            LLLL: "dddd, D MMMM YYYY, HH:mm"
                        },
                        calendar: {
                            sameDay: "[இன்று] LT",
                            nextDay: "[நாளை] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[நேற்று] LT",
                            lastWeek: "[கடந்த வாரம்] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s இல்",
                            past: "%s முன்",
                            s: "ஒரு சில விநாடிகள்",
                            ss: "%d விநாடிகள்",
                            m: "ஒரு நிமிடம்",
                            mm: "%d நிமிடங்கள்",
                            h: "ஒரு மணி நேரம்",
                            hh: "%d மணி நேரம்",
                            d: "ஒரு நாள்",
                            dd: "%d நாட்கள்",
                            M: "ஒரு மாதம்",
                            MM: "%d மாதங்கள்",
                            y: "ஒரு வருடம்",
                            yy: "%d ஆண்டுகள்"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}வது/,
                        ordinal: function (e) {
                            return e + "வது"
                        },
                        preparse: function (e) {
                            return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, (function (e) {
                                return a[e]
                            }))
                        },
                        postformat: function (e) {
                            return e.replace(/\d/g, (function (e) {
                                return t[e]
                            }))
                        },
                        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
                        meridiem: function (e, t, a) {
                            return e < 2 ? " யாமம்" : e < 6 ? " வைகறை" : e < 10 ? " காலை" : e < 14 ? " நண்பகல்" : e < 18 ? " எற்பாடு" : e < 22 ? " மாலை" : " யாமம்"
                        },
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "யாமம்" === t ? e < 2 ? e : e + 12 : "வைகறை" === t || "காலை" === t || "நண்பகல்" === t && e >= 10 ? e : e + 12
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            3110: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("te", {
                        months: "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),
                        monthsShort: "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),
                        weekdaysShort: "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
                        weekdaysMin: "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
                        longDateFormat: {
                            LT: "A h:mm",
                            LTS: "A h:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY, A h:mm",
                            LLLL: "dddd, D MMMM YYYY, A h:mm"
                        },
                        calendar: {
                            sameDay: "[నేడు] LT",
                            nextDay: "[రేపు] LT",
                            nextWeek: "dddd, LT",
                            lastDay: "[నిన్న] LT",
                            lastWeek: "[గత] dddd, LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s లో",
                            past: "%s క్రితం",
                            s: "కొన్ని క్షణాలు",
                            ss: "%d సెకన్లు",
                            m: "ఒక నిమిషం",
                            mm: "%d నిమిషాలు",
                            h: "ఒక గంట",
                            hh: "%d గంటలు",
                            d: "ఒక రోజు",
                            dd: "%d రోజులు",
                            M: "ఒక నెల",
                            MM: "%d నెలలు",
                            y: "ఒక సంవత్సరం",
                            yy: "%d సంవత్సరాలు"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}వ/,
                        ordinal: "%dవ",
                        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "రాత్రి" === t ? e < 4 ? e : e + 12 : "ఉదయం" === t ? e : "మధ్యాహ్నం" === t ? e >= 10 ? e : e + 12 : "సాయంత్రం" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "రాత్రి" : e < 10 ? "ఉదయం" : e < 17 ? "మధ్యాహ్నం" : e < 20 ? "సాయంత్రం" : "రాత్రి"
                        },
                        week: {
                            dow: 0,
                            doy: 6
                        }
                    })
                }(a(381))
            },
            2095: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("tet", {
                        months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),
                        monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
                        weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),
                        weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
                        weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Ohin iha] LT",
                            nextDay: "[Aban iha] LT",
                            nextWeek: "dddd [iha] LT",
                            lastDay: "[Horiseik iha] LT",
                            lastWeek: "dddd [semana kotuk] [iha] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "iha %s",
                            past: "%s liuba",
                            s: "segundu balun",
                            ss: "segundu %d",
                            m: "minutu ida",
                            mm: "minutu %d",
                            h: "oras ida",
                            hh: "oras %d",
                            d: "loron ida",
                            dd: "loron %d",
                            M: "fulan ida",
                            MM: "fulan %d",
                            y: "tinan ida",
                            yy: "tinan %d"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            7321: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        0: "-ум",
                        1: "-ум",
                        2: "-юм",
                        3: "-юм",
                        4: "-ум",
                        5: "-ум",
                        6: "-ум",
                        7: "-ум",
                        8: "-ум",
                        9: "-ум",
                        10: "-ум",
                        12: "-ум",
                        13: "-ум",
                        20: "-ум",
                        30: "-юм",
                        40: "-ум",
                        50: "-ум",
                        60: "-ум",
                        70: "-ум",
                        80: "-ум",
                        90: "-ум",
                        100: "-ум"
                    };
                    e.defineLocale("tg", {
                        months: {
                            format: "январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри".split("_"),
                            standalone: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_")
                        },
                        monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
                        weekdays: "якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),
                        weekdaysShort: "яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),
                        weekdaysMin: "яш_дш_сш_чш_пш_ҷм_шб".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Имрӯз соати] LT",
                            nextDay: "[Фардо соати] LT",
                            lastDay: "[Дирӯз соати] LT",
                            nextWeek: "dddd[и] [ҳафтаи оянда соати] LT",
                            lastWeek: "dddd[и] [ҳафтаи гузашта соати] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "баъди %s",
                            past: "%s пеш",
                            s: "якчанд сония",
                            m: "як дақиқа",
                            mm: "%d дақиқа",
                            h: "як соат",
                            hh: "%d соат",
                            d: "як рӯз",
                            dd: "%d рӯз",
                            M: "як моҳ",
                            MM: "%d моҳ",
                            y: "як сол",
                            yy: "%d сол"
                        },
                        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "шаб" === t ? e < 4 ? e : e + 12 : "субҳ" === t ? e : "рӯз" === t ? e >= 11 ? e : e + 12 : "бегоҳ" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "шаб" : e < 11 ? "субҳ" : e < 16 ? "рӯз" : e < 19 ? "бегоҳ" : "шаб"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
                        ordinal: function (e) {
                            var a = e % 10,
                                i = e >= 100 ? 100 : null;
                            return e + (t[e] || t[a] || t[i])
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            9041: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("th", {
                        months: "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
                        monthsShort: "ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split("_"),
                        monthsParseExact: !0,
                        weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
                        weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
                        weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "H:mm",
                            LTS: "H:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY เวลา H:mm",
                            LLLL: "วันddddที่ D MMMM YYYY เวลา H:mm"
                        },
                        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
                        isPM: function (e) {
                            return "หลังเที่ยง" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "ก่อนเที่ยง" : "หลังเที่ยง"
                        },
                        calendar: {
                            sameDay: "[วันนี้ เวลา] LT",
                            nextDay: "[พรุ่งนี้ เวลา] LT",
                            nextWeek: "dddd[หน้า เวลา] LT",
                            lastDay: "[เมื่อวานนี้ เวลา] LT",
                            lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "อีก %s",
                            past: "%sที่แล้ว",
                            s: "ไม่กี่วินาที",
                            ss: "%d วินาที",
                            m: "1 นาที",
                            mm: "%d นาที",
                            h: "1 ชั่วโมง",
                            hh: "%d ชั่วโมง",
                            d: "1 วัน",
                            dd: "%d วัน",
                            w: "1 สัปดาห์",
                            ww: "%d สัปดาห์",
                            M: "1 เดือน",
                            MM: "%d เดือน",
                            y: "1 ปี",
                            yy: "%d ปี"
                        }
                    })
                }(a(381))
            },
            9005: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        1: "'inji",
                        5: "'inji",
                        8: "'inji",
                        70: "'inji",
                        80: "'inji",
                        2: "'nji",
                        7: "'nji",
                        20: "'nji",
                        50: "'nji",
                        3: "'ünji",
                        4: "'ünji",
                        100: "'ünji",
                        6: "'njy",
                        9: "'unjy",
                        10: "'unjy",
                        30: "'unjy",
                        60: "'ynjy",
                        90: "'ynjy"
                    };
                    e.defineLocale("tk", {
                        months: "Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr".split("_"),
                        monthsShort: "Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek".split("_"),
                        weekdays: "Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe".split("_"),
                        weekdaysShort: "Ýek_Duş_Siş_Çar_Pen_Ann_Şen".split("_"),
                        weekdaysMin: "Ýk_Dş_Sş_Çr_Pn_An_Şn".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[bugün sagat] LT",
                            nextDay: "[ertir sagat] LT",
                            nextWeek: "[indiki] dddd [sagat] LT",
                            lastDay: "[düýn] LT",
                            lastWeek: "[geçen] dddd [sagat] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s soň",
                            past: "%s öň",
                            s: "birnäçe sekunt",
                            m: "bir minut",
                            mm: "%d minut",
                            h: "bir sagat",
                            hh: "%d sagat",
                            d: "bir gün",
                            dd: "%d gün",
                            M: "bir aý",
                            MM: "%d aý",
                            y: "bir ýyl",
                            yy: "%d ýyl"
                        },
                        ordinal: function (e, a) {
                            switch (a) {
                                case "d":
                                case "D":
                                case "Do":
                                case "DD":
                                    return e;
                                default:
                                    if (0 === e) return e + "'unjy";
                                    var i = e % 10,
                                        n = e % 100 - i,
                                        r = e >= 100 ? 100 : null;
                                    return e + (t[i] || t[n] || t[r])
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            5768: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("tl-ph", {
                        months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
                        monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
                        weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
                        weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
                        weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "MM/D/YYYY",
                            LL: "MMMM D, YYYY",
                            LLL: "MMMM D, YYYY HH:mm",
                            LLLL: "dddd, MMMM DD, YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "LT [ngayong araw]",
                            nextDay: "[Bukas ng] LT",
                            nextWeek: "LT [sa susunod na] dddd",
                            lastDay: "LT [kahapon]",
                            lastWeek: "LT [noong nakaraang] dddd",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "sa loob ng %s",
                            past: "%s ang nakalipas",
                            s: "ilang segundo",
                            ss: "%d segundo",
                            m: "isang minuto",
                            mm: "%d minuto",
                            h: "isang oras",
                            hh: "%d oras",
                            d: "isang araw",
                            dd: "%d araw",
                            M: "isang buwan",
                            MM: "%d buwan",
                            y: "isang taon",
                            yy: "%d taon"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}/,
                        ordinal: function (e) {
                            return e
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            9444: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");

                    function a(e) {
                        var t = e;
                        return t = -1 !== e.indexOf("jaj") ? t.slice(0, -3) + "leS" : -1 !== e.indexOf("jar") ? t.slice(0, -3) + "waQ" : -1 !== e.indexOf("DIS") ? t.slice(0, -3) + "nem" : t + " pIq"
                    }

                    function i(e) {
                        var t = e;
                        return t = -1 !== e.indexOf("jaj") ? t.slice(0, -3) + "Hu’" : -1 !== e.indexOf("jar") ? t.slice(0, -3) + "wen" : -1 !== e.indexOf("DIS") ? t.slice(0, -3) + "ben" : t + " ret"
                    }

                    function n(e, t, a, i) {
                        var n = r(e);
                        switch (a) {
                            case "ss":
                                return n + " lup";
                            case "mm":
                                return n + " tup";
                            case "hh":
                                return n + " rep";
                            case "dd":
                                return n + " jaj";
                            case "MM":
                                return n + " jar";
                            case "yy":
                                return n + " DIS"
                        }
                    }

                    function r(e) {
                        var a = Math.floor(e % 1e3 / 100),
                            i = Math.floor(e % 100 / 10),
                            n = e % 10,
                            r = "";
                        return a > 0 && (r += t[a] + "vatlh"), i > 0 && (r += ("" !== r ? " " : "") + t[i] + "maH"), n > 0 && (r += ("" !== r ? " " : "") + t[n]), "" === r ? "pagh" : r
                    }
                    e.defineLocale("tlh", {
                        months: "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),
                        monthsShort: "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),
                        monthsParseExact: !0,
                        weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                        weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                        weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[DaHjaj] LT",
                            nextDay: "[wa’leS] LT",
                            nextWeek: "LLL",
                            lastDay: "[wa’Hu’] LT",
                            lastWeek: "LLL",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: a,
                            past: i,
                            s: "puS lup",
                            ss: n,
                            m: "wa’ tup",
                            mm: n,
                            h: "wa’ rep",
                            hh: n,
                            d: "wa’ jaj",
                            dd: n,
                            M: "wa’ jar",
                            MM: n,
                            y: "wa’ DIS",
                            yy: n
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            2397: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = {
                        1: "'inci",
                        5: "'inci",
                        8: "'inci",
                        70: "'inci",
                        80: "'inci",
                        2: "'nci",
                        7: "'nci",
                        20: "'nci",
                        50: "'nci",
                        3: "'üncü",
                        4: "'üncü",
                        100: "'üncü",
                        6: "'ncı",
                        9: "'uncu",
                        10: "'uncu",
                        30: "'uncu",
                        60: "'ıncı",
                        90: "'ıncı"
                    };
                    e.defineLocale("tr", {
                        months: "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
                        monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
                        weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
                        weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
                        weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
                        meridiem: function (e, t, a) {
                            return e < 12 ? a ? "öö" : "ÖÖ" : a ? "ös" : "ÖS"
                        },
                        meridiemParse: /öö|ÖÖ|ös|ÖS/,
                        isPM: function (e) {
                            return "ös" === e || "ÖS" === e
                        },
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[bugün saat] LT",
                            nextDay: "[yarın saat] LT",
                            nextWeek: "[gelecek] dddd [saat] LT",
                            lastDay: "[dün] LT",
                            lastWeek: "[geçen] dddd [saat] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s sonra",
                            past: "%s önce",
                            s: "birkaç saniye",
                            ss: "%d saniye",
                            m: "bir dakika",
                            mm: "%d dakika",
                            h: "bir saat",
                            hh: "%d saat",
                            d: "bir gün",
                            dd: "%d gün",
                            w: "bir hafta",
                            ww: "%d hafta",
                            M: "bir ay",
                            MM: "%d ay",
                            y: "bir yıl",
                            yy: "%d yıl"
                        },
                        ordinal: function (e, a) {
                            switch (a) {
                                case "d":
                                case "D":
                                case "Do":
                                case "DD":
                                    return e;
                                default:
                                    if (0 === e) return e + "'ıncı";
                                    var i = e % 10,
                                        n = e % 100 - i,
                                        r = e >= 100 ? 100 : null;
                                    return e + (t[i] || t[n] || t[r])
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            8254: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t, a, i) {
                        var n = {
                            s: ["viensas secunds", "'iensas secunds"],
                            ss: [e + " secunds", e + " secunds"],
                            m: ["'n míut", "'iens míut"],
                            mm: [e + " míuts", e + " míuts"],
                            h: ["'n þora", "'iensa þora"],
                            hh: [e + " þoras", e + " þoras"],
                            d: ["'n ziua", "'iensa ziua"],
                            dd: [e + " ziuas", e + " ziuas"],
                            M: ["'n mes", "'iens mes"],
                            MM: [e + " mesen", e + " mesen"],
                            y: ["'n ar", "'iens ar"],
                            yy: [e + " ars", e + " ars"]
                        };
                        return i || t ? n[a][0] : n[a][1]
                    }
                    e.defineLocale("tzl", {
                        months: "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),
                        monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
                        weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),
                        weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
                        weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
                        longDateFormat: {
                            LT: "HH.mm",
                            LTS: "HH.mm.ss",
                            L: "DD.MM.YYYY",
                            LL: "D. MMMM [dallas] YYYY",
                            LLL: "D. MMMM [dallas] YYYY HH.mm",
                            LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
                        },
                        meridiemParse: /d\'o|d\'a/i,
                        isPM: function (e) {
                            return "d'o" === e.toLowerCase()
                        },
                        meridiem: function (e, t, a) {
                            return e > 11 ? a ? "d'o" : "D'O" : a ? "d'a" : "D'A"
                        },
                        calendar: {
                            sameDay: "[oxhi à] LT",
                            nextDay: "[demà à] LT",
                            nextWeek: "dddd [à] LT",
                            lastDay: "[ieiri à] LT",
                            lastWeek: "[sür el] dddd [lasteu à] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "osprei %s",
                            past: "ja%s",
                            s: t,
                            ss: t,
                            m: t,
                            mm: t,
                            h: t,
                            hh: t,
                            d: t,
                            dd: t,
                            M: t,
                            MM: t,
                            y: t,
                            yy: t
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}\./,
                        ordinal: "%d.",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            699: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("tzm-latn", {
                        months: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
                        monthsShort: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
                        weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                        weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                        weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[asdkh g] LT",
                            nextDay: "[aska g] LT",
                            nextWeek: "dddd [g] LT",
                            lastDay: "[assant g] LT",
                            lastWeek: "dddd [g] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "dadkh s yan %s",
                            past: "yan %s",
                            s: "imik",
                            ss: "%d imik",
                            m: "minuḍ",
                            mm: "%d minuḍ",
                            h: "saɛa",
                            hh: "%d tassaɛin",
                            d: "ass",
                            dd: "%d ossan",
                            M: "ayowr",
                            MM: "%d iyyirn",
                            y: "asgas",
                            yy: "%d isgasn"
                        },
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            1106: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("tzm", {
                        months: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
                        monthsShort: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
                        weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                        weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                        weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
                            nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
                            nextWeek: "dddd [ⴴ] LT",
                            lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
                            lastWeek: "dddd [ⴴ] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
                            past: "ⵢⴰⵏ %s",
                            s: "ⵉⵎⵉⴽ",
                            ss: "%d ⵉⵎⵉⴽ",
                            m: "ⵎⵉⵏⵓⴺ",
                            mm: "%d ⵎⵉⵏⵓⴺ",
                            h: "ⵙⴰⵄⴰ",
                            hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
                            d: "ⴰⵙⵙ",
                            dd: "%d oⵙⵙⴰⵏ",
                            M: "ⴰⵢoⵓⵔ",
                            MM: "%d ⵉⵢⵢⵉⵔⵏ",
                            y: "ⴰⵙⴳⴰⵙ",
                            yy: "%d ⵉⵙⴳⴰⵙⵏ"
                        },
                        week: {
                            dow: 6,
                            doy: 12
                        }
                    })
                }(a(381))
            },
            9288: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("ug-cn", {
                        months: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
                        monthsShort: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
                        weekdays: "يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),
                        weekdaysShort: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
                        weekdaysMin: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY-MM-DD",
                            LL: "YYYY-يىلىM-ئاينىڭD-كۈنى",
                            LLL: "YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",
                            LLLL: "dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm"
                        },
                        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "يېرىم كېچە" === t || "سەھەر" === t || "چۈشتىن بۇرۇن" === t ? e : "چۈشتىن كېيىن" === t || "كەچ" === t ? e + 12 : e >= 11 ? e : e + 12
                        },
                        meridiem: function (e, t, a) {
                            var i = 100 * e + t;
                            return i < 600 ? "يېرىم كېچە" : i < 900 ? "سەھەر" : i < 1130 ? "چۈشتىن بۇرۇن" : i < 1230 ? "چۈش" : i < 1800 ? "چۈشتىن كېيىن" : "كەچ"
                        },
                        calendar: {
                            sameDay: "[بۈگۈن سائەت] LT",
                            nextDay: "[ئەتە سائەت] LT",
                            nextWeek: "[كېلەركى] dddd [سائەت] LT",
                            lastDay: "[تۆنۈگۈن] LT",
                            lastWeek: "[ئالدىنقى] dddd [سائەت] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s كېيىن",
                            past: "%s بۇرۇن",
                            s: "نەچچە سېكونت",
                            ss: "%d سېكونت",
                            m: "بىر مىنۇت",
                            mm: "%d مىنۇت",
                            h: "بىر سائەت",
                            hh: "%d سائەت",
                            d: "بىر كۈن",
                            dd: "%d كۈن",
                            M: "بىر ئاي",
                            MM: "%d ئاي",
                            y: "بىر يىل",
                            yy: "%d يىل"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "-كۈنى";
                                case "w":
                                case "W":
                                    return e + "-ھەپتە";
                                default:
                                    return e
                            }
                        },
                        preparse: function (e) {
                            return e.replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/,/g, "،")
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            7691: function (e, t, a) {
                ! function (e) {
                    "use strict";

                    function t(e, t) {
                        var a = e.split("_");
                        return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                    }

                    function a(e, a, i) {
                        return "m" === i ? a ? "хвилина" : "хвилину" : "h" === i ? a ? "година" : "годину" : e + " " + t({
                            ss: a ? "секунда_секунди_секунд" : "секунду_секунди_секунд",
                            mm: a ? "хвилина_хвилини_хвилин" : "хвилину_хвилини_хвилин",
                            hh: a ? "година_години_годин" : "годину_години_годин",
                            dd: "день_дні_днів",
                            MM: "місяць_місяці_місяців",
                            yy: "рік_роки_років"
                        } [i], +e)
                    }

                    function i(e, t) {
                        var a = {
                            nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
                            accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
                            genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")
                        };
                        return !0 === e ? a.nominative.slice(1, 7).concat(a.nominative.slice(0, 1)) : e ? a[/(\[[ВвУу]\]) ?dddd/.test(t) ? "accusative" : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t) ? "genitive" : "nominative"][e.day()] : a.nominative
                    }

                    function n(e) {
                        return function () {
                            return e + "о" + (11 === this.hours() ? "б" : "") + "] LT"
                        }
                    }
                    e.defineLocale("uk", {
                        months: {
                            format: "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),
                            standalone: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")
                        },
                        monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
                        weekdays: i,
                        weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                        weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD.MM.YYYY",
                            LL: "D MMMM YYYY р.",
                            LLL: "D MMMM YYYY р., HH:mm",
                            LLLL: "dddd, D MMMM YYYY р., HH:mm"
                        },
                        calendar: {
                            sameDay: n("[Сьогодні "),
                            nextDay: n("[Завтра "),
                            lastDay: n("[Вчора "),
                            nextWeek: n("[У] dddd ["),
                            lastWeek: function () {
                                switch (this.day()) {
                                    case 0:
                                    case 3:
                                    case 5:
                                    case 6:
                                        return n("[Минулої] dddd [").call(this);
                                    case 1:
                                    case 2:
                                    case 4:
                                        return n("[Минулого] dddd [").call(this)
                                }
                            },
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "за %s",
                            past: "%s тому",
                            s: "декілька секунд",
                            ss: a,
                            m: a,
                            mm: a,
                            h: "годину",
                            hh: a,
                            d: "день",
                            dd: a,
                            M: "місяць",
                            MM: a,
                            y: "рік",
                            yy: a
                        },
                        meridiemParse: /ночі|ранку|дня|вечора/,
                        isPM: function (e) {
                            return /^(дня|вечора)$/.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 4 ? "ночі" : e < 12 ? "ранку" : e < 17 ? "дня" : "вечора"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "M":
                                case "d":
                                case "DDD":
                                case "w":
                                case "W":
                                    return e + "-й";
                                case "D":
                                    return e + "-го";
                                default:
                                    return e
                            }
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            3795: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    var t = ["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"],
                        a = ["اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"];
                    e.defineLocale("ur", {
                        months: t,
                        monthsShort: t,
                        weekdays: a,
                        weekdaysShort: a,
                        weekdaysMin: a,
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd، D MMMM YYYY HH:mm"
                        },
                        meridiemParse: /صبح|شام/,
                        isPM: function (e) {
                            return "شام" === e
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? "صبح" : "شام"
                        },
                        calendar: {
                            sameDay: "[آج بوقت] LT",
                            nextDay: "[کل بوقت] LT",
                            nextWeek: "dddd [بوقت] LT",
                            lastDay: "[گذشتہ روز بوقت] LT",
                            lastWeek: "[گذشتہ] dddd [بوقت] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s بعد",
                            past: "%s قبل",
                            s: "چند سیکنڈ",
                            ss: "%d سیکنڈ",
                            m: "ایک منٹ",
                            mm: "%d منٹ",
                            h: "ایک گھنٹہ",
                            hh: "%d گھنٹے",
                            d: "ایک دن",
                            dd: "%d دن",
                            M: "ایک ماہ",
                            MM: "%d ماہ",
                            y: "ایک سال",
                            yy: "%d سال"
                        },
                        preparse: function (e) {
                            return e.replace(/،/g, ",")
                        },
                        postformat: function (e) {
                            return e.replace(/,/g, "،")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            588: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("uz-latn", {
                        months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),
                        monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),
                        weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),
                        weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
                        weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "D MMMM YYYY, dddd HH:mm"
                        },
                        calendar: {
                            sameDay: "[Bugun soat] LT [da]",
                            nextDay: "[Ertaga] LT [da]",
                            nextWeek: "dddd [kuni soat] LT [da]",
                            lastDay: "[Kecha soat] LT [da]",
                            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "Yaqin %s ichida",
                            past: "Bir necha %s oldin",
                            s: "soniya",
                            ss: "%d soniya",
                            m: "bir daqiqa",
                            mm: "%d daqiqa",
                            h: "bir soat",
                            hh: "%d soat",
                            d: "bir kun",
                            dd: "%d kun",
                            M: "bir oy",
                            MM: "%d oy",
                            y: "bir yil",
                            yy: "%d yil"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            6791: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("uz", {
                        months: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),
                        monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
                        weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
                        weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
                        weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "D MMMM YYYY, dddd HH:mm"
                        },
                        calendar: {
                            sameDay: "[Бугун соат] LT [да]",
                            nextDay: "[Эртага] LT [да]",
                            nextWeek: "dddd [куни соат] LT [да]",
                            lastDay: "[Кеча соат] LT [да]",
                            lastWeek: "[Утган] dddd [куни соат] LT [да]",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "Якин %s ичида",
                            past: "Бир неча %s олдин",
                            s: "фурсат",
                            ss: "%d фурсат",
                            m: "бир дакика",
                            mm: "%d дакика",
                            h: "бир соат",
                            hh: "%d соат",
                            d: "бир кун",
                            dd: "%d кун",
                            M: "бир ой",
                            MM: "%d ой",
                            y: "бир йил",
                            yy: "%d йил"
                        },
                        week: {
                            dow: 1,
                            doy: 7
                        }
                    })
                }(a(381))
            },
            5666: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("vi", {
                        months: "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
                        monthsShort: "Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12".split("_"),
                        monthsParseExact: !0,
                        weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
                        weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                        weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                        weekdaysParseExact: !0,
                        meridiemParse: /sa|ch/i,
                        isPM: function (e) {
                            return /^ch$/i.test(e)
                        },
                        meridiem: function (e, t, a) {
                            return e < 12 ? a ? "sa" : "SA" : a ? "ch" : "CH"
                        },
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM [năm] YYYY",
                            LLL: "D MMMM [năm] YYYY HH:mm",
                            LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
                            l: "DD/M/YYYY",
                            ll: "D MMM YYYY",
                            lll: "D MMM YYYY HH:mm",
                            llll: "ddd, D MMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[Hôm nay lúc] LT",
                            nextDay: "[Ngày mai lúc] LT",
                            nextWeek: "dddd [tuần tới lúc] LT",
                            lastDay: "[Hôm qua lúc] LT",
                            lastWeek: "dddd [tuần trước lúc] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "%s tới",
                            past: "%s trước",
                            s: "vài giây",
                            ss: "%d giây",
                            m: "một phút",
                            mm: "%d phút",
                            h: "một giờ",
                            hh: "%d giờ",
                            d: "một ngày",
                            dd: "%d ngày",
                            w: "một tuần",
                            ww: "%d tuần",
                            M: "một tháng",
                            MM: "%d tháng",
                            y: "một năm",
                            yy: "%d năm"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}/,
                        ordinal: function (e) {
                            return e
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            4378: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("x-pseudo", {
                        months: "J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split("_"),
                        monthsShort: "J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split("_"),
                        monthsParseExact: !0,
                        weekdays: "S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split("_"),
                        weekdaysShort: "S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),
                        weekdaysMin: "S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),
                        weekdaysParseExact: !0,
                        longDateFormat: {
                            LT: "HH:mm",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY HH:mm",
                            LLLL: "dddd, D MMMM YYYY HH:mm"
                        },
                        calendar: {
                            sameDay: "[T~ódá~ý át] LT",
                            nextDay: "[T~ómó~rró~w át] LT",
                            nextWeek: "dddd [át] LT",
                            lastDay: "[Ý~ést~érdá~ý át] LT",
                            lastWeek: "[L~ást] dddd [át] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "í~ñ %s",
                            past: "%s á~gó",
                            s: "á ~féw ~sécó~ñds",
                            ss: "%d s~écóñ~ds",
                            m: "á ~míñ~úté",
                            mm: "%d m~íñú~tés",
                            h: "á~ñ hó~úr",
                            hh: "%d h~óúrs",
                            d: "á ~dáý",
                            dd: "%d d~áýs",
                            M: "á ~móñ~th",
                            MM: "%d m~óñt~hs",
                            y: "á ~ýéár",
                            yy: "%d ý~éárs"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5805: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("yo", {
                        months: "Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split("_"),
                        monthsShort: "Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split("_"),
                        weekdays: "Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),
                        weekdaysShort: "Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),
                        weekdaysMin: "Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),
                        longDateFormat: {
                            LT: "h:mm A",
                            LTS: "h:mm:ss A",
                            L: "DD/MM/YYYY",
                            LL: "D MMMM YYYY",
                            LLL: "D MMMM YYYY h:mm A",
                            LLLL: "dddd, D MMMM YYYY h:mm A"
                        },
                        calendar: {
                            sameDay: "[Ònì ni] LT",
                            nextDay: "[Ọ̀la ni] LT",
                            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
                            lastDay: "[Àna ni] LT",
                            lastWeek: "dddd [Ọsẹ̀ tólọ́] [ni] LT",
                            sameElse: "L"
                        },
                        relativeTime: {
                            future: "ní %s",
                            past: "%s kọjá",
                            s: "ìsẹjú aayá die",
                            ss: "aayá %d",
                            m: "ìsẹjú kan",
                            mm: "ìsẹjú %d",
                            h: "wákati kan",
                            hh: "wákati %d",
                            d: "ọjọ́ kan",
                            dd: "ọjọ́ %d",
                            M: "osù kan",
                            MM: "osù %d",
                            y: "ọdún kan",
                            yy: "ọdún %d"
                        },
                        dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
                        ordinal: "ọjọ́ %d",
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            3839: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("zh-cn", {
                        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                        monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                        weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
                        weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY/MM/DD",
                            LL: "YYYY年M月D日",
                            LLL: "YYYY年M月D日Ah点mm分",
                            LLLL: "YYYY年M月D日ddddAh点mm分",
                            l: "YYYY/M/D",
                            ll: "YYYY年M月D日",
                            lll: "YYYY年M月D日 HH:mm",
                            llll: "YYYY年M月D日dddd HH:mm"
                        },
                        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "下午" === t || "晚上" === t ? e + 12 : e >= 11 ? e : e + 12
                        },
                        meridiem: function (e, t, a) {
                            var i = 100 * e + t;
                            return i < 600 ? "凌晨" : i < 900 ? "早上" : i < 1130 ? "上午" : i < 1230 ? "中午" : i < 1800 ? "下午" : "晚上"
                        },
                        calendar: {
                            sameDay: "[今天]LT",
                            nextDay: "[明天]LT",
                            nextWeek: function (e) {
                                return e.week() !== this.week() ? "[下]dddLT" : "[本]dddLT"
                            },
                            lastDay: "[昨天]LT",
                            lastWeek: function (e) {
                                return this.week() !== e.week() ? "[上]dddLT" : "[本]dddLT"
                            },
                            sameElse: "L"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "日";
                                case "M":
                                    return e + "月";
                                case "w":
                                case "W":
                                    return e + "周";
                                default:
                                    return e
                            }
                        },
                        relativeTime: {
                            future: "%s后",
                            past: "%s前",
                            s: "几秒",
                            ss: "%d 秒",
                            m: "1 分钟",
                            mm: "%d 分钟",
                            h: "1 小时",
                            hh: "%d 小时",
                            d: "1 天",
                            dd: "%d 天",
                            w: "1 周",
                            ww: "%d 周",
                            M: "1 个月",
                            MM: "%d 个月",
                            y: "1 年",
                            yy: "%d 年"
                        },
                        week: {
                            dow: 1,
                            doy: 4
                        }
                    })
                }(a(381))
            },
            5726: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("zh-hk", {
                        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                        monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                        weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                        weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY/MM/DD",
                            LL: "YYYY年M月D日",
                            LLL: "YYYY年M月D日 HH:mm",
                            LLLL: "YYYY年M月D日dddd HH:mm",
                            l: "YYYY/M/D",
                            ll: "YYYY年M月D日",
                            lll: "YYYY年M月D日 HH:mm",
                            llll: "YYYY年M月D日dddd HH:mm"
                        },
                        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            var i = 100 * e + t;
                            return i < 600 ? "凌晨" : i < 900 ? "早上" : i < 1200 ? "上午" : 1200 === i ? "中午" : i < 1800 ? "下午" : "晚上"
                        },
                        calendar: {
                            sameDay: "[今天]LT",
                            nextDay: "[明天]LT",
                            nextWeek: "[下]ddddLT",
                            lastDay: "[昨天]LT",
                            lastWeek: "[上]ddddLT",
                            sameElse: "L"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "日";
                                case "M":
                                    return e + "月";
                                case "w":
                                case "W":
                                    return e + "週";
                                default:
                                    return e
                            }
                        },
                        relativeTime: {
                            future: "%s後",
                            past: "%s前",
                            s: "幾秒",
                            ss: "%d 秒",
                            m: "1 分鐘",
                            mm: "%d 分鐘",
                            h: "1 小時",
                            hh: "%d 小時",
                            d: "1 天",
                            dd: "%d 天",
                            M: "1 個月",
                            MM: "%d 個月",
                            y: "1 年",
                            yy: "%d 年"
                        }
                    })
                }(a(381))
            },
            9913: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("zh-mo", {
                        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                        monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                        weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                        weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "DD/MM/YYYY",
                            LL: "YYYY年M月D日",
                            LLL: "YYYY年M月D日 HH:mm",
                            LLLL: "YYYY年M月D日dddd HH:mm",
                            l: "D/M/YYYY",
                            ll: "YYYY年M月D日",
                            lll: "YYYY年M月D日 HH:mm",
                            llll: "YYYY年M月D日dddd HH:mm"
                        },
                        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            var i = 100 * e + t;
                            return i < 600 ? "凌晨" : i < 900 ? "早上" : i < 1130 ? "上午" : i < 1230 ? "中午" : i < 1800 ? "下午" : "晚上"
                        },
                        calendar: {
                            sameDay: "[今天] LT",
                            nextDay: "[明天] LT",
                            nextWeek: "[下]dddd LT",
                            lastDay: "[昨天] LT",
                            lastWeek: "[上]dddd LT",
                            sameElse: "L"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "日";
                                case "M":
                                    return e + "月";
                                case "w":
                                case "W":
                                    return e + "週";
                                default:
                                    return e
                            }
                        },
                        relativeTime: {
                            future: "%s內",
                            past: "%s前",
                            s: "幾秒",
                            ss: "%d 秒",
                            m: "1 分鐘",
                            mm: "%d 分鐘",
                            h: "1 小時",
                            hh: "%d 小時",
                            d: "1 天",
                            dd: "%d 天",
                            M: "1 個月",
                            MM: "%d 個月",
                            y: "1 年",
                            yy: "%d 年"
                        }
                    })
                }(a(381))
            },
            4152: function (e, t, a) {
                ! function (e) {
                    "use strict";
                    e.defineLocale("zh-tw", {
                        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                        monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                        weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                        weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                        weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                        longDateFormat: {
                            LT: "HH:mm",
                            LTS: "HH:mm:ss",
                            L: "YYYY/MM/DD",
                            LL: "YYYY年M月D日",
                            LLL: "YYYY年M月D日 HH:mm",
                            LLLL: "YYYY年M月D日dddd HH:mm",
                            l: "YYYY/M/D",
                            ll: "YYYY年M月D日",
                            lll: "YYYY年M月D日 HH:mm",
                            llll: "YYYY年M月D日dddd HH:mm"
                        },
                        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                        meridiemHour: function (e, t) {
                            return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                        },
                        meridiem: function (e, t, a) {
                            var i = 100 * e + t;
                            return i < 600 ? "凌晨" : i < 900 ? "早上" : i < 1130 ? "上午" : i < 1230 ? "中午" : i < 1800 ? "下午" : "晚上"
                        },
                        calendar: {
                            sameDay: "[今天] LT",
                            nextDay: "[明天] LT",
                            nextWeek: "[下]dddd LT",
                            lastDay: "[昨天] LT",
                            lastWeek: "[上]dddd LT",
                            sameElse: "L"
                        },
                        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                        ordinal: function (e, t) {
                            switch (t) {
                                case "d":
                                case "D":
                                case "DDD":
                                    return e + "日";
                                case "M":
                                    return e + "月";
                                case "w":
                                case "W":
                                    return e + "週";
                                default:
                                    return e
                            }
                        },
                        relativeTime: {
                            future: "%s後",
                            past: "%s前",
                            s: "幾秒",
                            ss: "%d 秒",
                            m: "1 分鐘",
                            mm: "%d 分鐘",
                            h: "1 小時",
                            hh: "%d 小時",
                            d: "1 天",
                            dd: "%d 天",
                            M: "1 個月",
                            MM: "%d 個月",
                            y: "1 年",
                            yy: "%d 年"
                        }
                    })
                }(a(381))
            },
            6700: (e, t, a) => {
                var i = {
                    "./af": 2786,
                    "./af.js": 2786,
                    "./ar": 867,
                    "./ar-dz": 4130,
                    "./ar-dz.js": 4130,
                    "./ar-kw": 6135,
                    "./ar-kw.js": 6135,
                    "./ar-ly": 6440,
                    "./ar-ly.js": 6440,
                    "./ar-ma": 7702,
                    "./ar-ma.js": 7702,
                    "./ar-sa": 6040,
                    "./ar-sa.js": 6040,
                    "./ar-tn": 7100,
                    "./ar-tn.js": 7100,
                    "./ar.js": 867,
                    "./az": 1083,
                    "./az.js": 1083,
                    "./be": 9808,
                    "./be.js": 9808,
                    "./bg": 8338,
                    "./bg.js": 8338,
                    "./bm": 7438,
                    "./bm.js": 7438,
                    "./bn": 8905,
                    "./bn-bd": 6225,
                    "./bn-bd.js": 6225,
                    "./bn.js": 8905,
                    "./bo": 1560,
                    "./bo.js": 1560,
                    "./br": 1278,
                    "./br.js": 1278,
                    "./bs": 622,
                    "./bs.js": 622,
                    "./ca": 2468,
                    "./ca.js": 2468,
                    "./cs": 5822,
                    "./cs.js": 5822,
                    "./cv": 9794,
                    "./cv.js": 9794,
                    "./cy": 7373,
                    "./cy.js": 7373,
                    "./da": 4780,
                    "./da.js": 4780,
                    "./de": 9740,
                    "./de-at": 4001,
                    "./de-at.js": 4001,
                    "./de-ch": 894,
                    "./de-ch.js": 894,
                    "./de.js": 9740,
                    "./dv": 5300,
                    "./dv.js": 5300,
                    "./el": 837,
                    "./el.js": 837,
                    "./en-au": 8348,
                    "./en-au.js": 8348,
                    "./en-ca": 7925,
                    "./en-ca.js": 7925,
                    "./en-gb": 2243,
                    "./en-gb.js": 2243,
                    "./en-ie": 6436,
                    "./en-ie.js": 6436,
                    "./en-il": 7207,
                    "./en-il.js": 7207,
                    "./en-in": 4175,
                    "./en-in.js": 4175,
                    "./en-nz": 6319,
                    "./en-nz.js": 6319,
                    "./en-sg": 1662,
                    "./en-sg.js": 1662,
                    "./eo": 2915,
                    "./eo.js": 2915,
                    "./es": 5655,
                    "./es-do": 5251,
                    "./es-do.js": 5251,
                    "./es-mx": 6112,
                    "./es-mx.js": 6112,
                    "./es-us": 1146,
                    "./es-us.js": 1146,
                    "./es.js": 5655,
                    "./et": 5603,
                    "./et.js": 5603,
                    "./eu": 7763,
                    "./eu.js": 7763,
                    "./fa": 6959,
                    "./fa.js": 6959,
                    "./fi": 1897,
                    "./fi.js": 1897,
                    "./fil": 2549,
                    "./fil.js": 2549,
                    "./fo": 4694,
                    "./fo.js": 4694,
                    "./fr": 4470,
                    "./fr-ca": 3049,
                    "./fr-ca.js": 3049,
                    "./fr-ch": 2330,
                    "./fr-ch.js": 2330,
                    "./fr.js": 4470,
                    "./fy": 5044,
                    "./fy.js": 5044,
                    "./ga": 9295,
                    "./ga.js": 9295,
                    "./gd": 2101,
                    "./gd.js": 2101,
                    "./gl": 8794,
                    "./gl.js": 8794,
                    "./gom-deva": 7884,
                    "./gom-deva.js": 7884,
                    "./gom-latn": 3168,
                    "./gom-latn.js": 3168,
                    "./gu": 5349,
                    "./gu.js": 5349,
                    "./he": 4206,
                    "./he.js": 4206,
                    "./hi": 94,
                    "./hi.js": 94,
                    "./hr": 316,
                    "./hr.js": 316,
                    "./hu": 2138,
                    "./hu.js": 2138,
                    "./hy-am": 1423,
                    "./hy-am.js": 1423,
                    "./id": 9218,
                    "./id.js": 9218,
                    "./is": 135,
                    "./is.js": 135,
                    "./it": 626,
                    "./it-ch": 150,
                    "./it-ch.js": 150,
                    "./it.js": 626,
                    "./ja": 9183,
                    "./ja.js": 9183,
                    "./jv": 4286,
                    "./jv.js": 4286,
                    "./ka": 2105,
                    "./ka.js": 2105,
                    "./kk": 7772,
                    "./kk.js": 7772,
                    "./km": 8758,
                    "./km.js": 8758,
                    "./kn": 9282,
                    "./kn.js": 9282,
                    "./ko": 3730,
                    "./ko.js": 3730,
                    "./ku": 1408,
                    "./ku.js": 1408,
                    "./ky": 3291,
                    "./ky.js": 3291,
                    "./lb": 6841,
                    "./lb.js": 6841,
                    "./lo": 5466,
                    "./lo.js": 5466,
                    "./lt": 7010,
                    "./lt.js": 7010,
                    "./lv": 7595,
                    "./lv.js": 7595,
                    "./me": 9861,
                    "./me.js": 9861,
                    "./mi": 5493,
                    "./mi.js": 5493,
                    "./mk": 5966,
                    "./mk.js": 5966,
                    "./ml": 7341,
                    "./ml.js": 7341,
                    "./mn": 5115,
                    "./mn.js": 5115,
                    "./mr": 370,
                    "./mr.js": 370,
                    "./ms": 9847,
                    "./ms-my": 1237,
                    "./ms-my.js": 1237,
                    "./ms.js": 9847,
                    "./mt": 2126,
                    "./mt.js": 2126,
                    "./my": 6165,
                    "./my.js": 6165,
                    "./nb": 4924,
                    "./nb.js": 4924,
                    "./ne": 6744,
                    "./ne.js": 6744,
                    "./nl": 3901,
                    "./nl-be": 9814,
                    "./nl-be.js": 9814,
                    "./nl.js": 3901,
                    "./nn": 3877,
                    "./nn.js": 3877,
                    "./oc-lnc": 2135,
                    "./oc-lnc.js": 2135,
                    "./pa-in": 5858,
                    "./pa-in.js": 5858,
                    "./pl": 4495,
                    "./pl.js": 4495,
                    "./pt": 9520,
                    "./pt-br": 7971,
                    "./pt-br.js": 7971,
                    "./pt.js": 9520,
                    "./ro": 6459,
                    "./ro.js": 6459,
                    "./ru": 1793,
                    "./ru.js": 1793,
                    "./sd": 950,
                    "./sd.js": 950,
                    "./se": 490,
                    "./se.js": 490,
                    "./si": 124,
                    "./si.js": 124,
                    "./sk": 4249,
                    "./sk.js": 4249,
                    "./sl": 4985,
                    "./sl.js": 4985,
                    "./sq": 1104,
                    "./sq.js": 1104,
                    "./sr": 9131,
                    "./sr-cyrl": 9915,
                    "./sr-cyrl.js": 9915,
                    "./sr.js": 9131,
                    "./ss": 5893,
                    "./ss.js": 5893,
                    "./sv": 8760,
                    "./sv.js": 8760,
                    "./sw": 1172,
                    "./sw.js": 1172,
                    "./ta": 7333,
                    "./ta.js": 7333,
                    "./te": 3110,
                    "./te.js": 3110,
                    "./tet": 2095,
                    "./tet.js": 2095,
                    "./tg": 7321,
                    "./tg.js": 7321,
                    "./th": 9041,
                    "./th.js": 9041,
                    "./tk": 9005,
                    "./tk.js": 9005,
                    "./tl-ph": 5768,
                    "./tl-ph.js": 5768,
                    "./tlh": 9444,
                    "./tlh.js": 9444,
                    "./tr": 2397,
                    "./tr.js": 2397,
                    "./tzl": 8254,
                    "./tzl.js": 8254,
                    "./tzm": 1106,
                    "./tzm-latn": 699,
                    "./tzm-latn.js": 699,
                    "./tzm.js": 1106,
                    "./ug-cn": 9288,
                    "./ug-cn.js": 9288,
                    "./uk": 7691,
                    "./uk.js": 7691,
                    "./ur": 3795,
                    "./ur.js": 3795,
                    "./uz": 6791,
                    "./uz-latn": 588,
                    "./uz-latn.js": 588,
                    "./uz.js": 6791,
                    "./vi": 5666,
                    "./vi.js": 5666,
                    "./x-pseudo": 4378,
                    "./x-pseudo.js": 4378,
                    "./yo": 5805,
                    "./yo.js": 5805,
                    "./zh-cn": 3839,
                    "./zh-cn.js": 3839,
                    "./zh-hk": 5726,
                    "./zh-hk.js": 5726,
                    "./zh-mo": 9913,
                    "./zh-mo.js": 9913,
                    "./zh-tw": 4152,
                    "./zh-tw.js": 4152
                };

                function n(e) {
                    var t = r(e);
                    return a(t)
                }

                function r(e) {
                    if (!a.o(i, e)) {
                        var t = new Error("Cannot find module '" + e + "'");
                        throw t.code = "MODULE_NOT_FOUND", t
                    }
                    return i[e]
                }
                n.keys = function () {
                    return Object.keys(i)
                }, n.resolve = r, e.exports = n, n.id = 6700
            },
            381: function (e, t, a) {
                (e = a.nmd(e)).exports = function () {
                    "use strict";
                    var t, i;

                    function n() {
                        return t.apply(null, arguments)
                    }

                    function r(e) {
                        t = e
                    }

                    function s(e) {
                        return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e)
                    }

                    function o(e) {
                        return null != e && "[object Object]" === Object.prototype.toString.call(e)
                    }

                    function d(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }

                    function l(e) {
                        if (Object.getOwnPropertyNames) return 0 === Object.getOwnPropertyNames(e).length;
                        var t;
                        for (t in e)
                            if (d(e, t)) return !1;
                        return !0
                    }

                    function c(e) {
                        return void 0 === e
                    }

                    function u(e) {
                        return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e)
                    }

                    function m(e) {
                        return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e)
                    }

                    function _(e, t) {
                        var a, i = [];
                        for (a = 0; a < e.length; ++a) i.push(t(e[a], a));
                        return i
                    }

                    function p(e, t) {
                        for (var a in t) d(t, a) && (e[a] = t[a]);
                        return d(t, "toString") && (e.toString = t.toString), d(t, "valueOf") && (e.valueOf = t.valueOf), e
                    }

                    function h(e, t, a, i) {
                        return Va(e, t, a, i, !0).utc()
                    }

                    function g() {
                        return {
                            empty: !1,
                            unusedTokens: [],
                            unusedInput: [],
                            overflow: -2,
                            charsLeftOver: 0,
                            nullInput: !1,
                            invalidEra: null,
                            invalidMonth: null,
                            invalidFormat: !1,
                            userInvalidated: !1,
                            iso: !1,
                            parsedDateParts: [],
                            era: null,
                            meridiem: null,
                            rfc2822: !1,
                            weekdayMismatch: !1
                        }
                    }

                    function f(e) {
                        return null == e._pf && (e._pf = g()), e._pf
                    }

                    function v(e) {
                        if (null == e._isValid) {
                            var t = f(e),
                                a = i.call(t.parsedDateParts, (function (e) {
                                    return null != e
                                })),
                                n = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && a);
                            if (e._strict && (n = n && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour), null != Object.isFrozen && Object.isFrozen(e)) return n;
                            e._isValid = n
                        }
                        return e._isValid
                    }

                    function y(e) {
                        var t = h(NaN);
                        return null != e ? p(f(t), e) : f(t).userInvalidated = !0, t
                    }
                    i = Array.prototype.some ? Array.prototype.some : function (e) {
                        var t, a = Object(this),
                            i = a.length >>> 0;
                        for (t = 0; t < i; t++)
                            if (t in a && e.call(this, a[t], t, a)) return !0;
                        return !1
                    };
                    var $ = n.momentProperties = [],
                        M = !1;

                    function w(e, t) {
                        var a, i, n;
                        if (c(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), c(t._i) || (e._i = t._i), c(t._f) || (e._f = t._f), c(t._l) || (e._l = t._l), c(t._strict) || (e._strict = t._strict), c(t._tzm) || (e._tzm = t._tzm), c(t._isUTC) || (e._isUTC = t._isUTC), c(t._offset) || (e._offset = t._offset), c(t._pf) || (e._pf = f(t)), c(t._locale) || (e._locale = t._locale), $.length > 0)
                            for (a = 0; a < $.length; a++) c(n = t[i = $[a]]) || (e[i] = n);
                        return e
                    }

                    function b(e) {
                        w(this, e), this._d = new Date(null != e._d ? e._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), !1 === M && (M = !0, n.updateOffset(this), M = !1)
                    }

                    function L(e) {
                        return e instanceof b || null != e && null != e._isAMomentObject
                    }

                    function D(e) {
                        !1 === n.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
                    }

                    function k(e, t) {
                        var a = !0;
                        return p((function () {
                            if (null != n.deprecationHandler && n.deprecationHandler(null, e), a) {
                                var i, r, s, o = [];
                                for (r = 0; r < arguments.length; r++) {
                                    if (i = "", "object" == typeof arguments[r]) {
                                        for (s in i += "\n[" + r + "] ", arguments[0]) d(arguments[0], s) && (i += s + ": " + arguments[0][s] + ", ");
                                        i = i.slice(0, -2)
                                    } else i = arguments[r];
                                    o.push(i)
                                }
                                D(e + "\nArguments: " + Array.prototype.slice.call(o).join("") + "\n" + (new Error).stack), a = !1
                            }
                            return t.apply(this, arguments)
                        }), t)
                    }
                    var Y, T = {};

                    function S(e, t) {
                        null != n.deprecationHandler && n.deprecationHandler(e, t), T[e] || (D(t), T[e] = !0)
                    }

                    function x(e) {
                        return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
                    }

                    function C(e) {
                        var t, a;
                        for (a in e) d(e, a) && (x(t = e[a]) ? this[a] = t : this["_" + a] = t);
                        this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
                    }

                    function I(e, t) {
                        var a, i = p({}, e);
                        for (a in t) d(t, a) && (o(e[a]) && o(t[a]) ? (i[a] = {}, p(i[a], e[a]), p(i[a], t[a])) : null != t[a] ? i[a] = t[a] : delete i[a]);
                        for (a in e) d(e, a) && !d(t, a) && o(e[a]) && (i[a] = p({}, i[a]));
                        return i
                    }

                    function P(e) {
                        null != e && this.set(e)
                    }
                    n.suppressDeprecationWarnings = !1, n.deprecationHandler = null, Y = Object.keys ? Object.keys : function (e) {
                        var t, a = [];
                        for (t in e) d(e, t) && a.push(t);
                        return a
                    };
                    var E = {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    };

                    function j(e, t, a) {
                        var i = this._calendar[e] || this._calendar.sameElse;
                        return x(i) ? i.call(t, a) : i
                    }

                    function F(e, t, a) {
                        var i = "" + Math.abs(e),
                            n = t - i.length;
                        return (e >= 0 ? a ? "+" : "" : "-") + Math.pow(10, Math.max(0, n)).toString().substr(1) + i
                    }
                    var H = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
                        O = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
                        B = {},
                        A = {};

                    function R(e, t, a, i) {
                        var n = i;
                        "string" == typeof i && (n = function () {
                            return this[i]()
                        }), e && (A[e] = n), t && (A[t[0]] = function () {
                            return F(n.apply(this, arguments), t[1], t[2])
                        }), a && (A[a] = function () {
                            return this.localeData().ordinal(n.apply(this, arguments), e)
                        })
                    }

                    function q(e) {
                        return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "")
                    }

                    function U(e) {
                        var t, a, i = e.match(H);
                        for (t = 0, a = i.length; t < a; t++) A[i[t]] ? i[t] = A[i[t]] : i[t] = q(i[t]);
                        return function (t) {
                            var n, r = "";
                            for (n = 0; n < a; n++) r += x(i[n]) ? i[n].call(t, e) : i[n];
                            return r
                        }
                    }

                    function N(e, t) {
                        return e.isValid() ? (t = W(t, e.localeData()), B[t] = B[t] || U(t), B[t](e)) : e.localeData().invalidDate()
                    }

                    function W(e, t) {
                        var a = 5;

                        function i(e) {
                            return t.longDateFormat(e) || e
                        }
                        for (O.lastIndex = 0; a >= 0 && O.test(e);) e = e.replace(O, i), O.lastIndex = 0, a -= 1;
                        return e
                    }
                    var z = {
                        LTS: "h:mm:ss A",
                        LT: "h:mm A",
                        L: "MM/DD/YYYY",
                        LL: "MMMM D, YYYY",
                        LLL: "MMMM D, YYYY h:mm A",
                        LLLL: "dddd, MMMM D, YYYY h:mm A"
                    };

                    function V(e) {
                        var t = this._longDateFormat[e],
                            a = this._longDateFormat[e.toUpperCase()];
                        return t || !a ? t : (this._longDateFormat[e] = a.match(H).map((function (e) {
                            return "MMMM" === e || "MM" === e || "DD" === e || "dddd" === e ? e.slice(1) : e
                        })).join(""), this._longDateFormat[e])
                    }
                    var J = "Invalid date";

                    function G() {
                        return this._invalidDate
                    }
                    var Q = "%d",
                        K = /\d{1,2}/;

                    function Z(e) {
                        return this._ordinal.replace("%d", e)
                    }
                    var X = {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        w: "a week",
                        ww: "%d weeks",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    };

                    function ee(e, t, a, i) {
                        var n = this._relativeTime[a];
                        return x(n) ? n(e, t, a, i) : n.replace(/%d/i, e)
                    }

                    function te(e, t) {
                        var a = this._relativeTime[e > 0 ? "future" : "past"];
                        return x(a) ? a(t) : a.replace(/%s/i, t)
                    }
                    var ae = {};

                    function ie(e, t) {
                        var a = e.toLowerCase();
                        ae[a] = ae[a + "s"] = ae[t] = e
                    }

                    function ne(e) {
                        return "string" == typeof e ? ae[e] || ae[e.toLowerCase()] : void 0
                    }

                    function re(e) {
                        var t, a, i = {};
                        for (a in e) d(e, a) && (t = ne(a)) && (i[t] = e[a]);
                        return i
                    }
                    var se = {};

                    function oe(e, t) {
                        se[e] = t
                    }

                    function de(e) {
                        var t, a = [];
                        for (t in e) d(e, t) && a.push({
                            unit: t,
                            priority: se[t]
                        });
                        return a.sort((function (e, t) {
                            return e.priority - t.priority
                        })), a
                    }

                    function le(e) {
                        return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
                    }

                    function ce(e) {
                        return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
                    }

                    function ue(e) {
                        var t = +e,
                            a = 0;
                        return 0 !== t && isFinite(t) && (a = ce(t)), a
                    }

                    function me(e, t) {
                        return function (a) {
                            return null != a ? (pe(this, e, a), n.updateOffset(this, t), this) : _e(this, e)
                        }
                    }

                    function _e(e, t) {
                        return e.isValid() ? e._d["get" + (e._isUTC ? "UTC" : "") + t]() : NaN
                    }

                    function pe(e, t, a) {
                        e.isValid() && !isNaN(a) && ("FullYear" === t && le(e.year()) && 1 === e.month() && 29 === e.date() ? (a = ue(a), e._d["set" + (e._isUTC ? "UTC" : "") + t](a, e.month(), et(a, e.month()))) : e._d["set" + (e._isUTC ? "UTC" : "") + t](a))
                    }

                    function he(e) {
                        return x(this[e = ne(e)]) ? this[e]() : this
                    }

                    function ge(e, t) {
                        if ("object" == typeof e) {
                            var a, i = de(e = re(e));
                            for (a = 0; a < i.length; a++) this[i[a].unit](e[i[a].unit])
                        } else if (x(this[e = ne(e)])) return this[e](t);
                        return this
                    }
                    var fe, ve = /\d/,
                        ye = /\d\d/,
                        $e = /\d{3}/,
                        Me = /\d{4}/,
                        we = /[+-]?\d{6}/,
                        be = /\d\d?/,
                        Le = /\d\d\d\d?/,
                        De = /\d\d\d\d\d\d?/,
                        ke = /\d{1,3}/,
                        Ye = /\d{1,4}/,
                        Te = /[+-]?\d{1,6}/,
                        Se = /\d+/,
                        xe = /[+-]?\d+/,
                        Ce = /Z|[+-]\d\d:?\d\d/gi,
                        Ie = /Z|[+-]\d\d(?::?\d\d)?/gi,
                        Pe = /[+-]?\d+(\.\d{1,3})?/,
                        Ee = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

                    function je(e, t, a) {
                        fe[e] = x(t) ? t : function (e, i) {
                            return e && a ? a : t
                        }
                    }

                    function Fe(e, t) {
                        return d(fe, e) ? fe[e](t._strict, t._locale) : new RegExp(He(e))
                    }

                    function He(e) {
                        return Oe(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, (function (e, t, a, i, n) {
                            return t || a || i || n
                        })))
                    }

                    function Oe(e) {
                        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
                    }
                    fe = {};
                    var Be = {};

                    function Ae(e, t) {
                        var a, i = t;
                        for ("string" == typeof e && (e = [e]), u(t) && (i = function (e, a) {
                                a[t] = ue(e)
                            }), a = 0; a < e.length; a++) Be[e[a]] = i
                    }

                    function Re(e, t) {
                        Ae(e, (function (e, a, i, n) {
                            i._w = i._w || {}, t(e, i._w, i, n)
                        }))
                    }

                    function qe(e, t, a) {
                        null != t && d(Be, e) && Be[e](t, a._a, a, e)
                    }
                    var Ue, Ne = 0,
                        We = 1,
                        ze = 2,
                        Ve = 3,
                        Je = 4,
                        Ge = 5,
                        Qe = 6,
                        Ke = 7,
                        Ze = 8;

                    function Xe(e, t) {
                        return (e % t + t) % t
                    }

                    function et(e, t) {
                        if (isNaN(e) || isNaN(t)) return NaN;
                        var a = Xe(t, 12);
                        return e += (t - a) / 12, 1 === a ? le(e) ? 29 : 28 : 31 - a % 7 % 2
                    }
                    Ue = Array.prototype.indexOf ? Array.prototype.indexOf : function (e) {
                        var t;
                        for (t = 0; t < this.length; ++t)
                            if (this[t] === e) return t;
                        return -1
                    }, R("M", ["MM", 2], "Mo", (function () {
                        return this.month() + 1
                    })), R("MMM", 0, 0, (function (e) {
                        return this.localeData().monthsShort(this, e)
                    })), R("MMMM", 0, 0, (function (e) {
                        return this.localeData().months(this, e)
                    })), ie("month", "M"), oe("month", 8), je("M", be), je("MM", be, ye), je("MMM", (function (e, t) {
                        return t.monthsShortRegex(e)
                    })), je("MMMM", (function (e, t) {
                        return t.monthsRegex(e)
                    })), Ae(["M", "MM"], (function (e, t) {
                        t[We] = ue(e) - 1
                    })), Ae(["MMM", "MMMM"], (function (e, t, a, i) {
                        var n = a._locale.monthsParse(e, i, a._strict);
                        null != n ? t[We] = n : f(a).invalidMonth = e
                    }));
                    var tt = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                        at = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                        it = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
                        nt = Ee,
                        rt = Ee;

                    function st(e, t) {
                        return e ? s(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || it).test(t) ? "format" : "standalone"][e.month()] : s(this._months) ? this._months : this._months.standalone
                    }

                    function ot(e, t) {
                        return e ? s(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[it.test(t) ? "format" : "standalone"][e.month()] : s(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
                    }

                    function dt(e, t, a) {
                        var i, n, r, s = e.toLocaleLowerCase();
                        if (!this._monthsParse)
                            for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], i = 0; i < 12; ++i) r = h([2e3, i]), this._shortMonthsParse[i] = this.monthsShort(r, "").toLocaleLowerCase(), this._longMonthsParse[i] = this.months(r, "").toLocaleLowerCase();
                        return a ? "MMM" === t ? -1 !== (n = Ue.call(this._shortMonthsParse, s)) ? n : null : -1 !== (n = Ue.call(this._longMonthsParse, s)) ? n : null : "MMM" === t ? -1 !== (n = Ue.call(this._shortMonthsParse, s)) || -1 !== (n = Ue.call(this._longMonthsParse, s)) ? n : null : -1 !== (n = Ue.call(this._longMonthsParse, s)) || -1 !== (n = Ue.call(this._shortMonthsParse, s)) ? n : null
                    }

                    function lt(e, t, a) {
                        var i, n, r;
                        if (this._monthsParseExact) return dt.call(this, e, t, a);
                        for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), i = 0; i < 12; i++) {
                            if (n = h([2e3, i]), a && !this._longMonthsParse[i] && (this._longMonthsParse[i] = new RegExp("^" + this.months(n, "").replace(".", "") + "$", "i"), this._shortMonthsParse[i] = new RegExp("^" + this.monthsShort(n, "").replace(".", "") + "$", "i")), a || this._monthsParse[i] || (r = "^" + this.months(n, "") + "|^" + this.monthsShort(n, ""), this._monthsParse[i] = new RegExp(r.replace(".", ""), "i")), a && "MMMM" === t && this._longMonthsParse[i].test(e)) return i;
                            if (a && "MMM" === t && this._shortMonthsParse[i].test(e)) return i;
                            if (!a && this._monthsParse[i].test(e)) return i
                        }
                    }

                    function ct(e, t) {
                        var a;
                        if (!e.isValid()) return e;
                        if ("string" == typeof t)
                            if (/^\d+$/.test(t)) t = ue(t);
                            else if (!u(t = e.localeData().monthsParse(t))) return e;
                        return a = Math.min(e.date(), et(e.year(), t)), e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, a), e
                    }

                    function ut(e) {
                        return null != e ? (ct(this, e), n.updateOffset(this, !0), this) : _e(this, "Month")
                    }

                    function mt() {
                        return et(this.year(), this.month())
                    }

                    function _t(e) {
                        return this._monthsParseExact ? (d(this, "_monthsRegex") || ht.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (d(this, "_monthsShortRegex") || (this._monthsShortRegex = nt), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
                    }

                    function pt(e) {
                        return this._monthsParseExact ? (d(this, "_monthsRegex") || ht.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (d(this, "_monthsRegex") || (this._monthsRegex = rt), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
                    }

                    function ht() {
                        function e(e, t) {
                            return t.length - e.length
                        }
                        var t, a, i = [],
                            n = [],
                            r = [];
                        for (t = 0; t < 12; t++) a = h([2e3, t]), i.push(this.monthsShort(a, "")), n.push(this.months(a, "")), r.push(this.months(a, "")), r.push(this.monthsShort(a, ""));
                        for (i.sort(e), n.sort(e), r.sort(e), t = 0; t < 12; t++) i[t] = Oe(i[t]), n[t] = Oe(n[t]);
                        for (t = 0; t < 24; t++) r[t] = Oe(r[t]);
                        this._monthsRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + n.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + i.join("|") + ")", "i")
                    }

                    function gt(e) {
                        return le(e) ? 366 : 365
                    }
                    R("Y", 0, 0, (function () {
                        var e = this.year();
                        return e <= 9999 ? F(e, 4) : "+" + e
                    })), R(0, ["YY", 2], 0, (function () {
                        return this.year() % 100
                    })), R(0, ["YYYY", 4], 0, "year"), R(0, ["YYYYY", 5], 0, "year"), R(0, ["YYYYYY", 6, !0], 0, "year"), ie("year", "y"), oe("year", 1), je("Y", xe), je("YY", be, ye), je("YYYY", Ye, Me), je("YYYYY", Te, we), je("YYYYYY", Te, we), Ae(["YYYYY", "YYYYYY"], Ne), Ae("YYYY", (function (e, t) {
                        t[Ne] = 2 === e.length ? n.parseTwoDigitYear(e) : ue(e)
                    })), Ae("YY", (function (e, t) {
                        t[Ne] = n.parseTwoDigitYear(e)
                    })), Ae("Y", (function (e, t) {
                        t[Ne] = parseInt(e, 10)
                    })), n.parseTwoDigitYear = function (e) {
                        return ue(e) + (ue(e) > 68 ? 1900 : 2e3)
                    };
                    var ft = me("FullYear", !0);

                    function vt() {
                        return le(this.year())
                    }

                    function yt(e, t, a, i, n, r, s) {
                        var o;
                        return e < 100 && e >= 0 ? (o = new Date(e + 400, t, a, i, n, r, s), isFinite(o.getFullYear()) && o.setFullYear(e)) : o = new Date(e, t, a, i, n, r, s), o
                    }

                    function $t(e) {
                        var t, a;
                        return e < 100 && e >= 0 ? ((a = Array.prototype.slice.call(arguments))[0] = e + 400, t = new Date(Date.UTC.apply(null, a)), isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)), t
                    }

                    function Mt(e, t, a) {
                        var i = 7 + t - a;
                        return -(7 + $t(e, 0, i).getUTCDay() - t) % 7 + i - 1
                    }

                    function wt(e, t, a, i, n) {
                        var r, s, o = 1 + 7 * (t - 1) + (7 + a - i) % 7 + Mt(e, i, n);
                        return o <= 0 ? s = gt(r = e - 1) + o : o > gt(e) ? (r = e + 1, s = o - gt(e)) : (r = e, s = o), {
                            year: r,
                            dayOfYear: s
                        }
                    }

                    function bt(e, t, a) {
                        var i, n, r = Mt(e.year(), t, a),
                            s = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
                        return s < 1 ? i = s + Lt(n = e.year() - 1, t, a) : s > Lt(e.year(), t, a) ? (i = s - Lt(e.year(), t, a), n = e.year() + 1) : (n = e.year(), i = s), {
                            week: i,
                            year: n
                        }
                    }

                    function Lt(e, t, a) {
                        var i = Mt(e, t, a),
                            n = Mt(e + 1, t, a);
                        return (gt(e) - i + n) / 7
                    }

                    function Dt(e) {
                        return bt(e, this._week.dow, this._week.doy).week
                    }
                    R("w", ["ww", 2], "wo", "week"), R("W", ["WW", 2], "Wo", "isoWeek"), ie("week", "w"), ie("isoWeek", "W"), oe("week", 5), oe("isoWeek", 5), je("w", be), je("ww", be, ye), je("W", be), je("WW", be, ye), Re(["w", "ww", "W", "WW"], (function (e, t, a, i) {
                        t[i.substr(0, 1)] = ue(e)
                    }));
                    var kt = {
                        dow: 0,
                        doy: 6
                    };

                    function Yt() {
                        return this._week.dow
                    }

                    function Tt() {
                        return this._week.doy
                    }

                    function St(e) {
                        var t = this.localeData().week(this);
                        return null == e ? t : this.add(7 * (e - t), "d")
                    }

                    function xt(e) {
                        var t = bt(this, 1, 4).week;
                        return null == e ? t : this.add(7 * (e - t), "d")
                    }

                    function Ct(e, t) {
                        return "string" != typeof e ? e : isNaN(e) ? "number" == typeof (e = t.weekdaysParse(e)) ? e : null : parseInt(e, 10)
                    }

                    function It(e, t) {
                        return "string" == typeof e ? t.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e
                    }

                    function Pt(e, t) {
                        return e.slice(t, 7).concat(e.slice(0, t))
                    }
                    R("d", 0, "do", "day"), R("dd", 0, 0, (function (e) {
                        return this.localeData().weekdaysMin(this, e)
                    })), R("ddd", 0, 0, (function (e) {
                        return this.localeData().weekdaysShort(this, e)
                    })), R("dddd", 0, 0, (function (e) {
                        return this.localeData().weekdays(this, e)
                    })), R("e", 0, 0, "weekday"), R("E", 0, 0, "isoWeekday"), ie("day", "d"), ie("weekday", "e"), ie("isoWeekday", "E"), oe("day", 11), oe("weekday", 11), oe("isoWeekday", 11), je("d", be), je("e", be), je("E", be), je("dd", (function (e, t) {
                        return t.weekdaysMinRegex(e)
                    })), je("ddd", (function (e, t) {
                        return t.weekdaysShortRegex(e)
                    })), je("dddd", (function (e, t) {
                        return t.weekdaysRegex(e)
                    })), Re(["dd", "ddd", "dddd"], (function (e, t, a, i) {
                        var n = a._locale.weekdaysParse(e, i, a._strict);
                        null != n ? t.d = n : f(a).invalidWeekday = e
                    })), Re(["d", "e", "E"], (function (e, t, a, i) {
                        t[i] = ue(e)
                    }));
                    var Et = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                        jt = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        Ft = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        Ht = Ee,
                        Ot = Ee,
                        Bt = Ee;

                    function At(e, t) {
                        var a = s(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? "format" : "standalone"];
                        return !0 === e ? Pt(a, this._week.dow) : e ? a[e.day()] : a
                    }

                    function Rt(e) {
                        return !0 === e ? Pt(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
                    }

                    function qt(e) {
                        return !0 === e ? Pt(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
                    }

                    function Ut(e, t, a) {
                        var i, n, r, s = e.toLocaleLowerCase();
                        if (!this._weekdaysParse)
                            for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], i = 0; i < 7; ++i) r = h([2e3, 1]).day(i), this._minWeekdaysParse[i] = this.weekdaysMin(r, "").toLocaleLowerCase(), this._shortWeekdaysParse[i] = this.weekdaysShort(r, "").toLocaleLowerCase(), this._weekdaysParse[i] = this.weekdays(r, "").toLocaleLowerCase();
                        return a ? "dddd" === t ? -1 !== (n = Ue.call(this._weekdaysParse, s)) ? n : null : "ddd" === t ? -1 !== (n = Ue.call(this._shortWeekdaysParse, s)) ? n : null : -1 !== (n = Ue.call(this._minWeekdaysParse, s)) ? n : null : "dddd" === t ? -1 !== (n = Ue.call(this._weekdaysParse, s)) || -1 !== (n = Ue.call(this._shortWeekdaysParse, s)) || -1 !== (n = Ue.call(this._minWeekdaysParse, s)) ? n : null : "ddd" === t ? -1 !== (n = Ue.call(this._shortWeekdaysParse, s)) || -1 !== (n = Ue.call(this._weekdaysParse, s)) || -1 !== (n = Ue.call(this._minWeekdaysParse, s)) ? n : null : -1 !== (n = Ue.call(this._minWeekdaysParse, s)) || -1 !== (n = Ue.call(this._weekdaysParse, s)) || -1 !== (n = Ue.call(this._shortWeekdaysParse, s)) ? n : null
                    }

                    function Nt(e, t, a) {
                        var i, n, r;
                        if (this._weekdaysParseExact) return Ut.call(this, e, t, a);
                        for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), i = 0; i < 7; i++) {
                            if (n = h([2e3, 1]).day(i), a && !this._fullWeekdaysParse[i] && (this._fullWeekdaysParse[i] = new RegExp("^" + this.weekdays(n, "").replace(".", "\\.?") + "$", "i"), this._shortWeekdaysParse[i] = new RegExp("^" + this.weekdaysShort(n, "").replace(".", "\\.?") + "$", "i"), this._minWeekdaysParse[i] = new RegExp("^" + this.weekdaysMin(n, "").replace(".", "\\.?") + "$", "i")), this._weekdaysParse[i] || (r = "^" + this.weekdays(n, "") + "|^" + this.weekdaysShort(n, "") + "|^" + this.weekdaysMin(n, ""), this._weekdaysParse[i] = new RegExp(r.replace(".", ""), "i")), a && "dddd" === t && this._fullWeekdaysParse[i].test(e)) return i;
                            if (a && "ddd" === t && this._shortWeekdaysParse[i].test(e)) return i;
                            if (a && "dd" === t && this._minWeekdaysParse[i].test(e)) return i;
                            if (!a && this._weekdaysParse[i].test(e)) return i
                        }
                    }

                    function Wt(e) {
                        if (!this.isValid()) return null != e ? this : NaN;
                        var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                        return null != e ? (e = Ct(e, this.localeData()), this.add(e - t, "d")) : t
                    }

                    function zt(e) {
                        if (!this.isValid()) return null != e ? this : NaN;
                        var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
                        return null == e ? t : this.add(e - t, "d")
                    }

                    function Vt(e) {
                        if (!this.isValid()) return null != e ? this : NaN;
                        if (null != e) {
                            var t = It(e, this.localeData());
                            return this.day(this.day() % 7 ? t : t - 7)
                        }
                        return this.day() || 7
                    }

                    function Jt(e) {
                        return this._weekdaysParseExact ? (d(this, "_weekdaysRegex") || Kt.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (d(this, "_weekdaysRegex") || (this._weekdaysRegex = Ht), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
                    }

                    function Gt(e) {
                        return this._weekdaysParseExact ? (d(this, "_weekdaysRegex") || Kt.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (d(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Ot), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
                    }

                    function Qt(e) {
                        return this._weekdaysParseExact ? (d(this, "_weekdaysRegex") || Kt.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (d(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Bt), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
                    }

                    function Kt() {
                        function e(e, t) {
                            return t.length - e.length
                        }
                        var t, a, i, n, r, s = [],
                            o = [],
                            d = [],
                            l = [];
                        for (t = 0; t < 7; t++) a = h([2e3, 1]).day(t), i = Oe(this.weekdaysMin(a, "")), n = Oe(this.weekdaysShort(a, "")), r = Oe(this.weekdays(a, "")), s.push(i), o.push(n), d.push(r), l.push(i), l.push(n), l.push(r);
                        s.sort(e), o.sort(e), d.sort(e), l.sort(e), this._weekdaysRegex = new RegExp("^(" + l.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + d.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + s.join("|") + ")", "i")
                    }

                    function Zt() {
                        return this.hours() % 12 || 12
                    }

                    function Xt() {
                        return this.hours() || 24
                    }

                    function ea(e, t) {
                        R(e, 0, 0, (function () {
                            return this.localeData().meridiem(this.hours(), this.minutes(), t)
                        }))
                    }

                    function ta(e, t) {
                        return t._meridiemParse
                    }

                    function aa(e) {
                        return "p" === (e + "").toLowerCase().charAt(0)
                    }
                    R("H", ["HH", 2], 0, "hour"), R("h", ["hh", 2], 0, Zt), R("k", ["kk", 2], 0, Xt), R("hmm", 0, 0, (function () {
                        return "" + Zt.apply(this) + F(this.minutes(), 2)
                    })), R("hmmss", 0, 0, (function () {
                        return "" + Zt.apply(this) + F(this.minutes(), 2) + F(this.seconds(), 2)
                    })), R("Hmm", 0, 0, (function () {
                        return "" + this.hours() + F(this.minutes(), 2)
                    })), R("Hmmss", 0, 0, (function () {
                        return "" + this.hours() + F(this.minutes(), 2) + F(this.seconds(), 2)
                    })), ea("a", !0), ea("A", !1), ie("hour", "h"), oe("hour", 13), je("a", ta), je("A", ta), je("H", be), je("h", be), je("k", be), je("HH", be, ye), je("hh", be, ye), je("kk", be, ye), je("hmm", Le), je("hmmss", De), je("Hmm", Le), je("Hmmss", De), Ae(["H", "HH"], Ve), Ae(["k", "kk"], (function (e, t, a) {
                        var i = ue(e);
                        t[Ve] = 24 === i ? 0 : i
                    })), Ae(["a", "A"], (function (e, t, a) {
                        a._isPm = a._locale.isPM(e), a._meridiem = e
                    })), Ae(["h", "hh"], (function (e, t, a) {
                        t[Ve] = ue(e), f(a).bigHour = !0
                    })), Ae("hmm", (function (e, t, a) {
                        var i = e.length - 2;
                        t[Ve] = ue(e.substr(0, i)), t[Je] = ue(e.substr(i)), f(a).bigHour = !0
                    })), Ae("hmmss", (function (e, t, a) {
                        var i = e.length - 4,
                            n = e.length - 2;
                        t[Ve] = ue(e.substr(0, i)), t[Je] = ue(e.substr(i, 2)), t[Ge] = ue(e.substr(n)), f(a).bigHour = !0
                    })), Ae("Hmm", (function (e, t, a) {
                        var i = e.length - 2;
                        t[Ve] = ue(e.substr(0, i)), t[Je] = ue(e.substr(i))
                    })), Ae("Hmmss", (function (e, t, a) {
                        var i = e.length - 4,
                            n = e.length - 2;
                        t[Ve] = ue(e.substr(0, i)), t[Je] = ue(e.substr(i, 2)), t[Ge] = ue(e.substr(n))
                    }));
                    var ia = /[ap]\.?m?\.?/i,
                        na = me("Hours", !0);

                    function ra(e, t, a) {
                        return e > 11 ? a ? "pm" : "PM" : a ? "am" : "AM"
                    }
                    var sa, oa = {
                            calendar: E,
                            longDateFormat: z,
                            invalidDate: J,
                            ordinal: Q,
                            dayOfMonthOrdinalParse: K,
                            relativeTime: X,
                            months: tt,
                            monthsShort: at,
                            week: kt,
                            weekdays: Et,
                            weekdaysMin: Ft,
                            weekdaysShort: jt,
                            meridiemParse: ia
                        },
                        da = {},
                        la = {};

                    function ca(e, t) {
                        var a, i = Math.min(e.length, t.length);
                        for (a = 0; a < i; a += 1)
                            if (e[a] !== t[a]) return a;
                        return i
                    }

                    function ua(e) {
                        return e ? e.toLowerCase().replace("_", "-") : e
                    }

                    function ma(e) {
                        for (var t, a, i, n, r = 0; r < e.length;) {
                            for (t = (n = ua(e[r]).split("-")).length, a = (a = ua(e[r + 1])) ? a.split("-") : null; t > 0;) {
                                if (i = _a(n.slice(0, t).join("-"))) return i;
                                if (a && a.length >= t && ca(n, a) >= t - 1) break;
                                t--
                            }
                            r++
                        }
                        return sa
                    }

                    function _a(t) {
                        var i = null;
                        if (void 0 === da[t] && e && e.exports) try {
                            i = sa._abbr, a(6700)("./" + t), pa(i)
                        } catch (e) {
                            da[t] = null
                        }
                        return da[t]
                    }

                    function pa(e, t) {
                        var a;
                        return e && ((a = c(t) ? fa(e) : ha(e, t)) ? sa = a : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")), sa._abbr
                    }

                    function ha(e, t) {
                        if (null !== t) {
                            var a, i = oa;
                            if (t.abbr = e, null != da[e]) S("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), i = da[e]._config;
                            else if (null != t.parentLocale)
                                if (null != da[t.parentLocale]) i = da[t.parentLocale]._config;
                                else {
                                    if (null == (a = _a(t.parentLocale))) return la[t.parentLocale] || (la[t.parentLocale] = []), la[t.parentLocale].push({
                                        name: e,
                                        config: t
                                    }), null;
                                    i = a._config
                                } return da[e] = new P(I(i, t)), la[e] && la[e].forEach((function (e) {
                                ha(e.name, e.config)
                            })), pa(e), da[e]
                        }
                        return delete da[e], null
                    }

                    function ga(e, t) {
                        if (null != t) {
                            var a, i, n = oa;
                            null != da[e] && null != da[e].parentLocale ? da[e].set(I(da[e]._config, t)) : (null != (i = _a(e)) && (n = i._config), t = I(n, t), null == i && (t.abbr = e), (a = new P(t)).parentLocale = da[e], da[e] = a), pa(e)
                        } else null != da[e] && (null != da[e].parentLocale ? (da[e] = da[e].parentLocale, e === pa() && pa(e)) : null != da[e] && delete da[e]);
                        return da[e]
                    }

                    function fa(e) {
                        var t;
                        if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return sa;
                        if (!s(e)) {
                            if (t = _a(e)) return t;
                            e = [e]
                        }
                        return ma(e)
                    }

                    function va() {
                        return Y(da)
                    }

                    function ya(e) {
                        var t, a = e._a;
                        return a && -2 === f(e).overflow && (t = a[We] < 0 || a[We] > 11 ? We : a[ze] < 1 || a[ze] > et(a[Ne], a[We]) ? ze : a[Ve] < 0 || a[Ve] > 24 || 24 === a[Ve] && (0 !== a[Je] || 0 !== a[Ge] || 0 !== a[Qe]) ? Ve : a[Je] < 0 || a[Je] > 59 ? Je : a[Ge] < 0 || a[Ge] > 59 ? Ge : a[Qe] < 0 || a[Qe] > 999 ? Qe : -1, f(e)._overflowDayOfYear && (t < Ne || t > ze) && (t = ze), f(e)._overflowWeeks && -1 === t && (t = Ke), f(e)._overflowWeekday && -1 === t && (t = Ze), f(e).overflow = t), e
                    }
                    var $a = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                        Ma = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                        wa = /Z|[+-]\d\d(?::?\d\d)?/,
                        ba = [
                            ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
                            ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
                            ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
                            ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
                            ["YYYY-DDD", /\d{4}-\d{3}/],
                            ["YYYY-MM", /\d{4}-\d\d/, !1],
                            ["YYYYYYMMDD", /[+-]\d{10}/],
                            ["YYYYMMDD", /\d{8}/],
                            ["GGGG[W]WWE", /\d{4}W\d{3}/],
                            ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
                            ["YYYYDDD", /\d{7}/],
                            ["YYYYMM", /\d{6}/, !1],
                            ["YYYY", /\d{4}/, !1]
                        ],
                        La = [
                            ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
                            ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
                            ["HH:mm:ss", /\d\d:\d\d:\d\d/],
                            ["HH:mm", /\d\d:\d\d/],
                            ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
                            ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
                            ["HHmmss", /\d\d\d\d\d\d/],
                            ["HHmm", /\d\d\d\d/],
                            ["HH", /\d\d/]
                        ],
                        Da = /^\/?Date\((-?\d+)/i,
                        ka = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
                        Ya = {
                            UT: 0,
                            GMT: 0,
                            EDT: -240,
                            EST: -300,
                            CDT: -300,
                            CST: -360,
                            MDT: -360,
                            MST: -420,
                            PDT: -420,
                            PST: -480
                        };

                    function Ta(e) {
                        var t, a, i, n, r, s, o = e._i,
                            d = $a.exec(o) || Ma.exec(o);
                        if (d) {
                            for (f(e).iso = !0, t = 0, a = ba.length; t < a; t++)
                                if (ba[t][1].exec(d[1])) {
                                    n = ba[t][0], i = !1 !== ba[t][2];
                                    break
                                } if (null == n) return void(e._isValid = !1);
                            if (d[3]) {
                                for (t = 0, a = La.length; t < a; t++)
                                    if (La[t][1].exec(d[3])) {
                                        r = (d[2] || " ") + La[t][0];
                                        break
                                    } if (null == r) return void(e._isValid = !1)
                            }
                            if (!i && null != r) return void(e._isValid = !1);
                            if (d[4]) {
                                if (!wa.exec(d[4])) return void(e._isValid = !1);
                                s = "Z"
                            }
                            e._f = n + (r || "") + (s || ""), Aa(e)
                        } else e._isValid = !1
                    }

                    function Sa(e, t, a, i, n, r) {
                        var s = [xa(e), at.indexOf(t), parseInt(a, 10), parseInt(i, 10), parseInt(n, 10)];
                        return r && s.push(parseInt(r, 10)), s
                    }

                    function xa(e) {
                        var t = parseInt(e, 10);
                        return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t
                    }

                    function Ca(e) {
                        return e.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "")
                    }

                    function Ia(e, t, a) {
                        return !e || jt.indexOf(e) === new Date(t[0], t[1], t[2]).getDay() || (f(a).weekdayMismatch = !0, a._isValid = !1, !1)
                    }

                    function Pa(e, t, a) {
                        if (e) return Ya[e];
                        if (t) return 0;
                        var i = parseInt(a, 10),
                            n = i % 100;
                        return (i - n) / 100 * 60 + n
                    }

                    function Ea(e) {
                        var t, a = ka.exec(Ca(e._i));
                        if (a) {
                            if (t = Sa(a[4], a[3], a[2], a[5], a[6], a[7]), !Ia(a[1], t, e)) return;
                            e._a = t, e._tzm = Pa(a[8], a[9], a[10]), e._d = $t.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), f(e).rfc2822 = !0
                        } else e._isValid = !1
                    }

                    function ja(e) {
                        var t = Da.exec(e._i);
                        null === t ? (Ta(e), !1 === e._isValid && (delete e._isValid, Ea(e), !1 === e._isValid && (delete e._isValid, e._strict ? e._isValid = !1 : n.createFromInputFallback(e)))) : e._d = new Date(+t[1])
                    }

                    function Fa(e, t, a) {
                        return null != e ? e : null != t ? t : a
                    }

                    function Ha(e) {
                        var t = new Date(n.now());
                        return e._useUTC ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()] : [t.getFullYear(), t.getMonth(), t.getDate()]
                    }

                    function Oa(e) {
                        var t, a, i, n, r, s = [];
                        if (!e._d) {
                            for (i = Ha(e), e._w && null == e._a[ze] && null == e._a[We] && Ba(e), null != e._dayOfYear && (r = Fa(e._a[Ne], i[Ne]), (e._dayOfYear > gt(r) || 0 === e._dayOfYear) && (f(e)._overflowDayOfYear = !0), a = $t(r, 0, e._dayOfYear), e._a[We] = a.getUTCMonth(), e._a[ze] = a.getUTCDate()), t = 0; t < 3 && null == e._a[t]; ++t) e._a[t] = s[t] = i[t];
                            for (; t < 7; t++) e._a[t] = s[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
                            24 === e._a[Ve] && 0 === e._a[Je] && 0 === e._a[Ge] && 0 === e._a[Qe] && (e._nextDay = !0, e._a[Ve] = 0), e._d = (e._useUTC ? $t : yt).apply(null, s), n = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[Ve] = 24), e._w && void 0 !== e._w.d && e._w.d !== n && (f(e).weekdayMismatch = !0)
                        }
                    }

                    function Ba(e) {
                        var t, a, i, n, r, s, o, d, l;
                        null != (t = e._w).GG || null != t.W || null != t.E ? (r = 1, s = 4, a = Fa(t.GG, e._a[Ne], bt(Ja(), 1, 4).year), i = Fa(t.W, 1), ((n = Fa(t.E, 1)) < 1 || n > 7) && (d = !0)) : (r = e._locale._week.dow, s = e._locale._week.doy, l = bt(Ja(), r, s), a = Fa(t.gg, e._a[Ne], l.year), i = Fa(t.w, l.week), null != t.d ? ((n = t.d) < 0 || n > 6) && (d = !0) : null != t.e ? (n = t.e + r, (t.e < 0 || t.e > 6) && (d = !0)) : n = r), i < 1 || i > Lt(a, r, s) ? f(e)._overflowWeeks = !0 : null != d ? f(e)._overflowWeekday = !0 : (o = wt(a, i, n, r, s), e._a[Ne] = o.year, e._dayOfYear = o.dayOfYear)
                    }

                    function Aa(e) {
                        if (e._f !== n.ISO_8601)
                            if (e._f !== n.RFC_2822) {
                                e._a = [], f(e).empty = !0;
                                var t, a, i, r, s, o, d = "" + e._i,
                                    l = d.length,
                                    c = 0;
                                for (i = W(e._f, e._locale).match(H) || [], t = 0; t < i.length; t++) r = i[t], (a = (d.match(Fe(r, e)) || [])[0]) && ((s = d.substr(0, d.indexOf(a))).length > 0 && f(e).unusedInput.push(s), d = d.slice(d.indexOf(a) + a.length), c += a.length), A[r] ? (a ? f(e).empty = !1 : f(e).unusedTokens.push(r), qe(r, a, e)) : e._strict && !a && f(e).unusedTokens.push(r);
                                f(e).charsLeftOver = l - c, d.length > 0 && f(e).unusedInput.push(d), e._a[Ve] <= 12 && !0 === f(e).bigHour && e._a[Ve] > 0 && (f(e).bigHour = void 0), f(e).parsedDateParts = e._a.slice(0), f(e).meridiem = e._meridiem, e._a[Ve] = Ra(e._locale, e._a[Ve], e._meridiem), null !== (o = f(e).era) && (e._a[Ne] = e._locale.erasConvertYear(o, e._a[Ne])), Oa(e), ya(e)
                            } else Ea(e);
                        else Ta(e)
                    }

                    function Ra(e, t, a) {
                        var i;
                        return null == a ? t : null != e.meridiemHour ? e.meridiemHour(t, a) : null != e.isPM ? ((i = e.isPM(a)) && t < 12 && (t += 12), i || 12 !== t || (t = 0), t) : t
                    }

                    function qa(e) {
                        var t, a, i, n, r, s, o = !1;
                        if (0 === e._f.length) return f(e).invalidFormat = !0, void(e._d = new Date(NaN));
                        for (n = 0; n < e._f.length; n++) r = 0, s = !1, t = w({}, e), null != e._useUTC && (t._useUTC = e._useUTC), t._f = e._f[n], Aa(t), v(t) && (s = !0), r += f(t).charsLeftOver, r += 10 * f(t).unusedTokens.length, f(t).score = r, o ? r < i && (i = r, a = t) : (null == i || r < i || s) && (i = r, a = t, s && (o = !0));
                        p(e, a || t)
                    }

                    function Ua(e) {
                        if (!e._d) {
                            var t = re(e._i),
                                a = void 0 === t.day ? t.date : t.day;
                            e._a = _([t.year, t.month, a, t.hour, t.minute, t.second, t.millisecond], (function (e) {
                                return e && parseInt(e, 10)
                            })), Oa(e)
                        }
                    }

                    function Na(e) {
                        var t = new b(ya(Wa(e)));
                        return t._nextDay && (t.add(1, "d"), t._nextDay = void 0), t
                    }

                    function Wa(e) {
                        var t = e._i,
                            a = e._f;
                        return e._locale = e._locale || fa(e._l), null === t || void 0 === a && "" === t ? y({
                            nullInput: !0
                        }) : ("string" == typeof t && (e._i = t = e._locale.preparse(t)), L(t) ? new b(ya(t)) : (m(t) ? e._d = t : s(a) ? qa(e) : a ? Aa(e) : za(e), v(e) || (e._d = null), e))
                    }

                    function za(e) {
                        var t = e._i;
                        c(t) ? e._d = new Date(n.now()) : m(t) ? e._d = new Date(t.valueOf()) : "string" == typeof t ? ja(e) : s(t) ? (e._a = _(t.slice(0), (function (e) {
                            return parseInt(e, 10)
                        })), Oa(e)) : o(t) ? Ua(e) : u(t) ? e._d = new Date(t) : n.createFromInputFallback(e)
                    }

                    function Va(e, t, a, i, n) {
                        var r = {};
                        return !0 !== t && !1 !== t || (i = t, t = void 0), !0 !== a && !1 !== a || (i = a, a = void 0), (o(e) && l(e) || s(e) && 0 === e.length) && (e = void 0), r._isAMomentObject = !0, r._useUTC = r._isUTC = n, r._l = a, r._i = e, r._f = t, r._strict = i, Na(r)
                    }

                    function Ja(e, t, a, i) {
                        return Va(e, t, a, i, !1)
                    }
                    n.createFromInputFallback = k("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", (function (e) {
                        e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
                    })), n.ISO_8601 = function () {}, n.RFC_2822 = function () {};
                    var Ga = k("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", (function () {
                            var e = Ja.apply(null, arguments);
                            return this.isValid() && e.isValid() ? e < this ? this : e : y()
                        })),
                        Qa = k("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", (function () {
                            var e = Ja.apply(null, arguments);
                            return this.isValid() && e.isValid() ? e > this ? this : e : y()
                        }));

                    function Ka(e, t) {
                        var a, i;
                        if (1 === t.length && s(t[0]) && (t = t[0]), !t.length) return Ja();
                        for (a = t[0], i = 1; i < t.length; ++i) t[i].isValid() && !t[i][e](a) || (a = t[i]);
                        return a
                    }

                    function Za() {
                        return Ka("isBefore", [].slice.call(arguments, 0))
                    }

                    function Xa() {
                        return Ka("isAfter", [].slice.call(arguments, 0))
                    }
                    var ei = function () {
                            return Date.now ? Date.now() : +new Date
                        },
                        ti = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];

                    function ai(e) {
                        var t, a, i = !1;
                        for (t in e)
                            if (d(e, t) && (-1 === Ue.call(ti, t) || null != e[t] && isNaN(e[t]))) return !1;
                        for (a = 0; a < ti.length; ++a)
                            if (e[ti[a]]) {
                                if (i) return !1;
                                parseFloat(e[ti[a]]) !== ue(e[ti[a]]) && (i = !0)
                            } return !0
                    }

                    function ii() {
                        return this._isValid
                    }

                    function ni() {
                        return Yi(NaN)
                    }

                    function ri(e) {
                        var t = re(e),
                            a = t.year || 0,
                            i = t.quarter || 0,
                            n = t.month || 0,
                            r = t.week || t.isoWeek || 0,
                            s = t.day || 0,
                            o = t.hour || 0,
                            d = t.minute || 0,
                            l = t.second || 0,
                            c = t.millisecond || 0;
                        this._isValid = ai(t), this._milliseconds = +c + 1e3 * l + 6e4 * d + 1e3 * o * 60 * 60, this._days = +s + 7 * r, this._months = +n + 3 * i + 12 * a, this._data = {}, this._locale = fa(), this._bubble()
                    }

                    function si(e) {
                        return e instanceof ri
                    }

                    function oi(e) {
                        return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
                    }

                    function di(e, t, a) {
                        var i, n = Math.min(e.length, t.length),
                            r = Math.abs(e.length - t.length),
                            s = 0;
                        for (i = 0; i < n; i++)(a && e[i] !== t[i] || !a && ue(e[i]) !== ue(t[i])) && s++;
                        return s + r
                    }

                    function li(e, t) {
                        R(e, 0, 0, (function () {
                            var e = this.utcOffset(),
                                a = "+";
                            return e < 0 && (e = -e, a = "-"), a + F(~~(e / 60), 2) + t + F(~~e % 60, 2)
                        }))
                    }
                    li("Z", ":"), li("ZZ", ""), je("Z", Ie), je("ZZ", Ie), Ae(["Z", "ZZ"], (function (e, t, a) {
                        a._useUTC = !0, a._tzm = ui(Ie, e)
                    }));
                    var ci = /([\+\-]|\d\d)/gi;

                    function ui(e, t) {
                        var a, i, n = (t || "").match(e);
                        return null === n ? null : 0 === (i = 60 * (a = ((n[n.length - 1] || []) + "").match(ci) || ["-", 0, 0])[1] + ue(a[2])) ? 0 : "+" === a[0] ? i : -i
                    }

                    function mi(e, t) {
                        var a, i;
                        return t._isUTC ? (a = t.clone(), i = (L(e) || m(e) ? e.valueOf() : Ja(e).valueOf()) - a.valueOf(), a._d.setTime(a._d.valueOf() + i), n.updateOffset(a, !1), a) : Ja(e).local()
                    }

                    function _i(e) {
                        return -Math.round(e._d.getTimezoneOffset())
                    }

                    function pi(e, t, a) {
                        var i, r = this._offset || 0;
                        if (!this.isValid()) return null != e ? this : NaN;
                        if (null != e) {
                            if ("string" == typeof e) {
                                if (null === (e = ui(Ie, e))) return this
                            } else Math.abs(e) < 16 && !a && (e *= 60);
                            return !this._isUTC && t && (i = _i(this)), this._offset = e, this._isUTC = !0, null != i && this.add(i, "m"), r !== e && (!t || this._changeInProgress ? Ii(this, Yi(e - r, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, n.updateOffset(this, !0), this._changeInProgress = null)), this
                        }
                        return this._isUTC ? r : _i(this)
                    }

                    function hi(e, t) {
                        return null != e ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset()
                    }

                    function gi(e) {
                        return this.utcOffset(0, e)
                    }

                    function fi(e) {
                        return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(_i(this), "m")), this
                    }

                    function vi() {
                        if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
                        else if ("string" == typeof this._i) {
                            var e = ui(Ce, this._i);
                            null != e ? this.utcOffset(e) : this.utcOffset(0, !0)
                        }
                        return this
                    }

                    function yi(e) {
                        return !!this.isValid() && (e = e ? Ja(e).utcOffset() : 0, (this.utcOffset() - e) % 60 == 0)
                    }

                    function $i() {
                        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
                    }

                    function Mi() {
                        if (!c(this._isDSTShifted)) return this._isDSTShifted;
                        var e, t = {};
                        return w(t, this), (t = Wa(t))._a ? (e = t._isUTC ? h(t._a) : Ja(t._a), this._isDSTShifted = this.isValid() && di(t._a, e.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted
                    }

                    function wi() {
                        return !!this.isValid() && !this._isUTC
                    }

                    function bi() {
                        return !!this.isValid() && this._isUTC
                    }

                    function Li() {
                        return !!this.isValid() && this._isUTC && 0 === this._offset
                    }
                    n.updateOffset = function () {};
                    var Di = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
                        ki = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

                    function Yi(e, t) {
                        var a, i, n, r = e,
                            s = null;
                        return si(e) ? r = {
                            ms: e._milliseconds,
                            d: e._days,
                            M: e._months
                        } : u(e) || !isNaN(+e) ? (r = {}, t ? r[t] = +e : r.milliseconds = +e) : (s = Di.exec(e)) ? (a = "-" === s[1] ? -1 : 1, r = {
                            y: 0,
                            d: ue(s[ze]) * a,
                            h: ue(s[Ve]) * a,
                            m: ue(s[Je]) * a,
                            s: ue(s[Ge]) * a,
                            ms: ue(oi(1e3 * s[Qe])) * a
                        }) : (s = ki.exec(e)) ? (a = "-" === s[1] ? -1 : 1, r = {
                            y: Ti(s[2], a),
                            M: Ti(s[3], a),
                            w: Ti(s[4], a),
                            d: Ti(s[5], a),
                            h: Ti(s[6], a),
                            m: Ti(s[7], a),
                            s: Ti(s[8], a)
                        }) : null == r ? r = {} : "object" == typeof r && ("from" in r || "to" in r) && (n = xi(Ja(r.from), Ja(r.to)), (r = {}).ms = n.milliseconds, r.M = n.months), i = new ri(r), si(e) && d(e, "_locale") && (i._locale = e._locale), si(e) && d(e, "_isValid") && (i._isValid = e._isValid), i
                    }

                    function Ti(e, t) {
                        var a = e && parseFloat(e.replace(",", "."));
                        return (isNaN(a) ? 0 : a) * t
                    }

                    function Si(e, t) {
                        var a = {};
                        return a.months = t.month() - e.month() + 12 * (t.year() - e.year()), e.clone().add(a.months, "M").isAfter(t) && --a.months, a.milliseconds = +t - +e.clone().add(a.months, "M"), a
                    }

                    function xi(e, t) {
                        var a;
                        return e.isValid() && t.isValid() ? (t = mi(t, e), e.isBefore(t) ? a = Si(e, t) : ((a = Si(t, e)).milliseconds = -a.milliseconds, a.months = -a.months), a) : {
                            milliseconds: 0,
                            months: 0
                        }
                    }

                    function Ci(e, t) {
                        return function (a, i) {
                            var n;
                            return null === i || isNaN(+i) || (S(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), n = a, a = i, i = n), Ii(this, Yi(a, i), e), this
                        }
                    }

                    function Ii(e, t, a, i) {
                        var r = t._milliseconds,
                            s = oi(t._days),
                            o = oi(t._months);
                        e.isValid() && (i = null == i || i, o && ct(e, _e(e, "Month") + o * a), s && pe(e, "Date", _e(e, "Date") + s * a), r && e._d.setTime(e._d.valueOf() + r * a), i && n.updateOffset(e, s || o))
                    }
                    Yi.fn = ri.prototype, Yi.invalid = ni;
                    var Pi = Ci(1, "add"),
                        Ei = Ci(-1, "subtract");

                    function ji(e) {
                        return "string" == typeof e || e instanceof String
                    }

                    function Fi(e) {
                        return L(e) || m(e) || ji(e) || u(e) || Oi(e) || Hi(e) || null == e
                    }

                    function Hi(e) {
                        var t, a, i = o(e) && !l(e),
                            n = !1,
                            r = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"];
                        for (t = 0; t < r.length; t += 1) a = r[t], n = n || d(e, a);
                        return i && n
                    }

                    function Oi(e) {
                        var t = s(e),
                            a = !1;
                        return t && (a = 0 === e.filter((function (t) {
                            return !u(t) && ji(e)
                        })).length), t && a
                    }

                    function Bi(e) {
                        var t, a, i = o(e) && !l(e),
                            n = !1,
                            r = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"];
                        for (t = 0; t < r.length; t += 1) a = r[t], n = n || d(e, a);
                        return i && n
                    }

                    function Ai(e, t) {
                        var a = e.diff(t, "days", !0);
                        return a < -6 ? "sameElse" : a < -1 ? "lastWeek" : a < 0 ? "lastDay" : a < 1 ? "sameDay" : a < 2 ? "nextDay" : a < 7 ? "nextWeek" : "sameElse"
                    }

                    function Ri(e, t) {
                        1 === arguments.length && (arguments[0] ? Fi(arguments[0]) ? (e = arguments[0], t = void 0) : Bi(arguments[0]) && (t = arguments[0], e = void 0) : (e = void 0, t = void 0));
                        var a = e || Ja(),
                            i = mi(a, this).startOf("day"),
                            r = n.calendarFormat(this, i) || "sameElse",
                            s = t && (x(t[r]) ? t[r].call(this, a) : t[r]);
                        return this.format(s || this.localeData().calendar(r, this, Ja(a)))
                    }

                    function qi() {
                        return new b(this)
                    }

                    function Ui(e, t) {
                        var a = L(e) ? e : Ja(e);
                        return !(!this.isValid() || !a.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() > a.valueOf() : a.valueOf() < this.clone().startOf(t).valueOf())
                    }

                    function Ni(e, t) {
                        var a = L(e) ? e : Ja(e);
                        return !(!this.isValid() || !a.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() < a.valueOf() : this.clone().endOf(t).valueOf() < a.valueOf())
                    }

                    function Wi(e, t, a, i) {
                        var n = L(e) ? e : Ja(e),
                            r = L(t) ? t : Ja(t);
                        return !!(this.isValid() && n.isValid() && r.isValid()) && ("(" === (i = i || "()")[0] ? this.isAfter(n, a) : !this.isBefore(n, a)) && (")" === i[1] ? this.isBefore(r, a) : !this.isAfter(r, a))
                    }

                    function zi(e, t) {
                        var a, i = L(e) ? e : Ja(e);
                        return !(!this.isValid() || !i.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() === i.valueOf() : (a = i.valueOf(), this.clone().startOf(t).valueOf() <= a && a <= this.clone().endOf(t).valueOf()))
                    }

                    function Vi(e, t) {
                        return this.isSame(e, t) || this.isAfter(e, t)
                    }

                    function Ji(e, t) {
                        return this.isSame(e, t) || this.isBefore(e, t)
                    }

                    function Gi(e, t, a) {
                        var i, n, r;
                        if (!this.isValid()) return NaN;
                        if (!(i = mi(e, this)).isValid()) return NaN;
                        switch (n = 6e4 * (i.utcOffset() - this.utcOffset()), t = ne(t)) {
                            case "year":
                                r = Qi(this, i) / 12;
                                break;
                            case "month":
                                r = Qi(this, i);
                                break;
                            case "quarter":
                                r = Qi(this, i) / 3;
                                break;
                            case "second":
                                r = (this - i) / 1e3;
                                break;
                            case "minute":
                                r = (this - i) / 6e4;
                                break;
                            case "hour":
                                r = (this - i) / 36e5;
                                break;
                            case "day":
                                r = (this - i - n) / 864e5;
                                break;
                            case "week":
                                r = (this - i - n) / 6048e5;
                                break;
                            default:
                                r = this - i
                        }
                        return a ? r : ce(r)
                    }

                    function Qi(e, t) {
                        if (e.date() < t.date()) return -Qi(t, e);
                        var a = 12 * (t.year() - e.year()) + (t.month() - e.month()),
                            i = e.clone().add(a, "months");
                        return -(a + (t - i < 0 ? (t - i) / (i - e.clone().add(a - 1, "months")) : (t - i) / (e.clone().add(a + 1, "months") - i))) || 0
                    }

                    function Ki() {
                        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
                    }

                    function Zi(e) {
                        if (!this.isValid()) return null;
                        var t = !0 !== e,
                            a = t ? this.clone().utc() : this;
                        return a.year() < 0 || a.year() > 9999 ? N(a, t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : x(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", N(a, "Z")) : N(a, t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
                    }

                    function Xi() {
                        if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
                        var e, t, a, i, n = "moment",
                            r = "";
                        return this.isLocal() || (n = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone", r = "Z"), e = "[" + n + '("]', t = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", a = "-MM-DD[T]HH:mm:ss.SSS", i = r + '[")]', this.format(e + t + a + i)
                    }

                    function en(e) {
                        e || (e = this.isUtc() ? n.defaultFormatUtc : n.defaultFormat);
                        var t = N(this, e);
                        return this.localeData().postformat(t)
                    }

                    function tn(e, t) {
                        return this.isValid() && (L(e) && e.isValid() || Ja(e).isValid()) ? Yi({
                            to: this,
                            from: e
                        }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
                    }

                    function an(e) {
                        return this.from(Ja(), e)
                    }

                    function nn(e, t) {
                        return this.isValid() && (L(e) && e.isValid() || Ja(e).isValid()) ? Yi({
                            from: this,
                            to: e
                        }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
                    }

                    function rn(e) {
                        return this.to(Ja(), e)
                    }

                    function sn(e) {
                        var t;
                        return void 0 === e ? this._locale._abbr : (null != (t = fa(e)) && (this._locale = t), this)
                    }
                    n.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", n.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
                    var on = k("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", (function (e) {
                        return void 0 === e ? this.localeData() : this.locale(e)
                    }));

                    function dn() {
                        return this._locale
                    }
                    var ln = 1e3,
                        cn = 60 * ln,
                        un = 60 * cn,
                        mn = 3506328 * un;

                    function _n(e, t) {
                        return (e % t + t) % t
                    }

                    function pn(e, t, a) {
                        return e < 100 && e >= 0 ? new Date(e + 400, t, a) - mn : new Date(e, t, a).valueOf()
                    }

                    function hn(e, t, a) {
                        return e < 100 && e >= 0 ? Date.UTC(e + 400, t, a) - mn : Date.UTC(e, t, a)
                    }

                    function gn(e) {
                        var t, a;
                        if (void 0 === (e = ne(e)) || "millisecond" === e || !this.isValid()) return this;
                        switch (a = this._isUTC ? hn : pn, e) {
                            case "year":
                                t = a(this.year(), 0, 1);
                                break;
                            case "quarter":
                                t = a(this.year(), this.month() - this.month() % 3, 1);
                                break;
                            case "month":
                                t = a(this.year(), this.month(), 1);
                                break;
                            case "week":
                                t = a(this.year(), this.month(), this.date() - this.weekday());
                                break;
                            case "isoWeek":
                                t = a(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                                break;
                            case "day":
                            case "date":
                                t = a(this.year(), this.month(), this.date());
                                break;
                            case "hour":
                                t = this._d.valueOf(), t -= _n(t + (this._isUTC ? 0 : this.utcOffset() * cn), un);
                                break;
                            case "minute":
                                t = this._d.valueOf(), t -= _n(t, cn);
                                break;
                            case "second":
                                t = this._d.valueOf(), t -= _n(t, ln)
                        }
                        return this._d.setTime(t), n.updateOffset(this, !0), this
                    }

                    function fn(e) {
                        var t, a;
                        if (void 0 === (e = ne(e)) || "millisecond" === e || !this.isValid()) return this;
                        switch (a = this._isUTC ? hn : pn, e) {
                            case "year":
                                t = a(this.year() + 1, 0, 1) - 1;
                                break;
                            case "quarter":
                                t = a(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                                break;
                            case "month":
                                t = a(this.year(), this.month() + 1, 1) - 1;
                                break;
                            case "week":
                                t = a(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                                break;
                            case "isoWeek":
                                t = a(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                                break;
                            case "day":
                            case "date":
                                t = a(this.year(), this.month(), this.date() + 1) - 1;
                                break;
                            case "hour":
                                t = this._d.valueOf(), t += un - _n(t + (this._isUTC ? 0 : this.utcOffset() * cn), un) - 1;
                                break;
                            case "minute":
                                t = this._d.valueOf(), t += cn - _n(t, cn) - 1;
                                break;
                            case "second":
                                t = this._d.valueOf(), t += ln - _n(t, ln) - 1
                        }
                        return this._d.setTime(t), n.updateOffset(this, !0), this
                    }

                    function vn() {
                        return this._d.valueOf() - 6e4 * (this._offset || 0)
                    }

                    function yn() {
                        return Math.floor(this.valueOf() / 1e3)
                    }

                    function $n() {
                        return new Date(this.valueOf())
                    }

                    function Mn() {
                        var e = this;
                        return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()]
                    }

                    function wn() {
                        var e = this;
                        return {
                            years: e.year(),
                            months: e.month(),
                            date: e.date(),
                            hours: e.hours(),
                            minutes: e.minutes(),
                            seconds: e.seconds(),
                            milliseconds: e.milliseconds()
                        }
                    }

                    function bn() {
                        return this.isValid() ? this.toISOString() : null
                    }

                    function Ln() {
                        return v(this)
                    }

                    function Dn() {
                        return p({}, f(this))
                    }

                    function kn() {
                        return f(this).overflow
                    }

                    function Yn() {
                        return {
                            input: this._i,
                            format: this._f,
                            locale: this._locale,
                            isUTC: this._isUTC,
                            strict: this._strict
                        }
                    }

                    function Tn(e, t) {
                        var a, i, r, s = this._eras || fa("en")._eras;
                        for (a = 0, i = s.length; a < i; ++a) {
                            switch (typeof s[a].since) {
                                case "string":
                                    r = n(s[a].since).startOf("day"), s[a].since = r.valueOf()
                            }
                            switch (typeof s[a].until) {
                                case "undefined":
                                    s[a].until = 1 / 0;
                                    break;
                                case "string":
                                    r = n(s[a].until).startOf("day").valueOf(), s[a].until = r.valueOf()
                            }
                        }
                        return s
                    }

                    function Sn(e, t, a) {
                        var i, n, r, s, o, d = this.eras();
                        for (e = e.toUpperCase(), i = 0, n = d.length; i < n; ++i)
                            if (r = d[i].name.toUpperCase(), s = d[i].abbr.toUpperCase(), o = d[i].narrow.toUpperCase(), a) switch (t) {
                                case "N":
                                case "NN":
                                case "NNN":
                                    if (s === e) return d[i];
                                    break;
                                case "NNNN":
                                    if (r === e) return d[i];
                                    break;
                                case "NNNNN":
                                    if (o === e) return d[i]
                            } else if ([r, s, o].indexOf(e) >= 0) return d[i]
                    }

                    function xn(e, t) {
                        var a = e.since <= e.until ? 1 : -1;
                        return void 0 === t ? n(e.since).year() : n(e.since).year() + (t - e.offset) * a
                    }

                    function Cn() {
                        var e, t, a, i = this.localeData().eras();
                        for (e = 0, t = i.length; e < t; ++e) {
                            if (a = this.clone().startOf("day").valueOf(), i[e].since <= a && a <= i[e].until) return i[e].name;
                            if (i[e].until <= a && a <= i[e].since) return i[e].name
                        }
                        return ""
                    }

                    function In() {
                        var e, t, a, i = this.localeData().eras();
                        for (e = 0, t = i.length; e < t; ++e) {
                            if (a = this.clone().startOf("day").valueOf(), i[e].since <= a && a <= i[e].until) return i[e].narrow;
                            if (i[e].until <= a && a <= i[e].since) return i[e].narrow
                        }
                        return ""
                    }

                    function Pn() {
                        var e, t, a, i = this.localeData().eras();
                        for (e = 0, t = i.length; e < t; ++e) {
                            if (a = this.clone().startOf("day").valueOf(), i[e].since <= a && a <= i[e].until) return i[e].abbr;
                            if (i[e].until <= a && a <= i[e].since) return i[e].abbr
                        }
                        return ""
                    }

                    function En() {
                        var e, t, a, i, r = this.localeData().eras();
                        for (e = 0, t = r.length; e < t; ++e)
                            if (a = r[e].since <= r[e].until ? 1 : -1, i = this.clone().startOf("day").valueOf(), r[e].since <= i && i <= r[e].until || r[e].until <= i && i <= r[e].since) return (this.year() - n(r[e].since).year()) * a + r[e].offset;
                        return this.year()
                    }

                    function jn(e) {
                        return d(this, "_erasNameRegex") || qn.call(this), e ? this._erasNameRegex : this._erasRegex
                    }

                    function Fn(e) {
                        return d(this, "_erasAbbrRegex") || qn.call(this), e ? this._erasAbbrRegex : this._erasRegex
                    }

                    function Hn(e) {
                        return d(this, "_erasNarrowRegex") || qn.call(this), e ? this._erasNarrowRegex : this._erasRegex
                    }

                    function On(e, t) {
                        return t.erasAbbrRegex(e)
                    }

                    function Bn(e, t) {
                        return t.erasNameRegex(e)
                    }

                    function An(e, t) {
                        return t.erasNarrowRegex(e)
                    }

                    function Rn(e, t) {
                        return t._eraYearOrdinalRegex || Se
                    }

                    function qn() {
                        var e, t, a = [],
                            i = [],
                            n = [],
                            r = [],
                            s = this.eras();
                        for (e = 0, t = s.length; e < t; ++e) i.push(Oe(s[e].name)), a.push(Oe(s[e].abbr)), n.push(Oe(s[e].narrow)), r.push(Oe(s[e].name)), r.push(Oe(s[e].abbr)), r.push(Oe(s[e].narrow));
                        this._erasRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + i.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp("^(" + n.join("|") + ")", "i")
                    }

                    function Un(e, t) {
                        R(0, [e, e.length], 0, t)
                    }

                    function Nn(e) {
                        return Qn.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
                    }

                    function Wn(e) {
                        return Qn.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
                    }

                    function zn() {
                        return Lt(this.year(), 1, 4)
                    }

                    function Vn() {
                        return Lt(this.isoWeekYear(), 1, 4)
                    }

                    function Jn() {
                        var e = this.localeData()._week;
                        return Lt(this.year(), e.dow, e.doy)
                    }

                    function Gn() {
                        var e = this.localeData()._week;
                        return Lt(this.weekYear(), e.dow, e.doy)
                    }

                    function Qn(e, t, a, i, n) {
                        var r;
                        return null == e ? bt(this, i, n).year : (t > (r = Lt(e, i, n)) && (t = r), Kn.call(this, e, t, a, i, n))
                    }

                    function Kn(e, t, a, i, n) {
                        var r = wt(e, t, a, i, n),
                            s = $t(r.year, 0, r.dayOfYear);
                        return this.year(s.getUTCFullYear()), this.month(s.getUTCMonth()), this.date(s.getUTCDate()), this
                    }

                    function Zn(e) {
                        return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
                    }
                    R("N", 0, 0, "eraAbbr"), R("NN", 0, 0, "eraAbbr"), R("NNN", 0, 0, "eraAbbr"), R("NNNN", 0, 0, "eraName"), R("NNNNN", 0, 0, "eraNarrow"), R("y", ["y", 1], "yo", "eraYear"), R("y", ["yy", 2], 0, "eraYear"), R("y", ["yyy", 3], 0, "eraYear"), R("y", ["yyyy", 4], 0, "eraYear"), je("N", On), je("NN", On), je("NNN", On), je("NNNN", Bn), je("NNNNN", An), Ae(["N", "NN", "NNN", "NNNN", "NNNNN"], (function (e, t, a, i) {
                        var n = a._locale.erasParse(e, i, a._strict);
                        n ? f(a).era = n : f(a).invalidEra = e
                    })), je("y", Se), je("yy", Se), je("yyy", Se), je("yyyy", Se), je("yo", Rn), Ae(["y", "yy", "yyy", "yyyy"], Ne), Ae(["yo"], (function (e, t, a, i) {
                        var n;
                        a._locale._eraYearOrdinalRegex && (n = e.match(a._locale._eraYearOrdinalRegex)), a._locale.eraYearOrdinalParse ? t[Ne] = a._locale.eraYearOrdinalParse(e, n) : t[Ne] = parseInt(e, 10)
                    })), R(0, ["gg", 2], 0, (function () {
                        return this.weekYear() % 100
                    })), R(0, ["GG", 2], 0, (function () {
                        return this.isoWeekYear() % 100
                    })), Un("gggg", "weekYear"), Un("ggggg", "weekYear"), Un("GGGG", "isoWeekYear"), Un("GGGGG", "isoWeekYear"), ie("weekYear", "gg"), ie("isoWeekYear", "GG"), oe("weekYear", 1), oe("isoWeekYear", 1), je("G", xe), je("g", xe), je("GG", be, ye), je("gg", be, ye), je("GGGG", Ye, Me), je("gggg", Ye, Me), je("GGGGG", Te, we), je("ggggg", Te, we), Re(["gggg", "ggggg", "GGGG", "GGGGG"], (function (e, t, a, i) {
                        t[i.substr(0, 2)] = ue(e)
                    })), Re(["gg", "GG"], (function (e, t, a, i) {
                        t[i] = n.parseTwoDigitYear(e)
                    })), R("Q", 0, "Qo", "quarter"), ie("quarter", "Q"), oe("quarter", 7), je("Q", ve), Ae("Q", (function (e, t) {
                        t[We] = 3 * (ue(e) - 1)
                    })), R("D", ["DD", 2], "Do", "date"), ie("date", "D"), oe("date", 9), je("D", be), je("DD", be, ye), je("Do", (function (e, t) {
                        return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient
                    })), Ae(["D", "DD"], ze), Ae("Do", (function (e, t) {
                        t[ze] = ue(e.match(be)[0])
                    }));
                    var Xn = me("Date", !0);

                    function er(e) {
                        var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                        return null == e ? t : this.add(e - t, "d")
                    }
                    R("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), ie("dayOfYear", "DDD"), oe("dayOfYear", 4), je("DDD", ke), je("DDDD", $e), Ae(["DDD", "DDDD"], (function (e, t, a) {
                        a._dayOfYear = ue(e)
                    })), R("m", ["mm", 2], 0, "minute"), ie("minute", "m"), oe("minute", 14), je("m", be), je("mm", be, ye), Ae(["m", "mm"], Je);
                    var tr = me("Minutes", !1);
                    R("s", ["ss", 2], 0, "second"), ie("second", "s"), oe("second", 15), je("s", be), je("ss", be, ye), Ae(["s", "ss"], Ge);
                    var ar, ir, nr = me("Seconds", !1);
                    for (R("S", 0, 0, (function () {
                            return ~~(this.millisecond() / 100)
                        })), R(0, ["SS", 2], 0, (function () {
                            return ~~(this.millisecond() / 10)
                        })), R(0, ["SSS", 3], 0, "millisecond"), R(0, ["SSSS", 4], 0, (function () {
                            return 10 * this.millisecond()
                        })), R(0, ["SSSSS", 5], 0, (function () {
                            return 100 * this.millisecond()
                        })), R(0, ["SSSSSS", 6], 0, (function () {
                            return 1e3 * this.millisecond()
                        })), R(0, ["SSSSSSS", 7], 0, (function () {
                            return 1e4 * this.millisecond()
                        })), R(0, ["SSSSSSSS", 8], 0, (function () {
                            return 1e5 * this.millisecond()
                        })), R(0, ["SSSSSSSSS", 9], 0, (function () {
                            return 1e6 * this.millisecond()
                        })), ie("millisecond", "ms"), oe("millisecond", 16), je("S", ke, ve), je("SS", ke, ye), je("SSS", ke, $e), ar = "SSSS"; ar.length <= 9; ar += "S") je(ar, Se);

                    function rr(e, t) {
                        t[Qe] = ue(1e3 * ("0." + e))
                    }
                    for (ar = "S"; ar.length <= 9; ar += "S") Ae(ar, rr);

                    function sr() {
                        return this._isUTC ? "UTC" : ""
                    }

                    function or() {
                        return this._isUTC ? "Coordinated Universal Time" : ""
                    }
                    ir = me("Milliseconds", !1), R("z", 0, 0, "zoneAbbr"), R("zz", 0, 0, "zoneName");
                    var dr = b.prototype;

                    function lr(e) {
                        return Ja(1e3 * e)
                    }

                    function cr() {
                        return Ja.apply(null, arguments).parseZone()
                    }

                    function ur(e) {
                        return e
                    }
                    dr.add = Pi, dr.calendar = Ri, dr.clone = qi, dr.diff = Gi, dr.endOf = fn, dr.format = en, dr.from = tn, dr.fromNow = an, dr.to = nn, dr.toNow = rn, dr.get = he, dr.invalidAt = kn, dr.isAfter = Ui, dr.isBefore = Ni, dr.isBetween = Wi, dr.isSame = zi, dr.isSameOrAfter = Vi, dr.isSameOrBefore = Ji, dr.isValid = Ln, dr.lang = on, dr.locale = sn, dr.localeData = dn, dr.max = Qa, dr.min = Ga, dr.parsingFlags = Dn, dr.set = ge, dr.startOf = gn, dr.subtract = Ei, dr.toArray = Mn, dr.toObject = wn, dr.toDate = $n, dr.toISOString = Zi, dr.inspect = Xi, "undefined" != typeof Symbol && null != Symbol.for && (dr[Symbol.for("nodejs.util.inspect.custom")] = function () {
                        return "Moment<" + this.format() + ">"
                    }), dr.toJSON = bn, dr.toString = Ki, dr.unix = yn, dr.valueOf = vn, dr.creationData = Yn, dr.eraName = Cn, dr.eraNarrow = In, dr.eraAbbr = Pn, dr.eraYear = En, dr.year = ft, dr.isLeapYear = vt, dr.weekYear = Nn, dr.isoWeekYear = Wn, dr.quarter = dr.quarters = Zn, dr.month = ut, dr.daysInMonth = mt, dr.week = dr.weeks = St, dr.isoWeek = dr.isoWeeks = xt, dr.weeksInYear = Jn, dr.weeksInWeekYear = Gn, dr.isoWeeksInYear = zn, dr.isoWeeksInISOWeekYear = Vn, dr.date = Xn, dr.day = dr.days = Wt, dr.weekday = zt, dr.isoWeekday = Vt, dr.dayOfYear = er, dr.hour = dr.hours = na, dr.minute = dr.minutes = tr, dr.second = dr.seconds = nr, dr.millisecond = dr.milliseconds = ir, dr.utcOffset = pi, dr.utc = gi, dr.local = fi, dr.parseZone = vi, dr.hasAlignedHourOffset = yi, dr.isDST = $i, dr.isLocal = wi, dr.isUtcOffset = bi, dr.isUtc = Li, dr.isUTC = Li, dr.zoneAbbr = sr, dr.zoneName = or, dr.dates = k("dates accessor is deprecated. Use date instead.", Xn), dr.months = k("months accessor is deprecated. Use month instead", ut), dr.years = k("years accessor is deprecated. Use year instead", ft), dr.zone = k("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", hi), dr.isDSTShifted = k("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Mi);
                    var mr = P.prototype;

                    function _r(e, t, a, i) {
                        var n = fa(),
                            r = h().set(i, t);
                        return n[a](r, e)
                    }

                    function pr(e, t, a) {
                        if (u(e) && (t = e, e = void 0), e = e || "", null != t) return _r(e, t, a, "month");
                        var i, n = [];
                        for (i = 0; i < 12; i++) n[i] = _r(e, i, a, "month");
                        return n
                    }

                    function hr(e, t, a, i) {
                        "boolean" == typeof e ? (u(t) && (a = t, t = void 0), t = t || "") : (a = t = e, e = !1, u(t) && (a = t, t = void 0), t = t || "");
                        var n, r = fa(),
                            s = e ? r._week.dow : 0,
                            o = [];
                        if (null != a) return _r(t, (a + s) % 7, i, "day");
                        for (n = 0; n < 7; n++) o[n] = _r(t, (n + s) % 7, i, "day");
                        return o
                    }

                    function gr(e, t) {
                        return pr(e, t, "months")
                    }

                    function fr(e, t) {
                        return pr(e, t, "monthsShort")
                    }

                    function vr(e, t, a) {
                        return hr(e, t, a, "weekdays")
                    }

                    function yr(e, t, a) {
                        return hr(e, t, a, "weekdaysShort")
                    }

                    function $r(e, t, a) {
                        return hr(e, t, a, "weekdaysMin")
                    }
                    mr.calendar = j, mr.longDateFormat = V, mr.invalidDate = G, mr.ordinal = Z, mr.preparse = ur, mr.postformat = ur, mr.relativeTime = ee, mr.pastFuture = te, mr.set = C, mr.eras = Tn, mr.erasParse = Sn, mr.erasConvertYear = xn, mr.erasAbbrRegex = Fn, mr.erasNameRegex = jn, mr.erasNarrowRegex = Hn, mr.months = st, mr.monthsShort = ot, mr.monthsParse = lt, mr.monthsRegex = pt, mr.monthsShortRegex = _t, mr.week = Dt, mr.firstDayOfYear = Tt, mr.firstDayOfWeek = Yt, mr.weekdays = At, mr.weekdaysMin = qt, mr.weekdaysShort = Rt, mr.weekdaysParse = Nt, mr.weekdaysRegex = Jt, mr.weekdaysShortRegex = Gt, mr.weekdaysMinRegex = Qt, mr.isPM = aa, mr.meridiem = ra, pa("en", {
                        eras: [{
                            since: "0001-01-01",
                            until: 1 / 0,
                            offset: 1,
                            name: "Anno Domini",
                            narrow: "AD",
                            abbr: "AD"
                        }, {
                            since: "0000-12-31",
                            until: -1 / 0,
                            offset: 1,
                            name: "Before Christ",
                            narrow: "BC",
                            abbr: "BC"
                        }],
                        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                        ordinal: function (e) {
                            var t = e % 10;
                            return e + (1 === ue(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                        }
                    }), n.lang = k("moment.lang is deprecated. Use moment.locale instead.", pa), n.langData = k("moment.langData is deprecated. Use moment.localeData instead.", fa);
                    var Mr = Math.abs;

                    function wr() {
                        var e = this._data;
                        return this._milliseconds = Mr(this._milliseconds), this._days = Mr(this._days), this._months = Mr(this._months), e.milliseconds = Mr(e.milliseconds), e.seconds = Mr(e.seconds), e.minutes = Mr(e.minutes), e.hours = Mr(e.hours), e.months = Mr(e.months), e.years = Mr(e.years), this
                    }

                    function br(e, t, a, i) {
                        var n = Yi(t, a);
                        return e._milliseconds += i * n._milliseconds, e._days += i * n._days, e._months += i * n._months, e._bubble()
                    }

                    function Lr(e, t) {
                        return br(this, e, t, 1)
                    }

                    function Dr(e, t) {
                        return br(this, e, t, -1)
                    }

                    function kr(e) {
                        return e < 0 ? Math.floor(e) : Math.ceil(e)
                    }

                    function Yr() {
                        var e, t, a, i, n, r = this._milliseconds,
                            s = this._days,
                            o = this._months,
                            d = this._data;
                        return r >= 0 && s >= 0 && o >= 0 || r <= 0 && s <= 0 && o <= 0 || (r += 864e5 * kr(Sr(o) + s), s = 0, o = 0), d.milliseconds = r % 1e3, e = ce(r / 1e3), d.seconds = e % 60, t = ce(e / 60), d.minutes = t % 60, a = ce(t / 60), d.hours = a % 24, s += ce(a / 24), o += n = ce(Tr(s)), s -= kr(Sr(n)), i = ce(o / 12), o %= 12, d.days = s, d.months = o, d.years = i, this
                    }

                    function Tr(e) {
                        return 4800 * e / 146097
                    }

                    function Sr(e) {
                        return 146097 * e / 4800
                    }

                    function xr(e) {
                        if (!this.isValid()) return NaN;
                        var t, a, i = this._milliseconds;
                        if ("month" === (e = ne(e)) || "quarter" === e || "year" === e) switch (t = this._days + i / 864e5, a = this._months + Tr(t), e) {
                            case "month":
                                return a;
                            case "quarter":
                                return a / 3;
                            case "year":
                                return a / 12
                        } else switch (t = this._days + Math.round(Sr(this._months)), e) {
                            case "week":
                                return t / 7 + i / 6048e5;
                            case "day":
                                return t + i / 864e5;
                            case "hour":
                                return 24 * t + i / 36e5;
                            case "minute":
                                return 1440 * t + i / 6e4;
                            case "second":
                                return 86400 * t + i / 1e3;
                            case "millisecond":
                                return Math.floor(864e5 * t) + i;
                            default:
                                throw new Error("Unknown unit " + e)
                        }
                    }

                    function Cr() {
                        return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * ue(this._months / 12) : NaN
                    }

                    function Ir(e) {
                        return function () {
                            return this.as(e)
                        }
                    }
                    var Pr = Ir("ms"),
                        Er = Ir("s"),
                        jr = Ir("m"),
                        Fr = Ir("h"),
                        Hr = Ir("d"),
                        Or = Ir("w"),
                        Br = Ir("M"),
                        Ar = Ir("Q"),
                        Rr = Ir("y");

                    function qr() {
                        return Yi(this)
                    }

                    function Ur(e) {
                        return e = ne(e), this.isValid() ? this[e + "s"]() : NaN
                    }

                    function Nr(e) {
                        return function () {
                            return this.isValid() ? this._data[e] : NaN
                        }
                    }
                    var Wr = Nr("milliseconds"),
                        zr = Nr("seconds"),
                        Vr = Nr("minutes"),
                        Jr = Nr("hours"),
                        Gr = Nr("days"),
                        Qr = Nr("months"),
                        Kr = Nr("years");

                    function Zr() {
                        return ce(this.days() / 7)
                    }
                    var Xr = Math.round,
                        es = {
                            ss: 44,
                            s: 45,
                            m: 45,
                            h: 22,
                            d: 26,
                            w: null,
                            M: 11
                        };

                    function ts(e, t, a, i, n) {
                        return n.relativeTime(t || 1, !!a, e, i)
                    }

                    function as(e, t, a, i) {
                        var n = Yi(e).abs(),
                            r = Xr(n.as("s")),
                            s = Xr(n.as("m")),
                            o = Xr(n.as("h")),
                            d = Xr(n.as("d")),
                            l = Xr(n.as("M")),
                            c = Xr(n.as("w")),
                            u = Xr(n.as("y")),
                            m = r <= a.ss && ["s", r] || r < a.s && ["ss", r] || s <= 1 && ["m"] || s < a.m && ["mm", s] || o <= 1 && ["h"] || o < a.h && ["hh", o] || d <= 1 && ["d"] || d < a.d && ["dd", d];
                        return null != a.w && (m = m || c <= 1 && ["w"] || c < a.w && ["ww", c]), (m = m || l <= 1 && ["M"] || l < a.M && ["MM", l] || u <= 1 && ["y"] || ["yy", u])[2] = t, m[3] = +e > 0, m[4] = i, ts.apply(null, m)
                    }

                    function is(e) {
                        return void 0 === e ? Xr : "function" == typeof e && (Xr = e, !0)
                    }

                    function ns(e, t) {
                        return void 0 !== es[e] && (void 0 === t ? es[e] : (es[e] = t, "s" === e && (es.ss = t - 1), !0))
                    }

                    function rs(e, t) {
                        if (!this.isValid()) return this.localeData().invalidDate();
                        var a, i, n = !1,
                            r = es;
                        return "object" == typeof e && (t = e, e = !1), "boolean" == typeof e && (n = e), "object" == typeof t && (r = Object.assign({}, es, t), null != t.s && null == t.ss && (r.ss = t.s - 1)), i = as(this, !n, r, a = this.localeData()), n && (i = a.pastFuture(+this, i)), a.postformat(i)
                    }
                    var ss = Math.abs;

                    function os(e) {
                        return (e > 0) - (e < 0) || +e
                    }

                    function ds() {
                        if (!this.isValid()) return this.localeData().invalidDate();
                        var e, t, a, i, n, r, s, o, d = ss(this._milliseconds) / 1e3,
                            l = ss(this._days),
                            c = ss(this._months),
                            u = this.asSeconds();
                        return u ? (e = ce(d / 60), t = ce(e / 60), d %= 60, e %= 60, a = ce(c / 12), c %= 12, i = d ? d.toFixed(3).replace(/\.?0+$/, "") : "", n = u < 0 ? "-" : "", r = os(this._months) !== os(u) ? "-" : "", s = os(this._days) !== os(u) ? "-" : "", o = os(this._milliseconds) !== os(u) ? "-" : "", n + "P" + (a ? r + a + "Y" : "") + (c ? r + c + "M" : "") + (l ? s + l + "D" : "") + (t || e || d ? "T" : "") + (t ? o + t + "H" : "") + (e ? o + e + "M" : "") + (d ? o + i + "S" : "")) : "P0D"
                    }
                    var ls = ri.prototype;
                    return ls.isValid = ii, ls.abs = wr, ls.add = Lr, ls.subtract = Dr, ls.as = xr, ls.asMilliseconds = Pr, ls.asSeconds = Er, ls.asMinutes = jr, ls.asHours = Fr, ls.asDays = Hr, ls.asWeeks = Or, ls.asMonths = Br, ls.asQuarters = Ar, ls.asYears = Rr, ls.valueOf = Cr, ls._bubble = Yr, ls.clone = qr, ls.get = Ur, ls.milliseconds = Wr, ls.seconds = zr, ls.minutes = Vr, ls.hours = Jr, ls.days = Gr, ls.weeks = Zr, ls.months = Qr, ls.years = Kr, ls.humanize = rs, ls.toISOString = ds, ls.toString = ds, ls.toJSON = ds, ls.locale = sn, ls.localeData = dn, ls.toIsoString = k("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", ds), ls.lang = on, R("X", 0, 0, "unix"), R("x", 0, 0, "valueOf"), je("x", xe), je("X", Pe), Ae("X", (function (e, t, a) {
                        a._d = new Date(1e3 * parseFloat(e))
                    })), Ae("x", (function (e, t, a) {
                        a._d = new Date(ue(e))
                    })), n.version = "2.29.1", r(Ja), n.fn = dr, n.min = Za, n.max = Xa, n.now = ei, n.utc = h, n.unix = lr, n.months = gr, n.isDate = m, n.locale = pa, n.invalid = y, n.duration = Yi, n.isMoment = L, n.weekdays = vr, n.parseZone = cr, n.localeData = fa, n.isDuration = si, n.monthsShort = fr, n.weekdaysMin = $r, n.defineLocale = ha, n.updateLocale = ga, n.locales = va, n.weekdaysShort = yr, n.normalizeUnits = ne, n.relativeTimeRounding = is, n.relativeTimeThreshold = ns, n.calendarFormat = Ai, n.prototype = dr, n.HTML5_FMT = {
                        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                        DATE: "YYYY-MM-DD",
                        TIME: "HH:mm",
                        TIME_SECONDS: "HH:mm:ss",
                        TIME_MS: "HH:mm:ss.SSS",
                        WEEK: "GGGG-[W]WW",
                        MONTH: "YYYY-MM"
                    }, n
                }()
            }
        },
        __webpack_module_cache__ = {},
        deferred;

    function __webpack_require__(e) {
        var t = __webpack_module_cache__[e];
        if (void 0 !== t) return t.exports;
        var a = __webpack_module_cache__[e] = {
            id: e,
            loaded: !1,
            exports: {}
        };
        return __webpack_modules__[e].call(a.exports, a, a.exports, __webpack_require__), a.loaded = !0, a.exports
    }
    __webpack_require__.m = __webpack_modules__, deferred = [], __webpack_require__.O = (e, t, a, i) => {
        if (!t) {
            var n = 1 / 0;
            for (o = 0; o < deferred.length; o++) {
                for (var [t, a, i] = deferred[o], r = !0, s = 0; s < t.length; s++)(!1 & i || n >= i) && Object.keys(__webpack_require__.O).every((e => __webpack_require__.O[e](t[s]))) ? t.splice(s--, 1) : (r = !1, i < n && (n = i));
                r && (deferred.splice(o--, 1), e = a())
            }
            return e
        }
        i = i || 0;
        for (var o = deferred.length; o > 0 && deferred[o - 1][2] > i; o--) deferred[o] = deferred[o - 1];
        deferred[o] = [t, a, i]
    }, __webpack_require__.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return __webpack_require__.d(t, {
            a: t
        }), t
    }, __webpack_require__.d = (e, t) => {
        for (var a in t) __webpack_require__.o(t, a) && !__webpack_require__.o(e, a) && Object.defineProperty(e, a, {
            enumerable: !0,
            get: t[a]
        })
    }, __webpack_require__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), __webpack_require__.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, __webpack_require__.nmd = e => (e.paths = [], e.children || (e.children = []), e), (() => {
        var e = {
            589: 0,
            278: 0,
            961: 0,
            477: 0,
            126: 0,
            349: 0,
            877: 0,
            134: 0,
            346: 0
        };
        __webpack_require__.O.j = t => 0 === e[t];
        var t = (t, a) => {
                var i, n, [r, s, o] = a,
                    d = 0;
                for (i in s) __webpack_require__.o(s, i) && (__webpack_require__.m[i] = s[i]);
                if (o) var l = o(__webpack_require__);
                for (t && t(a); d < r.length; d++) n = r[d], __webpack_require__.o(e, n) && e[n] && e[n][0](), e[r[d]] = 0;
                return __webpack_require__.O(l)
            },
            a = self.webpackChunk = self.webpackChunk || [];
        a.forEach(t.bind(null, 0)), a.push = t.bind(null, a.push.bind(a))
    })(), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3878))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4532))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3147))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8178))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5133))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6721))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2716))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6045))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6576))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2880))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3879))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4166))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1554))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5555))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9916))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(877))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1915))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3737))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(217))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3949))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(681))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4874))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1065))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7201))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6224))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3184))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6935))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9886))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3314))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6117))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(364))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7138))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9960))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8095))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3106))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5250))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7957))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1669))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(974))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7565))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5688))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3830))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8872))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9786))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1882))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9205))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7603))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(295))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4117))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4163))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2895))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4599))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9459))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3177))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8180))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5775))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5792))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7977))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2325))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6550))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7710))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(629))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8369))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9920))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7439))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(10))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7513))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5350))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7336))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5321))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2733))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(306))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4810))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3109))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7836))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5228))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8542))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4111))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4376))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3074))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3764))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2841))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2899))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1667))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3958))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7240))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4457))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5416))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(383))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9946))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3950))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2512))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7610))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7828))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4248))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7495))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1015))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7684))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4173))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5903))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3906))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(770))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5891))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1676))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3616))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3362))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9932))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5462))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6535))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1632))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9425))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5305))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8722))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(36))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5744))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4664))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4018))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2102))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7448))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2280))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3390))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6219))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8291))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2745))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7011))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9329))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9591))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(169))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3382))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6619))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9434))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9239))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9110))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8343))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(312))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2565))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2458))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1753))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3666))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4116))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2142))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2958))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4592))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9807))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(569))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1611))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5697))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3985))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7510))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1307))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1698))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1230))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9828))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6758))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1622))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2229))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3788))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(26))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5397))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9544))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7492))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(566))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6789))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8681))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6544))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6315))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3445))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(794))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3592))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7465))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(766))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8525))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7970))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1105))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9470))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8433))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6539))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8418))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2267))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(502))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8283))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6551))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3219))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3851))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9113))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1613))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1693))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8821))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8277))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(318))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2383))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8621))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1948))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4477))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1470))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1448))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(8284))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(972))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(291))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(338))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4245))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7506))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2252))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9494))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5137))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(9))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3143))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(7097))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6884))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5919))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5908))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(6449))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(3257))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5913))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1123))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(2459))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(1033))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(4185))), __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(586)));
    var __webpack_exports__ = __webpack_require__.O(void 0, [278, 961, 477, 126, 349, 877, 134, 346], (() => __webpack_require__(5195)));
    __webpack_exports__ = __webpack_require__.O(__webpack_exports__)
})();
